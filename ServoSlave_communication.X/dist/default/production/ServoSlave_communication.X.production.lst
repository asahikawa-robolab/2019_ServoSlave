

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jul 13 09:56:37 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.00
    34                           ; Generated 27/05/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F18325 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000E                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008E                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0097                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010E                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  018C                     	;# 
   126  018E                     	;# 
   127  0197                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019B                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0219                     	;# 
   172  021A                     	;# 
   173  021B                     	;# 
   174  021C                     	;# 
   175  021D                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  028C                     	;# 
   180  028E                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0294                     	;# 
   186  0295                     	;# 
   187  0295                     	;# 
   188  0296                     	;# 
   189  0297                     	;# 
   190  0298                     	;# 
   191  029F                     	;# 
   192  030C                     	;# 
   193  030E                     	;# 
   194  0311                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0314                     	;# 
   199  0315                     	;# 
   200  0315                     	;# 
   201  0316                     	;# 
   202  0317                     	;# 
   203  0318                     	;# 
   204  038C                     	;# 
   205  038E                     	;# 
   206  0391                     	;# 
   207  0392                     	;# 
   208  0393                     	;# 
   209  0397                     	;# 
   210  0398                     	;# 
   211  0399                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0411                     	;# 
   218  0411                     	;# 
   219  0412                     	;# 
   220  0413                     	;# 
   221  0414                     	;# 
   222  0415                     	;# 
   223  0416                     	;# 
   224  0417                     	;# 
   225  0418                     	;# 
   226  0418                     	;# 
   227  0419                     	;# 
   228  041A                     	;# 
   229  041B                     	;# 
   230  041C                     	;# 
   231  041D                     	;# 
   232  041E                     	;# 
   233  041F                     	;# 
   234  0498                     	;# 
   235  0498                     	;# 
   236  0499                     	;# 
   237  049A                     	;# 
   238  049B                     	;# 
   239  049B                     	;# 
   240  049C                     	;# 
   241  049D                     	;# 
   242  049E                     	;# 
   243  049F                     	;# 
   244  0617                     	;# 
   245  0618                     	;# 
   246  0619                     	;# 
   247  0619                     	;# 
   248  061A                     	;# 
   249  061B                     	;# 
   250  061C                     	;# 
   251  061C                     	;# 
   252  061F                     	;# 
   253  0691                     	;# 
   254  0692                     	;# 
   255  0693                     	;# 
   256  0694                     	;# 
   257  0695                     	;# 
   258  0696                     	;# 
   259  0697                     	;# 
   260  0698                     	;# 
   261  0699                     	;# 
   262  0711                     	;# 
   263  0712                     	;# 
   264  0713                     	;# 
   265  0714                     	;# 
   266  0715                     	;# 
   267  0716                     	;# 
   268  0717                     	;# 
   269  0718                     	;# 
   270  0719                     	;# 
   271  0891                     	;# 
   272  0891                     	;# 
   273  0891                     	;# 
   274  0891                     	;# 
   275  0891                     	;# 
   276  0891                     	;# 
   277  0892                     	;# 
   278  0892                     	;# 
   279  0892                     	;# 
   280  0893                     	;# 
   281  0893                     	;# 
   282  0893                     	;# 
   283  0893                     	;# 
   284  0893                     	;# 
   285  0893                     	;# 
   286  0894                     	;# 
   287  0894                     	;# 
   288  0894                     	;# 
   289  0895                     	;# 
   290  0895                     	;# 
   291  0895                     	;# 
   292  0896                     	;# 
   293  0896                     	;# 
   294  0896                     	;# 
   295  089B                     	;# 
   296  0911                     	;# 
   297  0912                     	;# 
   298  0913                     	;# 
   299  0914                     	;# 
   300  0915                     	;# 
   301  0916                     	;# 
   302  0918                     	;# 
   303  0919                     	;# 
   304  091A                     	;# 
   305  091B                     	;# 
   306  091C                     	;# 
   307  091D                     	;# 
   308  091E                     	;# 
   309  091F                     	;# 
   310  0E0F                     	;# 
   311  0E10                     	;# 
   312  0E11                     	;# 
   313  0E12                     	;# 
   314  0E13                     	;# 
   315  0E14                     	;# 
   316  0E15                     	;# 
   317  0E16                     	;# 
   318  0E17                     	;# 
   319  0E18                     	;# 
   320  0E19                     	;# 
   321  0E1A                     	;# 
   322  0E1B                     	;# 
   323  0E1C                     	;# 
   324  0E1D                     	;# 
   325  0E1E                     	;# 
   326  0E1F                     	;# 
   327  0E20                     	;# 
   328  0E21                     	;# 
   329  0E22                     	;# 
   330  0E24                     	;# 
   331  0E25                     	;# 
   332  0E28                     	;# 
   333  0E29                     	;# 
   334  0E2A                     	;# 
   335  0E2B                     	;# 
   336  0E2C                     	;# 
   337  0E2D                     	;# 
   338  0E2E                     	;# 
   339  0E2F                     	;# 
   340  0E90                     	;# 
   341  0E91                     	;# 
   342  0E92                     	;# 
   343  0E94                     	;# 
   344  0E95                     	;# 
   345  0EA0                     	;# 
   346  0EA1                     	;# 
   347  0EA2                     	;# 
   348  0EA3                     	;# 
   349  0EA4                     	;# 
   350  0EA5                     	;# 
   351  0F0F                     	;# 
   352  0F10                     	;# 
   353  0F11                     	;# 
   354  0F12                     	;# 
   355  0F13                     	;# 
   356  0F14                     	;# 
   357  0F15                     	;# 
   358  0F16                     	;# 
   359  0F17                     	;# 
   360  0F18                     	;# 
   361  0F19                     	;# 
   362  0F1A                     	;# 
   363  0F1B                     	;# 
   364  0F1C                     	;# 
   365  0F1D                     	;# 
   366  0F1E                     	;# 
   367  0F1F                     	;# 
   368  0F20                     	;# 
   369  0F21                     	;# 
   370  0F22                     	;# 
   371  0F23                     	;# 
   372  0F24                     	;# 
   373  0F25                     	;# 
   374  0F26                     	;# 
   375  0F27                     	;# 
   376  0F28                     	;# 
   377  0F29                     	;# 
   378  0F2A                     	;# 
   379  0F2B                     	;# 
   380  0F2C                     	;# 
   381  0F2D                     	;# 
   382  0F2E                     	;# 
   383  0F2F                     	;# 
   384  0F30                     	;# 
   385  0F31                     	;# 
   386  0F32                     	;# 
   387  0F33                     	;# 
   388  0F34                     	;# 
   389  0F35                     	;# 
   390  0F36                     	;# 
   391  0F37                     	;# 
   392  0FE4                     	;# 
   393  0FE5                     	;# 
   394  0FE6                     	;# 
   395  0FE7                     	;# 
   396  0FE8                     	;# 
   397  0FE9                     	;# 
   398  0FEA                     	;# 
   399  0FEB                     	;# 
   400  0FED                     	;# 
   401  0FEE                     	;# 
   402  0FEF                     	;# 
   403  0000                     	;# 
   404  0001                     	;# 
   405  0002                     	;# 
   406  0003                     	;# 
   407  0004                     	;# 
   408  0005                     	;# 
   409  0006                     	;# 
   410  0007                     	;# 
   411  0008                     	;# 
   412  0009                     	;# 
   413  000A                     	;# 
   414  000B                     	;# 
   415  000C                     	;# 
   416  000E                     	;# 
   417  0010                     	;# 
   418  0011                     	;# 
   419  0012                     	;# 
   420  0013                     	;# 
   421  0014                     	;# 
   422  0015                     	;# 
   423  0015                     	;# 
   424  0016                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  008C                     	;# 
   437  008E                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0097                     	;# 
   444  009B                     	;# 
   445  009B                     	;# 
   446  009C                     	;# 
   447  009D                     	;# 
   448  009E                     	;# 
   449  009F                     	;# 
   450  010C                     	;# 
   451  010E                     	;# 
   452  0111                     	;# 
   453  0112                     	;# 
   454  0113                     	;# 
   455  0114                     	;# 
   456  0115                     	;# 
   457  0116                     	;# 
   458  0117                     	;# 
   459  0118                     	;# 
   460  0119                     	;# 
   461  018C                     	;# 
   462  018E                     	;# 
   463  0197                     	;# 
   464  0199                     	;# 
   465  0199                     	;# 
   466  0199                     	;# 
   467  019A                     	;# 
   468  019A                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019C                     	;# 
   476  019C                     	;# 
   477  019C                     	;# 
   478  019D                     	;# 
   479  019D                     	;# 
   480  019D                     	;# 
   481  019E                     	;# 
   482  019E                     	;# 
   483  019E                     	;# 
   484  019F                     	;# 
   485  019F                     	;# 
   486  019F                     	;# 
   487  019F                     	;# 
   488  019F                     	;# 
   489  020C                     	;# 
   490  020E                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0216                     	;# 
   504  0216                     	;# 
   505  0217                     	;# 
   506  0217                     	;# 
   507  0219                     	;# 
   508  021A                     	;# 
   509  021B                     	;# 
   510  021C                     	;# 
   511  021D                     	;# 
   512  021D                     	;# 
   513  021E                     	;# 
   514  021F                     	;# 
   515  028C                     	;# 
   516  028E                     	;# 
   517  0291                     	;# 
   518  0291                     	;# 
   519  0292                     	;# 
   520  0293                     	;# 
   521  0294                     	;# 
   522  0295                     	;# 
   523  0295                     	;# 
   524  0296                     	;# 
   525  0297                     	;# 
   526  0298                     	;# 
   527  029F                     	;# 
   528  030C                     	;# 
   529  030E                     	;# 
   530  0311                     	;# 
   531  0311                     	;# 
   532  0312                     	;# 
   533  0313                     	;# 
   534  0314                     	;# 
   535  0315                     	;# 
   536  0315                     	;# 
   537  0316                     	;# 
   538  0317                     	;# 
   539  0318                     	;# 
   540  038C                     	;# 
   541  038E                     	;# 
   542  0391                     	;# 
   543  0392                     	;# 
   544  0393                     	;# 
   545  0397                     	;# 
   546  0398                     	;# 
   547  0399                     	;# 
   548  039A                     	;# 
   549  039C                     	;# 
   550  039D                     	;# 
   551  039E                     	;# 
   552  039F                     	;# 
   553  0411                     	;# 
   554  0411                     	;# 
   555  0412                     	;# 
   556  0413                     	;# 
   557  0414                     	;# 
   558  0415                     	;# 
   559  0416                     	;# 
   560  0417                     	;# 
   561  0418                     	;# 
   562  0418                     	;# 
   563  0419                     	;# 
   564  041A                     	;# 
   565  041B                     	;# 
   566  041C                     	;# 
   567  041D                     	;# 
   568  041E                     	;# 
   569  041F                     	;# 
   570  0498                     	;# 
   571  0498                     	;# 
   572  0499                     	;# 
   573  049A                     	;# 
   574  049B                     	;# 
   575  049B                     	;# 
   576  049C                     	;# 
   577  049D                     	;# 
   578  049E                     	;# 
   579  049F                     	;# 
   580  0617                     	;# 
   581  0618                     	;# 
   582  0619                     	;# 
   583  0619                     	;# 
   584  061A                     	;# 
   585  061B                     	;# 
   586  061C                     	;# 
   587  061C                     	;# 
   588  061F                     	;# 
   589  0691                     	;# 
   590  0692                     	;# 
   591  0693                     	;# 
   592  0694                     	;# 
   593  0695                     	;# 
   594  0696                     	;# 
   595  0697                     	;# 
   596  0698                     	;# 
   597  0699                     	;# 
   598  0711                     	;# 
   599  0712                     	;# 
   600  0713                     	;# 
   601  0714                     	;# 
   602  0715                     	;# 
   603  0716                     	;# 
   604  0717                     	;# 
   605  0718                     	;# 
   606  0719                     	;# 
   607  0891                     	;# 
   608  0891                     	;# 
   609  0891                     	;# 
   610  0891                     	;# 
   611  0891                     	;# 
   612  0891                     	;# 
   613  0892                     	;# 
   614  0892                     	;# 
   615  0892                     	;# 
   616  0893                     	;# 
   617  0893                     	;# 
   618  0893                     	;# 
   619  0893                     	;# 
   620  0893                     	;# 
   621  0893                     	;# 
   622  0894                     	;# 
   623  0894                     	;# 
   624  0894                     	;# 
   625  0895                     	;# 
   626  0895                     	;# 
   627  0895                     	;# 
   628  0896                     	;# 
   629  0896                     	;# 
   630  0896                     	;# 
   631  089B                     	;# 
   632  0911                     	;# 
   633  0912                     	;# 
   634  0913                     	;# 
   635  0914                     	;# 
   636  0915                     	;# 
   637  0916                     	;# 
   638  0918                     	;# 
   639  0919                     	;# 
   640  091A                     	;# 
   641  091B                     	;# 
   642  091C                     	;# 
   643  091D                     	;# 
   644  091E                     	;# 
   645  091F                     	;# 
   646  0E0F                     	;# 
   647  0E10                     	;# 
   648  0E11                     	;# 
   649  0E12                     	;# 
   650  0E13                     	;# 
   651  0E14                     	;# 
   652  0E15                     	;# 
   653  0E16                     	;# 
   654  0E17                     	;# 
   655  0E18                     	;# 
   656  0E19                     	;# 
   657  0E1A                     	;# 
   658  0E1B                     	;# 
   659  0E1C                     	;# 
   660  0E1D                     	;# 
   661  0E1E                     	;# 
   662  0E1F                     	;# 
   663  0E20                     	;# 
   664  0E21                     	;# 
   665  0E22                     	;# 
   666  0E24                     	;# 
   667  0E25                     	;# 
   668  0E28                     	;# 
   669  0E29                     	;# 
   670  0E2A                     	;# 
   671  0E2B                     	;# 
   672  0E2C                     	;# 
   673  0E2D                     	;# 
   674  0E2E                     	;# 
   675  0E2F                     	;# 
   676  0E90                     	;# 
   677  0E91                     	;# 
   678  0E92                     	;# 
   679  0E94                     	;# 
   680  0E95                     	;# 
   681  0EA0                     	;# 
   682  0EA1                     	;# 
   683  0EA2                     	;# 
   684  0EA3                     	;# 
   685  0EA4                     	;# 
   686  0EA5                     	;# 
   687  0F0F                     	;# 
   688  0F10                     	;# 
   689  0F11                     	;# 
   690  0F12                     	;# 
   691  0F13                     	;# 
   692  0F14                     	;# 
   693  0F15                     	;# 
   694  0F16                     	;# 
   695  0F17                     	;# 
   696  0F18                     	;# 
   697  0F19                     	;# 
   698  0F1A                     	;# 
   699  0F1B                     	;# 
   700  0F1C                     	;# 
   701  0F1D                     	;# 
   702  0F1E                     	;# 
   703  0F1F                     	;# 
   704  0F20                     	;# 
   705  0F21                     	;# 
   706  0F22                     	;# 
   707  0F23                     	;# 
   708  0F24                     	;# 
   709  0F25                     	;# 
   710  0F26                     	;# 
   711  0F27                     	;# 
   712  0F28                     	;# 
   713  0F29                     	;# 
   714  0F2A                     	;# 
   715  0F2B                     	;# 
   716  0F2C                     	;# 
   717  0F2D                     	;# 
   718  0F2E                     	;# 
   719  0F2F                     	;# 
   720  0F30                     	;# 
   721  0F31                     	;# 
   722  0F32                     	;# 
   723  0F33                     	;# 
   724  0F34                     	;# 
   725  0F35                     	;# 
   726  0F36                     	;# 
   727  0F37                     	;# 
   728  0FE4                     	;# 
   729  0FE5                     	;# 
   730  0FE6                     	;# 
   731  0FE7                     	;# 
   732  0FE8                     	;# 
   733  0FE9                     	;# 
   734  0FEA                     	;# 
   735  0FEB                     	;# 
   736  0FED                     	;# 
   737  0FEE                     	;# 
   738  0FEF                     	;# 
   739  0000                     	;# 
   740  0001                     	;# 
   741  0002                     	;# 
   742  0003                     	;# 
   743  0004                     	;# 
   744  0005                     	;# 
   745  0006                     	;# 
   746  0007                     	;# 
   747  0008                     	;# 
   748  0009                     	;# 
   749  000A                     	;# 
   750  000B                     	;# 
   751  000C                     	;# 
   752  000E                     	;# 
   753  0010                     	;# 
   754  0011                     	;# 
   755  0012                     	;# 
   756  0013                     	;# 
   757  0014                     	;# 
   758  0015                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  0019                     	;# 
   766  001A                     	;# 
   767  001B                     	;# 
   768  001C                     	;# 
   769  001D                     	;# 
   770  001E                     	;# 
   771  001F                     	;# 
   772  008C                     	;# 
   773  008E                     	;# 
   774  0090                     	;# 
   775  0091                     	;# 
   776  0092                     	;# 
   777  0093                     	;# 
   778  0094                     	;# 
   779  0097                     	;# 
   780  009B                     	;# 
   781  009B                     	;# 
   782  009C                     	;# 
   783  009D                     	;# 
   784  009E                     	;# 
   785  009F                     	;# 
   786  010C                     	;# 
   787  010E                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0113                     	;# 
   791  0114                     	;# 
   792  0115                     	;# 
   793  0116                     	;# 
   794  0117                     	;# 
   795  0118                     	;# 
   796  0119                     	;# 
   797  018C                     	;# 
   798  018E                     	;# 
   799  0197                     	;# 
   800  0199                     	;# 
   801  0199                     	;# 
   802  0199                     	;# 
   803  019A                     	;# 
   804  019A                     	;# 
   805  019A                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019B                     	;# 
   810  019B                     	;# 
   811  019C                     	;# 
   812  019C                     	;# 
   813  019C                     	;# 
   814  019D                     	;# 
   815  019D                     	;# 
   816  019D                     	;# 
   817  019E                     	;# 
   818  019E                     	;# 
   819  019E                     	;# 
   820  019F                     	;# 
   821  019F                     	;# 
   822  019F                     	;# 
   823  019F                     	;# 
   824  019F                     	;# 
   825  020C                     	;# 
   826  020E                     	;# 
   827  0211                     	;# 
   828  0211                     	;# 
   829  0212                     	;# 
   830  0212                     	;# 
   831  0213                     	;# 
   832  0213                     	;# 
   833  0214                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0215                     	;# 
   838  0215                     	;# 
   839  0216                     	;# 
   840  0216                     	;# 
   841  0217                     	;# 
   842  0217                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021C                     	;# 
   847  021D                     	;# 
   848  021D                     	;# 
   849  021E                     	;# 
   850  021F                     	;# 
   851  028C                     	;# 
   852  028E                     	;# 
   853  0291                     	;# 
   854  0291                     	;# 
   855  0292                     	;# 
   856  0293                     	;# 
   857  0294                     	;# 
   858  0295                     	;# 
   859  0295                     	;# 
   860  0296                     	;# 
   861  0297                     	;# 
   862  0298                     	;# 
   863  029F                     	;# 
   864  030C                     	;# 
   865  030E                     	;# 
   866  0311                     	;# 
   867  0311                     	;# 
   868  0312                     	;# 
   869  0313                     	;# 
   870  0314                     	;# 
   871  0315                     	;# 
   872  0315                     	;# 
   873  0316                     	;# 
   874  0317                     	;# 
   875  0318                     	;# 
   876  038C                     	;# 
   877  038E                     	;# 
   878  0391                     	;# 
   879  0392                     	;# 
   880  0393                     	;# 
   881  0397                     	;# 
   882  0398                     	;# 
   883  0399                     	;# 
   884  039A                     	;# 
   885  039C                     	;# 
   886  039D                     	;# 
   887  039E                     	;# 
   888  039F                     	;# 
   889  0411                     	;# 
   890  0411                     	;# 
   891  0412                     	;# 
   892  0413                     	;# 
   893  0414                     	;# 
   894  0415                     	;# 
   895  0416                     	;# 
   896  0417                     	;# 
   897  0418                     	;# 
   898  0418                     	;# 
   899  0419                     	;# 
   900  041A                     	;# 
   901  041B                     	;# 
   902  041C                     	;# 
   903  041D                     	;# 
   904  041E                     	;# 
   905  041F                     	;# 
   906  0498                     	;# 
   907  0498                     	;# 
   908  0499                     	;# 
   909  049A                     	;# 
   910  049B                     	;# 
   911  049B                     	;# 
   912  049C                     	;# 
   913  049D                     	;# 
   914  049E                     	;# 
   915  049F                     	;# 
   916  0617                     	;# 
   917  0618                     	;# 
   918  0619                     	;# 
   919  0619                     	;# 
   920  061A                     	;# 
   921  061B                     	;# 
   922  061C                     	;# 
   923  061C                     	;# 
   924  061F                     	;# 
   925  0691                     	;# 
   926  0692                     	;# 
   927  0693                     	;# 
   928  0694                     	;# 
   929  0695                     	;# 
   930  0696                     	;# 
   931  0697                     	;# 
   932  0698                     	;# 
   933  0699                     	;# 
   934  0711                     	;# 
   935  0712                     	;# 
   936  0713                     	;# 
   937  0714                     	;# 
   938  0715                     	;# 
   939  0716                     	;# 
   940  0717                     	;# 
   941  0718                     	;# 
   942  0719                     	;# 
   943  0891                     	;# 
   944  0891                     	;# 
   945  0891                     	;# 
   946  0891                     	;# 
   947  0891                     	;# 
   948  0891                     	;# 
   949  0892                     	;# 
   950  0892                     	;# 
   951  0892                     	;# 
   952  0893                     	;# 
   953  0893                     	;# 
   954  0893                     	;# 
   955  0893                     	;# 
   956  0893                     	;# 
   957  0893                     	;# 
   958  0894                     	;# 
   959  0894                     	;# 
   960  0894                     	;# 
   961  0895                     	;# 
   962  0895                     	;# 
   963  0895                     	;# 
   964  0896                     	;# 
   965  0896                     	;# 
   966  0896                     	;# 
   967  089B                     	;# 
   968  0911                     	;# 
   969  0912                     	;# 
   970  0913                     	;# 
   971  0914                     	;# 
   972  0915                     	;# 
   973  0916                     	;# 
   974  0918                     	;# 
   975  0919                     	;# 
   976  091A                     	;# 
   977  091B                     	;# 
   978  091C                     	;# 
   979  091D                     	;# 
   980  091E                     	;# 
   981  091F                     	;# 
   982  0E0F                     	;# 
   983  0E10                     	;# 
   984  0E11                     	;# 
   985  0E12                     	;# 
   986  0E13                     	;# 
   987  0E14                     	;# 
   988  0E15                     	;# 
   989  0E16                     	;# 
   990  0E17                     	;# 
   991  0E18                     	;# 
   992  0E19                     	;# 
   993  0E1A                     	;# 
   994  0E1B                     	;# 
   995  0E1C                     	;# 
   996  0E1D                     	;# 
   997  0E1E                     	;# 
   998  0E1F                     	;# 
   999  0E20                     	;# 
  1000  0E21                     	;# 
  1001  0E22                     	;# 
  1002  0E24                     	;# 
  1003  0E25                     	;# 
  1004  0E28                     	;# 
  1005  0E29                     	;# 
  1006  0E2A                     	;# 
  1007  0E2B                     	;# 
  1008  0E2C                     	;# 
  1009  0E2D                     	;# 
  1010  0E2E                     	;# 
  1011  0E2F                     	;# 
  1012  0E90                     	;# 
  1013  0E91                     	;# 
  1014  0E92                     	;# 
  1015  0E94                     	;# 
  1016  0E95                     	;# 
  1017  0EA0                     	;# 
  1018  0EA1                     	;# 
  1019  0EA2                     	;# 
  1020  0EA3                     	;# 
  1021  0EA4                     	;# 
  1022  0EA5                     	;# 
  1023  0F0F                     	;# 
  1024  0F10                     	;# 
  1025  0F11                     	;# 
  1026  0F12                     	;# 
  1027  0F13                     	;# 
  1028  0F14                     	;# 
  1029  0F15                     	;# 
  1030  0F16                     	;# 
  1031  0F17                     	;# 
  1032  0F18                     	;# 
  1033  0F19                     	;# 
  1034  0F1A                     	;# 
  1035  0F1B                     	;# 
  1036  0F1C                     	;# 
  1037  0F1D                     	;# 
  1038  0F1E                     	;# 
  1039  0F1F                     	;# 
  1040  0F20                     	;# 
  1041  0F21                     	;# 
  1042  0F22                     	;# 
  1043  0F23                     	;# 
  1044  0F24                     	;# 
  1045  0F25                     	;# 
  1046  0F26                     	;# 
  1047  0F27                     	;# 
  1048  0F28                     	;# 
  1049  0F29                     	;# 
  1050  0F2A                     	;# 
  1051  0F2B                     	;# 
  1052  0F2C                     	;# 
  1053  0F2D                     	;# 
  1054  0F2E                     	;# 
  1055  0F2F                     	;# 
  1056  0F30                     	;# 
  1057  0F31                     	;# 
  1058  0F32                     	;# 
  1059  0F33                     	;# 
  1060  0F34                     	;# 
  1061  0F35                     	;# 
  1062  0F36                     	;# 
  1063  0F37                     	;# 
  1064  0FE4                     	;# 
  1065  0FE5                     	;# 
  1066  0FE6                     	;# 
  1067  0FE7                     	;# 
  1068  0FE8                     	;# 
  1069  0FE9                     	;# 
  1070  0FEA                     	;# 
  1071  0FEB                     	;# 
  1072  0FED                     	;# 
  1073  0FEE                     	;# 
  1074  0FEF                     	;# 
  1075                           
  1076                           	psect	idataBANK0
  1077  056C                     __pidataBANK0:	
  1078                           
  1079                           ;initializer for _slave_different_flag
  1080  056C  3402               	retlw	2
  1081                           
  1082                           ;initializer for _Receive_flag
  1083  056D  3401               	retlw	1
  1084  000B                     _INTCONbits	set	11
  1085  0011                     _PIR1bits	set	17
  1086  005F                     _GIE	set	95
  1087  0091                     _PIE1bits	set	145
  1088  008E                     _TRISCbits	set	142
  1089  008C                     _TRISAbits	set	140
  1090  010C                     _LATAbits	set	268
  1091  010E                     _LATCbits	set	270
  1092  0199                     _RC1REG	set	409
  1093  019D                     _RC1STAbits	set	413
  1094  019F                     _BAUD1CONbits	set	415
  1095  019E                     _TX1STAbits	set	414
  1096  019B                     _SP1BRGL	set	411
  1097  019C                     _SP1BRGH	set	412
  1098  018C                     _ANSELA	set	396
  1099  091F                     _OSCFRQ	set	2335
  1100  0919                     _OSCCON1	set	2329
  1101  48E0                     _PLLR	set	18656
  1102  0E24                     _RXPPS	set	3620
  1103  0E0F                     _PPSLOCKbits	set	3599
  1104  0E0F                     _PPSLOCK	set	3599
  1105                           
  1106                           ; #config settings
  1107  0000                     
  1108                           	psect	cinit
  1109  0010                     start_initialization:	
  1110  0010                     __initialization:	
  1111                           
  1112                           ; Initialize objects allocated to BANK0
  1113  0010  3185  256C  3180   	fcall	__pidataBANK0	;fetch initializer
  1114  0013  00E6               	movwf	__pdataBANK0& (0+127)
  1115  0014  3185  256D  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1116  0017  00E7               	movwf	(__pdataBANK0+1)& (0+127)
  1117                           
  1118                           ; Clear objects allocated to BANK0
  1119  0018  3020               	movlw	low __pbssBANK0
  1120  0019  0084               	movwf	4
  1121  001A  3000               	movlw	high __pbssBANK0
  1122  001B  0085               	movwf	5
  1123  001C  3031               	movlw	49
  1124  001D  3185  2560         	fcall	clear_ram0
  1125  001F                     end_of_initialization:	
  1126                           ;End of C runtime variable initialization code
  1127                           
  1128  001F                     __end_of__initialization:	
  1129  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1130  0020  0020               	movlb	0
  1131  0021  3184  2C6F         	ljmp	_main	;jump to C main() function
  1132                           
  1133                           	psect	bssBANK0
  1134  0020                     __pbssBANK0:	
  1135  0020                     _SeP:	
  1136  0020                     	ds	5
  1137  0025                     _StP:	
  1138  0025                     	ds	4
  1139  0029                     _OP:	
  1140  0029                     	ds	4
  1141  002D                     Initialize_Parameters@i:	
  1142  002D                     	ds	2
  1143  002F                     _zero:	
  1144  002F                     	ds	2
  1145  0031                     _address:	
  1146  0031                     	ds	2
  1147  0033                     _not_of_before_data:	
  1148  0033                     	ds	1
  1149  0034                     Reception_from_master@Receive_data_count:	
  1150  0034                     	ds	1
  1151  0035                     _address_status:	
  1152  0035                     	ds	1
  1153  0036                     _Buffer0:	
  1154  0036                     	ds	15
  1155  0045                     _RxData0:	
  1156  0045                     	ds	12
  1157                           
  1158                           	psect	dataBANK0
  1159  0066                     __pdataBANK0:	
  1160  0066                     _slave_different_flag:	
  1161  0066                     	ds	1
  1162  0067                     _Receive_flag:	
  1163  0067                     	ds	1
  1164                           
  1165                           	psect	clrtext
  1166  0560                     clear_ram0:	
  1167                           ;	Called with FSR0 containing the base address, and
  1168                           ;	WREG with the size to clear
  1169                           
  1170  0560  0064               	clrwdt	;clear the watchdog before getting into this loop
  1171  0561                     clrloop0:	
  1172  0561  0180               	clrf	0	;clear RAM location pointed to by FSR
  1173  0562  3101               	addfsr 0,1
  1174  0563  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1175  0564  2D61               	goto	clrloop0	;have we reached the end yet?
  1176  0565  3400               	retlw	0	;all done for this memory range, return
  1177                           
  1178                           	psect	cstackBANK1
  1179  00A0                     __pcstackBANK1:	
  1180  00A0                     ?_main:	
  1181  00A0                     main@argc:	
  1182                           ; 2 bytes @ 0x0
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x0
  1186  00A0                     	ds	2
  1187  00A2                     main@argv:	
  1188                           
  1189                           ; 2 bytes @ 0x2
  1190  00A2                     	ds	2
  1191                           
  1192                           	psect	cstackCOMMON
  1193  0070                     __pcstackCOMMON:	
  1194  0070                     ?_Initialize:	
  1195  0070                     ?_Reception_from_master_main:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_SetData:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_ChangeAddress:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_ChangeData:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_Reception_from_master:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_Oscillator_Initialize:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_Pin_Initialize:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ?_UART_Initialize:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_Initialize_Parameters:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ?_slave_address_check:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_INTERRUPT_HANDLER:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ?_EUSART_ERROR_from_master:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ??_EUSART_ERROR_from_master:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     slave_address_check@slave_address:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x0
  1239  0070                     	ds	1
  1240  0071                     EUSART_ERROR_from_master@waste_data:	
  1241  0071                     slave_address_check@slave_flag:	
  1242                           ; 1 bytes @ 0x1
  1243                           
  1244                           
  1245                           ; 1 bytes @ 0x1
  1246  0071                     	ds	1
  1247  0072                     ?_Store_Datas:	
  1248  0072                     ??_slave_address_check:	
  1249                           ; 1 bytes @ 0x2
  1250                           
  1251  0072                     Store_Datas@received_data:	
  1252                           ; 1 bytes @ 0x2
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x2
  1256  0072                     	ds	1
  1257  0073                     Store_Datas@number_of_receive_data:	
  1258                           
  1259                           ; 2 bytes @ 0x3
  1260  0073                     	ds	2
  1261  0075                     slave_address_check@data_count:	
  1262  0075                     Store_Datas@bus_number:	
  1263                           ; 1 bytes @ 0x5
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0x5
  1267  0075                     	ds	1
  1268  0076                     slave_address_check@sample_data:	
  1269                           
  1270                           ; 1 bytes @ 0x6
  1271  0076                     	ds	1
  1272  0077                     Store_Datas@EUSART_ERROR:	
  1273                           
  1274                           ; 2 bytes @ 0x7
  1275  0077                     	ds	2
  1276  0079                     Store_Datas@Buffer:	
  1277                           
  1278                           ; 1 bytes @ 0x9
  1279  0079                     	ds	1
  1280  007A                     ??_Reception_from_master:	
  1281                           
  1282                           ; 1 bytes @ 0xA
  1283  007A                     	ds	3
  1284  007D                     ??_INTERRUPT_HANDLER:	
  1285                           
  1286                           	psect	cstackBANK0
  1287  0051                     __pcstackBANK0:	
  1288                           ; 1 bytes @ 0xD
  1289                           
  1290  0051                     ??_Store_Datas:	
  1291                           
  1292                           ; 1 bytes @ 0x0
  1293  0051                     	ds	6
  1294  0057                     Reception_from_master@slave_address:	
  1295                           
  1296                           ; 1 bytes @ 0x6
  1297  0057                     	ds	1
  1298  0058                     Reception_from_master@error_complete:	
  1299                           
  1300                           ; 1 bytes @ 0x7
  1301  0058                     	ds	1
  1302  0059                     ?_Organize_Datas:	
  1303  0059                     ?_Write_Address:	
  1304                           ; 1 bytes @ 0x8
  1305                           
  1306  0059                     ?_Write_data:	
  1307                           ; 1 bytes @ 0x8
  1308                           
  1309  0059                     ??_Oscillator_Initialize:	
  1310                           ; 1 bytes @ 0x8
  1311                           
  1312  0059                     ??_Pin_Initialize:	
  1313                           ; 1 bytes @ 0x8
  1314                           
  1315  0059                     ??_UART_Initialize:	
  1316                           ; 1 bytes @ 0x8
  1317                           
  1318  0059                     ?___bmul:	
  1319                           ; 1 bytes @ 0x8
  1320                           
  1321  0059                     Pin_Initialize@state:	
  1322                           ; 1 bytes @ 0x8
  1323                           
  1324  0059                     Organize_Datas@Buffer:	
  1325                           ; 1 bytes @ 0x8
  1326                           
  1327  0059                     ___bmul@multiplicand:	
  1328                           ; 1 bytes @ 0x8
  1329                           
  1330  0059                     Write_Address@address:	
  1331                           ; 1 bytes @ 0x8
  1332                           
  1333  0059                     Write_data@servo_data:	
  1334                           ; 2 bytes @ 0x8
  1335                           
  1336                           
  1337                           ; 2 bytes @ 0x8
  1338  0059                     	ds	1
  1339  005A                     ??___bmul:	
  1340  005A                     Organize_Datas@number_of_data:	
  1341                           ; 1 bytes @ 0x9
  1342                           
  1343                           
  1344                           ; 2 bytes @ 0x9
  1345  005A                     	ds	1
  1346  005B                     ??_ChangeAddress:	
  1347  005B                     ??_ChangeData:	
  1348                           ; 1 bytes @ 0xA
  1349                           
  1350  005B                     ??_Write_Address:	
  1351                           ; 1 bytes @ 0xA
  1352                           
  1353  005B                     ??_Write_data:	
  1354                           ; 1 bytes @ 0xA
  1355                           
  1356  005B                     ___bmul@product:	
  1357                           ; 1 bytes @ 0xA
  1358                           
  1359                           
  1360                           ; 1 bytes @ 0xA
  1361  005B                     	ds	1
  1362  005C                     ___bmul@multiplier:	
  1363  005C                     ChangeAddress@None:	
  1364                           ; 1 bytes @ 0xB
  1365                           
  1366  005C                     Organize_Datas@bus_number:	
  1367                           ; 2 bytes @ 0xB
  1368                           
  1369                           
  1370                           ; 2 bytes @ 0xB
  1371  005C                     	ds	1
  1372  005D                     ??_Initialize_Parameters:	
  1373                           
  1374                           ; 1 bytes @ 0xC
  1375  005D                     	ds	1
  1376  005E                     ??_Initialize:	
  1377  005E                     ??_Organize_Datas:	
  1378                           ; 1 bytes @ 0xD
  1379                           
  1380  005E                     ??_SetData:	
  1381                           ; 1 bytes @ 0xD
  1382                           
  1383                           
  1384                           ; 1 bytes @ 0xD
  1385  005E                     	ds	5
  1386  0063                     Organize_Datas@RxData:	
  1387                           
  1388                           ; 1 bytes @ 0x12
  1389  0063                     	ds	1
  1390  0064                     ??_Reception_from_master_main:	
  1391                           
  1392                           ; 1 bytes @ 0x13
  1393  0064                     	ds	1
  1394  0065                     ??_main:	
  1395                           
  1396                           ; 1 bytes @ 0x14
  1397  0065                     	ds	1
  1398                           
  1399                           	psect	maintext
  1400  046F                     __pmaintext:	
  1401 ;;
  1402 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1403 ;;
  1404 ;; *************** function _main *****************
  1405 ;; Defined at:
  1406 ;;		line 121 in file "main.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  argc            2    0[BANK1 ] int 
  1409 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  2    0[BANK1 ] int 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : B1F/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1421 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1424 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1425 ;;Total ram usage:        5 bytes
  1426 ;; Hardware stack levels required when called:    7
  1427 ;; This function calls:
  1428 ;;		_Initialize
  1429 ;;		_Organize_Datas
  1430 ;;		_Reception_from_master_main
  1431 ;;		_SetData
  1432 ;; This function is called by:
  1433 ;;		Startup code after reset
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _main
  1439  046F                     _main:	
  1440                           
  1441                           ;main.c: 122: Initialize();
  1442                           
  1443                           ;incstack = 0
  1444                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1445  046F  3185  2513  3184   	fcall	_Initialize
  1446  0472                     l1470:	
  1447                           ;main.c: 125: while (Receive_flag != 0);
  1448                           
  1449  0472  0020               	movlb	0	; select bank0
  1450  0473  0867               	movf	_Receive_flag,w
  1451  0474  1D03               	btfss	3,2
  1452  0475  2C72               	goto	l1470
  1453                           
  1454                           ;main.c: 126: Organize_Datas(RxData0, Buffer0, 6, 0);
  1455  0476  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  1456  0477  00E5               	movwf	??_main
  1457  0478  0865               	movf	??_main,w
  1458  0479  00D9               	movwf	Organize_Datas@Buffer
  1459  047A  3006               	movlw	6
  1460  047B  00DA               	movwf	Organize_Datas@number_of_data
  1461  047C  3000               	movlw	0
  1462  047D  00DB               	movwf	Organize_Datas@number_of_data+1
  1463  047E  3000               	movlw	0
  1464  047F  00DC               	movwf	Organize_Datas@bus_number
  1465  0480  00DD               	movwf	Organize_Datas@bus_number+1
  1466  0481  3045               	movlw	(low (_RxData0| 0))& (0+255)
  1467  0482  3181  21AF  3184   	fcall	_Organize_Datas
  1468                           
  1469                           ;main.c: 127: Receive_flag = 1;
  1470  0485  0020               	movlb	0	; select bank0
  1471  0486  01E7               	clrf	_Receive_flag
  1472  0487  0AE7               	incf	_Receive_flag,f
  1473  0488                     l1476:	
  1474                           ;main.c: 130: while (1) {
  1475                           
  1476                           
  1477                           ;main.c: 131: if (Receive_flag == 0) {
  1478  0488  0020               	movlb	0	; select bank0
  1479  0489  0867               	movf	_Receive_flag,w
  1480  048A  1D03               	btfss	3,2
  1481  048B  2C88               	goto	l1476
  1482                           
  1483                           ;main.c: 132: Reception_from_master_main();
  1484  048C  3184  24DA  3184   	fcall	_Reception_from_master_main
  1485                           
  1486                           ;main.c: 133: SetData();
  1487  048F  3185  2566  3184   	fcall	_SetData
  1488  0492  2C88               	goto	l1476
  1489  0493                     __end_of_main:	
  1490                           ;main.c: 135: };main.c: 136: };main.c: 138: return (0);;	Return value of _main is never 
      +                          used
  1491                           
  1492                           
  1493                           	psect	text1
  1494  0566                     __ptext1:	
  1495 ;; *************** function _SetData *****************
  1496 ;; Defined at:
  1497 ;;		line 141 in file "main.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    6
  1518 ;; This function calls:
  1519 ;;		_ChangeAddress
  1520 ;;		_ChangeData
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _SetData
  1528  0566                     _SetData:	
  1529                           
  1530                           ;main.c: 143: ChangeAddress();
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _SetData: [wreg+status,2+status,0+pclath+cstack]
  1534  0566  3184  24B7  3185   	fcall	_ChangeAddress
  1535                           
  1536                           ;main.c: 144: ChangeData();
  1537  0569  3183  236C         	fcall	_ChangeData
  1538  056B  0008               	return
  1539  056C                     __end_of_SetData:	
  1540                           
  1541                           	psect	text2
  1542  036C                     __ptext2:	
  1543 ;; *************** function _ChangeData *****************
  1544 ;; Defined at:
  1545 ;;		line 187 in file "main.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    5
  1566 ;; This function calls:
  1567 ;;		_Write_data
  1568 ;; This function is called by:
  1569 ;;		_SetData
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _ChangeData
  1575  036C                     _ChangeData:	
  1576                           
  1577                           ;main.c: 190: if (address.all_data == 1) {
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _ChangeData: [wreg+status,2+status,0+pclath+cstack]
  1581  036C  0020               	movlb	0	; select bank0
  1582  036D  0331               	decf	_address,w
  1583  036E  1D03               	btfss	3,2
  1584  036F  2B82               	goto	l1196
  1585                           
  1586                           ;main.c: 191: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1587  0370  084F               	movf	_RxData0+10,w
  1588  0371  1D03               	btfss	3,2
  1589  0372  2B7A               	goto	l1194
  1590  0373  0830               	movf	_zero+1,w
  1591  0374  00DA               	movwf	Write_data@servo_data+1
  1592  0375  082F               	movf	_zero,w
  1593  0376  00D9               	movwf	Write_data@servo_data
  1594  0377  3184  240E         	fcall	_Write_data
  1595  0379  0008               	return
  1596  037A                     l1194:	
  1597                           
  1598                           ;main.c: 192: else Write_data(RxData0[1]);
  1599  037A  0020               	movlb	0	; select bank0
  1600  037B  0848               	movf	_RxData0+3,w
  1601  037C  00DA               	movwf	Write_data@servo_data+1
  1602  037D  0847               	movf	_RxData0+2,w
  1603  037E  00D9               	movwf	Write_data@servo_data
  1604  037F  3184  240E         	fcall	_Write_data
  1605                           
  1606                           ;main.c: 193: } else if (address.all_data == 2) {
  1607  0381  0008               	return
  1608  0382                     l1196:	
  1609  0382  3002               	movlw	2
  1610  0383  0020               	movlb	0	; select bank0
  1611  0384  0631               	xorwf	_address,w
  1612  0385  1D03               	btfss	3,2
  1613  0386  2B99               	goto	l1204
  1614                           
  1615                           ;main.c: 194: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1616  0387  084F               	movf	_RxData0+10,w
  1617  0388  1D03               	btfss	3,2
  1618  0389  2B91               	goto	l1202
  1619  038A  0830               	movf	_zero+1,w
  1620  038B  00DA               	movwf	Write_data@servo_data+1
  1621  038C  082F               	movf	_zero,w
  1622  038D  00D9               	movwf	Write_data@servo_data
  1623  038E  3184  240E         	fcall	_Write_data
  1624  0390  0008               	return
  1625  0391                     l1202:	
  1626                           
  1627                           ;main.c: 195: else Write_data(RxData0[2]);
  1628  0391  0020               	movlb	0	; select bank0
  1629  0392  084A               	movf	_RxData0+5,w
  1630  0393  00DA               	movwf	Write_data@servo_data+1
  1631  0394  0849               	movf	_RxData0+4,w
  1632  0395  00D9               	movwf	Write_data@servo_data
  1633  0396  3184  240E         	fcall	_Write_data
  1634                           
  1635                           ;main.c: 196: } else if (address.all_data == 3) {
  1636  0398  0008               	return
  1637  0399                     l1204:	
  1638  0399  3003               	movlw	3
  1639  039A  0020               	movlb	0	; select bank0
  1640  039B  0631               	xorwf	_address,w
  1641  039C  1D03               	btfss	3,2
  1642  039D  2BB0               	goto	l1212
  1643                           
  1644                           ;main.c: 197: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1645  039E  084F               	movf	_RxData0+10,w
  1646  039F  1D03               	btfss	3,2
  1647  03A0  2BA8               	goto	l1210
  1648  03A1  0830               	movf	_zero+1,w
  1649  03A2  00DA               	movwf	Write_data@servo_data+1
  1650  03A3  082F               	movf	_zero,w
  1651  03A4  00D9               	movwf	Write_data@servo_data
  1652  03A5  3184  240E         	fcall	_Write_data
  1653  03A7  0008               	return
  1654  03A8                     l1210:	
  1655                           
  1656                           ;main.c: 198: else Write_data(RxData0[3]);
  1657  03A8  0020               	movlb	0	; select bank0
  1658  03A9  084C               	movf	_RxData0+7,w
  1659  03AA  00DA               	movwf	Write_data@servo_data+1
  1660  03AB  084B               	movf	_RxData0+6,w
  1661  03AC  00D9               	movwf	Write_data@servo_data
  1662  03AD  3184  240E         	fcall	_Write_data
  1663                           
  1664                           ;main.c: 199: } else if (address.all_data == 4) {
  1665  03AF  0008               	return
  1666  03B0                     l1212:	
  1667  03B0  3004               	movlw	4
  1668  03B1  0020               	movlb	0	; select bank0
  1669  03B2  0631               	xorwf	_address,w
  1670  03B3  1D03               	btfss	3,2
  1671  03B4  0008               	return
  1672                           
  1673                           ;main.c: 200: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1674  03B5  084F               	movf	_RxData0+10,w
  1675  03B6  1D03               	btfss	3,2
  1676  03B7  2BBF               	goto	l1218
  1677  03B8  0830               	movf	_zero+1,w
  1678  03B9  00DA               	movwf	Write_data@servo_data+1
  1679  03BA  082F               	movf	_zero,w
  1680  03BB  00D9               	movwf	Write_data@servo_data
  1681  03BC  3184  240E         	fcall	_Write_data
  1682  03BE  0008               	return
  1683  03BF                     l1218:	
  1684                           
  1685                           ;main.c: 201: else Write_data(RxData0[4]);
  1686  03BF  0020               	movlb	0	; select bank0
  1687  03C0  084E               	movf	_RxData0+9,w
  1688  03C1  00DA               	movwf	Write_data@servo_data+1
  1689  03C2  084D               	movf	_RxData0+8,w
  1690  03C3  00D9               	movwf	Write_data@servo_data
  1691  03C4  3184  240E         	fcall	_Write_data
  1692                           
  1693                           ;main.c: 202: } else;
  1694  03C6  0008               	return
  1695  03C7                     __end_of_ChangeData:	
  1696                           
  1697                           	psect	text3
  1698  040E                     __ptext3:	
  1699 ;; *************** function _Write_data *****************
  1700 ;; Defined at:
  1701 ;;		line 206 in file "main.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  servo_data      2    8[BANK0 ] struct .
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		None
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1719 ;;Total ram usage:        2 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    4
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_ChangeData
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           
  1730                           ;psect for function _Write_data
  1731  040E                     _Write_data:	
  1732                           
  1733                           ;main.c: 208: LATAbits.LATA0 = servo_data.data0;
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _Write_data: []
  1737  040E  0020               	movlb	0	; select bank0
  1738  040F  1C59               	btfss	Write_data@servo_data,0
  1739  0410  2C14               	goto	u1160
  1740  0411  0022               	movlb	2	; select bank2
  1741  0412  140C               	bsf	12,0	;volatile
  1742  0413  2C16               	goto	u1174
  1743  0414                     u1160:	
  1744  0414  0022               	movlb	2	; select bank2
  1745  0415  100C               	bcf	12,0	;volatile
  1746  0416                     u1174:	
  1747                           
  1748                           ;main.c: 209: LATAbits.LATA1 = servo_data.data1;
  1749  0416  0020               	movlb	0	; select bank0
  1750  0417  1CD9               	btfss	Write_data@servo_data,1
  1751  0418  2C1C               	goto	u1180
  1752  0419  0022               	movlb	2	; select bank2
  1753  041A  148C               	bsf	12,1	;volatile
  1754  041B  2C1E               	goto	u1194
  1755  041C                     u1180:	
  1756  041C  0022               	movlb	2	; select bank2
  1757  041D  108C               	bcf	12,1	;volatile
  1758  041E                     u1194:	
  1759                           
  1760                           ;main.c: 210: LATAbits.LATA2 = servo_data.data2;
  1761  041E  0020               	movlb	0	; select bank0
  1762  041F  1D59               	btfss	Write_data@servo_data,2
  1763  0420  2C24               	goto	u1200
  1764  0421  0022               	movlb	2	; select bank2
  1765  0422  150C               	bsf	12,2	;volatile
  1766  0423  2C26               	goto	u1214
  1767  0424                     u1200:	
  1768  0424  0022               	movlb	2	; select bank2
  1769  0425  110C               	bcf	12,2	;volatile
  1770  0426                     u1214:	
  1771                           
  1772                           ;main.c: 211: LATCbits.LATC0 = servo_data.data3;
  1773  0426  0020               	movlb	0	; select bank0
  1774  0427  1DD9               	btfss	Write_data@servo_data,3
  1775  0428  2C2C               	goto	u1220
  1776  0429  0022               	movlb	2	; select bank2
  1777  042A  140E               	bsf	14,0	;volatile
  1778  042B  2C2E               	goto	u1234
  1779  042C                     u1220:	
  1780  042C  0022               	movlb	2	; select bank2
  1781  042D  100E               	bcf	14,0	;volatile
  1782  042E                     u1234:	
  1783                           
  1784                           ;main.c: 212: LATCbits.LATC1 = servo_data.data4;
  1785  042E  0020               	movlb	0	; select bank0
  1786  042F  1E59               	btfss	Write_data@servo_data,4
  1787  0430  2C34               	goto	u1240
  1788  0431  0022               	movlb	2	; select bank2
  1789  0432  148E               	bsf	14,1	;volatile
  1790  0433  2C36               	goto	u1254
  1791  0434                     u1240:	
  1792  0434  0022               	movlb	2	; select bank2
  1793  0435  108E               	bcf	14,1	;volatile
  1794  0436                     u1254:	
  1795                           
  1796                           ;main.c: 213: LATCbits.LATC2 = servo_data.data5;
  1797  0436  0020               	movlb	0	; select bank0
  1798  0437  1ED9               	btfss	Write_data@servo_data,5
  1799  0438  2C3C               	goto	u1260
  1800  0439  0022               	movlb	2	; select bank2
  1801  043A  150E               	bsf	14,2	;volatile
  1802  043B  2C3E               	goto	u1274
  1803  043C                     u1260:	
  1804  043C  0022               	movlb	2	; select bank2
  1805  043D  110E               	bcf	14,2	;volatile
  1806  043E                     u1274:	
  1807                           
  1808                           ;main.c: 214: LATCbits.LATC4 = servo_data.data6;
  1809  043E  0020               	movlb	0	; select bank0
  1810  043F  1F59               	btfss	Write_data@servo_data,6
  1811  0440  2C44               	goto	u1280
  1812  0441  0022               	movlb	2	; select bank2
  1813  0442  160E               	bsf	14,4	;volatile
  1814  0443  0008               	return
  1815  0444                     u1280:	
  1816  0444  0022               	movlb	2	; select bank2
  1817  0445  120E               	bcf	14,4	;volatile
  1818  0446  0008               	return
  1819  0447                     __end_of_Write_data:	
  1820                           
  1821                           	psect	text4
  1822  04B7                     __ptext4:	
  1823 ;; *************** function _ChangeAddress *****************
  1824 ;; Defined at:
  1825 ;;		line 147 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  None            2   11[BANK0 ] struct .
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    5
  1846 ;; This function calls:
  1847 ;;		_Write_Address
  1848 ;; This function is called by:
  1849 ;;		_SetData
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _ChangeAddress
  1855  04B7                     _ChangeAddress:	
  1856                           
  1857                           ;main.c: 148: Processed None;;main.c: 149: None.all_data = 0b000;
  1858                           
  1859                           ;incstack = 0
  1860                           ; Regs used in _ChangeAddress: [wreg+status,2+status,0+pclath+cstack]
  1861  04B7  0020               	movlb	0	; select bank0
  1862  04B8  01DC               	clrf	ChangeAddress@None
  1863                           
  1864                           ;main.c: 153: if (address_status == 0b000) {
  1865  04B9  0835               	movf	_address_status,w
  1866  04BA  1D03               	btfss	3,2
  1867  04BB  2CC6               	goto	l1178
  1868                           
  1869                           ;main.c: 156: Write_Address(address);
  1870  04BC  0832               	movf	_address+1,w
  1871  04BD  00DA               	movwf	Write_Address@address+1
  1872  04BE  0831               	movf	_address,w
  1873  04BF  00D9               	movwf	Write_Address@address
  1874  04C0  3184  24FA         	fcall	_Write_Address
  1875                           
  1876                           ;main.c: 159: address_status = 1;
  1877  04C2  0020               	movlb	0	; select bank0
  1878  04C3  01B5               	clrf	_address_status
  1879  04C4  0AB5               	incf	_address_status,f
  1880                           
  1881                           ;main.c: 161: } else {
  1882  04C5  0008               	return
  1883  04C6                     l1178:	
  1884                           
  1885                           ;main.c: 164: Write_Address(None);
  1886  04C6  085D               	movf	ChangeAddress@None+1,w
  1887  04C7  00DA               	movwf	Write_Address@address+1
  1888  04C8  085C               	movf	ChangeAddress@None,w
  1889  04C9  00D9               	movwf	Write_Address@address
  1890  04CA  3184  24FA  3184   	fcall	_Write_Address
  1891                           
  1892                           ;main.c: 167: address_status = 0b000;
  1893  04CD  0020               	movlb	0	; select bank0
  1894  04CE  01B5               	clrf	_address_status
  1895                           
  1896                           ;main.c: 170: address.all_data++;
  1897  04CF  3001               	movlw	1
  1898  04D0  00DB               	movwf	??_ChangeAddress
  1899  04D1  085B               	movf	??_ChangeAddress,w
  1900  04D2  07B1               	addwf	_address,f
  1901                           
  1902                           ;main.c: 173: if (address.all_data >= 0b101) {
  1903  04D3  3005               	movlw	5
  1904  04D4  0231               	subwf	_address,w
  1905  04D5  1C03               	skipc
  1906  04D6  0008               	return
  1907                           
  1908                           ;main.c: 174: address.all_data = 0b001;
  1909  04D7  01B1               	clrf	_address
  1910  04D8  0AB1               	incf	_address,f
  1911  04D9  0008               	return
  1912  04DA                     __end_of_ChangeAddress:	
  1913                           
  1914                           	psect	text5
  1915  04FA                     __ptext5:	
  1916 ;; *************** function _Write_Address *****************
  1917 ;; Defined at:
  1918 ;;		line 181 in file "main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  address         2    8[BANK0 ] struct .
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  1    wreg      void 
  1925 ;; Registers used:
  1926 ;;		None
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1935 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1936 ;;Total ram usage:        2 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    4
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_ChangeAddress
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function _Write_Address
  1948  04FA                     _Write_Address:	
  1949                           
  1950                           ;main.c: 182: LATCbits.LATC5 = address.data0;
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _Write_Address: []
  1954  04FA  0020               	movlb	0	; select bank0
  1955  04FB  1C59               	btfss	Write_Address@address,0
  1956  04FC  2D00               	goto	u1100
  1957  04FD  0022               	movlb	2	; select bank2
  1958  04FE  168E               	bsf	14,5	;volatile
  1959  04FF  2D02               	goto	u1114
  1960  0500                     u1100:	
  1961  0500  0022               	movlb	2	; select bank2
  1962  0501  128E               	bcf	14,5	;volatile
  1963  0502                     u1114:	
  1964                           
  1965                           ;main.c: 183: LATCbits.LATC3 = address.data1;
  1966  0502  0020               	movlb	0	; select bank0
  1967  0503  1CD9               	btfss	Write_Address@address,1
  1968  0504  2D08               	goto	u1120
  1969  0505  0022               	movlb	2	; select bank2
  1970  0506  158E               	bsf	14,3	;volatile
  1971  0507  2D0A               	goto	u1134
  1972  0508                     u1120:	
  1973  0508  0022               	movlb	2	; select bank2
  1974  0509  118E               	bcf	14,3	;volatile
  1975  050A                     u1134:	
  1976                           
  1977                           ;main.c: 184: LATAbits.LATA4 = address.data2;
  1978  050A  0020               	movlb	0	; select bank0
  1979  050B  1D59               	btfss	Write_Address@address,2
  1980  050C  2D10               	goto	u1140
  1981  050D  0022               	movlb	2	; select bank2
  1982  050E  160C               	bsf	12,4	;volatile
  1983  050F  0008               	return
  1984  0510                     u1140:	
  1985  0510  0022               	movlb	2	; select bank2
  1986  0511  120C               	bcf	12,4	;volatile
  1987  0512  0008               	return
  1988  0513                     __end_of_Write_Address:	
  1989                           
  1990                           	psect	text6
  1991  04DA                     __ptext6:	
  1992 ;; *************** function _Reception_from_master_main *****************
  1993 ;; Defined at:
  1994 ;;		line 90 in file "communication.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2010 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2011 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2012 ;;Total ram usage:        1 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    5
  2015 ;; This function calls:
  2016 ;;		_Organize_Datas
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _Reception_from_master_main
  2024  04DA                     _Reception_from_master_main:	
  2025                           
  2026                           ;communication.c: 91: if (Receive_flag == 0) {
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _Reception_from_master_main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2030  04DA  0020               	movlb	0	; select bank0
  2031  04DB  0867               	movf	_Receive_flag,w
  2032  04DC  1D03               	btfss	3,2
  2033  04DD  0008               	return
  2034                           
  2035                           ;communication.c: 93: if (slave_different_flag == 1) {
  2036  04DE  0366               	decf	_slave_different_flag,w
  2037  04DF  1D03               	btfss	3,2
  2038  04E0  2CF3               	goto	l1398
  2039                           
  2040                           ;communication.c: 94: Organize_Datas(RxData0, Buffer0, 6, 0);
  2041  04E1  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  2042  04E2  00E4               	movwf	??_Reception_from_master_main
  2043  04E3  0864               	movf	??_Reception_from_master_main,w
  2044  04E4  00D9               	movwf	Organize_Datas@Buffer
  2045  04E5  3006               	movlw	6
  2046  04E6  00DA               	movwf	Organize_Datas@number_of_data
  2047  04E7  3000               	movlw	0
  2048  04E8  00DB               	movwf	Organize_Datas@number_of_data+1
  2049  04E9  3000               	movlw	0
  2050  04EA  00DC               	movwf	Organize_Datas@bus_number
  2051  04EB  00DD               	movwf	Organize_Datas@bus_number+1
  2052  04EC  3045               	movlw	(low (_RxData0| 0))& (0+255)
  2053  04ED  3181  21AF  3184   	fcall	_Organize_Datas
  2054                           
  2055                           ;communication.c: 95: slave_different_flag = 2;
  2056  04F0  3002               	movlw	2
  2057  04F1  0020               	movlb	0	; select bank0
  2058  04F2  2CF4               	goto	L1
  2059  04F3                     l1398:	
  2060                           ;communication.c: 96: } else {
  2061                           
  2062                           
  2063                           ;communication.c: 97: slave_different_flag = 2;
  2064  04F3  3002               	movlw	2
  2065  04F4                     L1:	
  2066  04F4  00E4               	movwf	??_Reception_from_master_main
  2067  04F5  0864               	movf	??_Reception_from_master_main,w
  2068  04F6  00E6               	movwf	_slave_different_flag
  2069                           
  2070                           ;communication.c: 98: };communication.c: 99: Receive_flag = 1;
  2071  04F7  01E7               	clrf	_Receive_flag
  2072  04F8  0AE7               	incf	_Receive_flag,f
  2073                           
  2074                           ;communication.c: 100: } else;
  2075  04F9  0008               	return
  2076  04FA                     __end_of_Reception_from_master_main:	
  2077                           
  2078                           	psect	text7
  2079  01AF                     __ptext7:	
  2080 ;; *************** function _Organize_Datas *****************
  2081 ;; Defined at:
  2082 ;;		line 20 in file "Controller_Protocol.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  RxData          1    wreg     PTR struct .
  2085 ;;		 -> RxData0(12), 
  2086 ;;  Buffer          1    8[BANK0 ] PTR struct .
  2087 ;;		 -> Buffer0(15), 
  2088 ;;  number_of_da    2    9[BANK0 ] int 
  2089 ;;  bus_number      2   11[BANK0 ] int 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  RxData          1   18[BANK0 ] PTR struct .
  2092 ;;		 -> RxData0(12), 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2102 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2104 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2105 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2106 ;;Total ram usage:       11 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    4
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;;		_Reception_from_master_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _Organize_Datas
  2119  01AF                     _Organize_Datas:	
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _Organize_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  2123                           ;Organize_Datas@RxData stored from wreg
  2124  01AF  0020               	movlb	0	; select bank0
  2125  01B0  00E3               	movwf	Organize_Datas@RxData
  2126                           
  2127                           ;Controller_Protocol.c: 22: OP[bus_number].count = 1;
  2128  01B1  085C               	movf	Organize_Datas@bus_number,w
  2129  01B2  00DE               	movwf	??_Organize_Datas
  2130  01B3  3001               	movlw	1
  2131  01B4                     u1345:	
  2132  01B4  35DE               	lslf	??_Organize_Datas,f
  2133  01B5  3EFF               	addlw	-1
  2134  01B6  1D03               	skipz
  2135  01B7  29B4               	goto	u1345
  2136  01B8  355E               	lslf	??_Organize_Datas,w
  2137  01B9  3E02               	addlw	2
  2138  01BA  3E29               	addlw	(low (_OP| 0))& (0+255)
  2139  01BB  0086               	movwf	6
  2140  01BC  0187               	clrf	7
  2141  01BD  3001               	movlw	1
  2142  01BE  3FC0               	movwi [0]fsr1
  2143  01BF  3000               	movlw	0
  2144  01C0  3FC1               	movwi [1]fsr1
  2145                           
  2146                           ;Controller_Protocol.c: 23: for (OP[bus_number].num = 0; OP[bus_number].num < number_of_
      +                          data; OP[bus_number].num++) {
  2147  01C1  085C               	movf	Organize_Datas@bus_number,w
  2148  01C2  00DE               	movwf	??_Organize_Datas
  2149  01C3  3001               	movlw	1
  2150  01C4                     u1355:	
  2151  01C4  35DE               	lslf	??_Organize_Datas,f
  2152  01C5  3EFF               	addlw	-1
  2153  01C6  1D03               	skipz
  2154  01C7  29C4               	goto	u1355
  2155  01C8  355E               	lslf	??_Organize_Datas,w
  2156  01C9  3E29               	addlw	(low (_OP| 0))& (0+255)
  2157  01CA  0086               	movwf	6
  2158  01CB  0187               	clrf	7
  2159  01CC  3000               	movlw	0
  2160  01CD  3FC0               	movwi [0]fsr1
  2161  01CE  3FC1               	movwi [1]fsr1
  2162  01CF                     l209:	
  2163  01CF  085C               	movf	Organize_Datas@bus_number,w
  2164  01D0  00DE               	movwf	??_Organize_Datas
  2165  01D1  3001               	movlw	1
  2166  01D2                     u1525:	
  2167  01D2  35DE               	lslf	??_Organize_Datas,f
  2168  01D3  3EFF               	addlw	-1
  2169  01D4  1D03               	skipz
  2170  01D5  29D2               	goto	u1525
  2171  01D6  355E               	lslf	??_Organize_Datas,w
  2172  01D7  3E29               	addlw	(low (_OP| 0))& (0+255)
  2173  01D8  0086               	movwf	6
  2174  01D9  0187               	clrf	7
  2175  01DA  3F40               	moviw [0]fsr1
  2176  01DB  00DF               	movwf	??_Organize_Datas+1
  2177  01DC  3F41               	moviw [1]fsr1
  2178  01DD  00E0               	movwf	??_Organize_Datas+2
  2179  01DE  0860               	movf	??_Organize_Datas+2,w
  2180  01DF  3A80               	xorlw	128
  2181  01E0  00E1               	movwf	??_Organize_Datas+3
  2182  01E1  085B               	movf	Organize_Datas@number_of_data+1,w
  2183  01E2  3A80               	xorlw	128
  2184  01E3  0261               	subwf	??_Organize_Datas+3,w
  2185  01E4  1D03               	skipz
  2186  01E5  29E8               	goto	u1535
  2187  01E6  085A               	movf	Organize_Datas@number_of_data,w
  2188  01E7  025F               	subwf	??_Organize_Datas+1,w
  2189  01E8                     u1535:	
  2190  01E8  1803               	btfsc	3,0
  2191  01E9  0008               	return
  2192                           
  2193                           ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number
      +                          ].count].upper_data;
  2194  01EA  0020               	movlb	0	; select bank0
  2195  01EB  085C               	movf	Organize_Datas@bus_number,w
  2196  01EC  00DE               	movwf	??_Organize_Datas
  2197  01ED  3001               	movlw	1
  2198  01EE                     u1365:	
  2199  01EE  35DE               	lslf	??_Organize_Datas,f
  2200  01EF  3EFF               	addlw	-1
  2201  01F0  1D03               	skipz
  2202  01F1  29EE               	goto	u1365
  2203  01F2  355E               	lslf	??_Organize_Datas,w
  2204  01F3  3E02               	addlw	2
  2205  01F4  3E29               	addlw	(low (_OP| 0))& (0+255)
  2206  01F5  0086               	movwf	6
  2207  01F6  0187               	clrf	7
  2208  01F7  0801               	movf	1,w
  2209  01F8  0759               	addwf	Organize_Datas@Buffer,w
  2210  01F9  00DF               	movwf	??_Organize_Datas+1
  2211  01FA  085F               	movf	??_Organize_Datas+1,w
  2212  01FB  0086               	movwf	6
  2213  01FC  0187               	clrf	7
  2214  01FD  0E01               	swapf	1,w
  2215  01FE  390F               	andlw	15
  2216  01FF  00E0               	movwf	??_Organize_Datas+2
  2217  0200  085C               	movf	Organize_Datas@bus_number,w
  2218  0201  00E1               	movwf	??_Organize_Datas+3
  2219  0202  3001               	movlw	1
  2220  0203                     u1375:	
  2221  0203  35E1               	lslf	??_Organize_Datas+3,f
  2222  0204  3EFF               	addlw	-1
  2223  0205  1D03               	skipz
  2224  0206  2A03               	goto	u1375
  2225  0207  3561               	lslf	??_Organize_Datas+3,w
  2226  0208  3E29               	addlw	(low (_OP| 0))& (0+255)
  2227  0209  0086               	movwf	6
  2228  020A  0187               	clrf	7
  2229  020B  3501               	lslf	1,w
  2230  020C  0763               	addwf	Organize_Datas@RxData,w
  2231  020D  00E2               	movwf	??_Organize_Datas+4
  2232  020E  0862               	movf	??_Organize_Datas+4,w
  2233  020F  0086               	movwf	6
  2234  0210  0187               	clrf	7
  2235  0211  0EE0               	swapf	??_Organize_Datas+2,f
  2236  0212  0801               	movf	1,w
  2237  0213  0660               	xorwf	??_Organize_Datas+2,w
  2238  0214  390F               	andlw	-241
  2239  0215  0660               	xorwf	??_Organize_Datas+2,w
  2240  0216  0081               	movwf	1
  2241                           
  2242                           ;Controller_Protocol.c: 25: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number
      +                          ].count + 1].upper_data;
  2243  0217  085C               	movf	Organize_Datas@bus_number,w
  2244  0218  00DE               	movwf	??_Organize_Datas
  2245  0219  3001               	movlw	1
  2246  021A                     u1385:	
  2247  021A  35DE               	lslf	??_Organize_Datas,f
  2248  021B  3EFF               	addlw	-1
  2249  021C  1D03               	skipz
  2250  021D  2A1A               	goto	u1385
  2251  021E  355E               	lslf	??_Organize_Datas,w
  2252  021F  3E02               	addlw	2
  2253  0220  3E29               	addlw	(low (_OP| 0))& (0+255)
  2254  0221  0086               	movwf	6
  2255  0222  0187               	clrf	7
  2256  0223  0801               	movf	1,w
  2257  0224  3E01               	addlw	1
  2258  0225  0759               	addwf	Organize_Datas@Buffer,w
  2259  0226  00DF               	movwf	??_Organize_Datas+1
  2260  0227  085F               	movf	??_Organize_Datas+1,w
  2261  0228  0086               	movwf	6
  2262  0229  0187               	clrf	7
  2263  022A  0E01               	swapf	1,w
  2264  022B  390F               	andlw	15
  2265  022C  00E0               	movwf	??_Organize_Datas+2
  2266  022D  085C               	movf	Organize_Datas@bus_number,w
  2267  022E  00E1               	movwf	??_Organize_Datas+3
  2268  022F  3001               	movlw	1
  2269  0230                     u1395:	
  2270  0230  35E1               	lslf	??_Organize_Datas+3,f
  2271  0231  3EFF               	addlw	-1
  2272  0232  1D03               	skipz
  2273  0233  2A30               	goto	u1395
  2274  0234  3561               	lslf	??_Organize_Datas+3,w
  2275  0235  3E29               	addlw	(low (_OP| 0))& (0+255)
  2276  0236  0086               	movwf	6
  2277  0237  0187               	clrf	7
  2278  0238  3501               	lslf	1,w
  2279  0239  0763               	addwf	Organize_Datas@RxData,w
  2280  023A  00E2               	movwf	??_Organize_Datas+4
  2281  023B  0862               	movf	??_Organize_Datas+4,w
  2282  023C  0086               	movwf	6
  2283  023D  0187               	clrf	7
  2284  023E  0801               	movf	1,w
  2285  023F  0660               	xorwf	??_Organize_Datas+2,w
  2286  0240  39F0               	andlw	-16
  2287  0241  0660               	xorwf	??_Organize_Datas+2,w
  2288  0242  0081               	movwf	1
  2289                           
  2290                           ;Controller_Protocol.c: 26: if ((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus
      +                          _number].count + 1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
  2291  0243  085C               	movf	Organize_Datas@bus_number,w
  2292  0244  00DE               	movwf	??_Organize_Datas
  2293  0245  3001               	movlw	1
  2294  0246                     u1405:	
  2295  0246  35DE               	lslf	??_Organize_Datas,f
  2296  0247  3EFF               	addlw	-1
  2297  0248  1D03               	skipz
  2298  0249  2A46               	goto	u1405
  2299  024A  355E               	lslf	??_Organize_Datas,w
  2300  024B  3E02               	addlw	2
  2301  024C  3E29               	addlw	(low (_OP| 0))& (0+255)
  2302  024D  0086               	movwf	6
  2303  024E  0187               	clrf	7
  2304  024F  0801               	movf	1,w
  2305  0250  0759               	addwf	Organize_Datas@Buffer,w
  2306  0251  00DF               	movwf	??_Organize_Datas+1
  2307  0252  085F               	movf	??_Organize_Datas+1,w
  2308  0253  0086               	movwf	6
  2309  0254  0187               	clrf	7
  2310  0255  0E01               	swapf	1,w
  2311  0256  390F               	andlw	15
  2312  0257  00E0               	movwf	??_Organize_Datas+2
  2313  0258  085C               	movf	Organize_Datas@bus_number,w
  2314  0259  00E1               	movwf	??_Organize_Datas+3
  2315  025A  3001               	movlw	1
  2316  025B                     u1415:	
  2317  025B  35E1               	lslf	??_Organize_Datas+3,f
  2318  025C  3EFF               	addlw	-1
  2319  025D  1D03               	skipz
  2320  025E  2A5B               	goto	u1415
  2321  025F  3561               	lslf	??_Organize_Datas+3,w
  2322  0260  3E02               	addlw	2
  2323  0261  3E29               	addlw	(low (_OP| 0))& (0+255)
  2324  0262  0086               	movwf	6
  2325  0263  0187               	clrf	7
  2326  0264  0801               	movf	1,w
  2327  0265  3E01               	addlw	1
  2328  0266  0759               	addwf	Organize_Datas@Buffer,w
  2329  0267  00E2               	movwf	??_Organize_Datas+4
  2330  0268  0862               	movf	??_Organize_Datas+4,w
  2331  0269  0086               	movwf	6
  2332  026A  0187               	clrf	7
  2333  026B  0801               	movf	1,w
  2334  026C  390F               	andlw	15
  2335  026D  0460               	iorwf	??_Organize_Datas+2,w
  2336  026E  3A0F               	xorlw	15
  2337  026F  1D03               	skipz
  2338  0270  2A84               	goto	l1164
  2339  0271  085C               	movf	Organize_Datas@bus_number,w
  2340  0272  00DE               	movwf	??_Organize_Datas
  2341  0273  3001               	movlw	1
  2342  0274                     u1435:	
  2343  0274  35DE               	lslf	??_Organize_Datas,f
  2344  0275  3EFF               	addlw	-1
  2345  0276  1D03               	skipz
  2346  0277  2A74               	goto	u1435
  2347  0278  355E               	lslf	??_Organize_Datas,w
  2348  0279  3E29               	addlw	(low (_OP| 0))& (0+255)
  2349  027A  0086               	movwf	6
  2350  027B  0187               	clrf	7
  2351  027C  3501               	lslf	1,w
  2352  027D  0763               	addwf	Organize_Datas@RxData,w
  2353  027E  00DF               	movwf	??_Organize_Datas+1
  2354  027F  0A5F               	incf	??_Organize_Datas+1,w
  2355  0280  0086               	movwf	6
  2356  0281  0187               	clrf	7
  2357  0282  1001               	bcf	1,0
  2358  0283  2A96               	goto	l212
  2359  0284                     l1164:	
  2360                           
  2361                           ;Controller_Protocol.c: 27: else RxData[OP[bus_number].num].UD_error = 1;
  2362  0284  085C               	movf	Organize_Datas@bus_number,w
  2363  0285  00DE               	movwf	??_Organize_Datas
  2364  0286  3001               	movlw	1
  2365  0287                     u1445:	
  2366  0287  35DE               	lslf	??_Organize_Datas,f
  2367  0288  3EFF               	addlw	-1
  2368  0289  1D03               	skipz
  2369  028A  2A87               	goto	u1445
  2370  028B  355E               	lslf	??_Organize_Datas,w
  2371  028C  3E29               	addlw	(low (_OP| 0))& (0+255)
  2372  028D  0086               	movwf	6
  2373  028E  0187               	clrf	7
  2374  028F  3501               	lslf	1,w
  2375  0290  0763               	addwf	Organize_Datas@RxData,w
  2376  0291  00DF               	movwf	??_Organize_Datas+1
  2377  0292  0A5F               	incf	??_Organize_Datas+1,w
  2378  0293  0086               	movwf	6
  2379  0294  0187               	clrf	7
  2380  0295  1401               	bsf	1,0
  2381  0296                     l212:	
  2382                           
  2383                           ;Controller_Protocol.c: 28: if ((Buffer[OP[bus_number].count + 1].upper_data | Buffer[OP
      +                          [bus_number].count + 2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
  2384  0296  085C               	movf	Organize_Datas@bus_number,w
  2385  0297  00DE               	movwf	??_Organize_Datas
  2386  0298  3001               	movlw	1
  2387  0299                     u1455:	
  2388  0299  35DE               	lslf	??_Organize_Datas,f
  2389  029A  3EFF               	addlw	-1
  2390  029B  1D03               	skipz
  2391  029C  2A99               	goto	u1455
  2392  029D  355E               	lslf	??_Organize_Datas,w
  2393  029E  3E02               	addlw	2
  2394  029F  3E29               	addlw	(low (_OP| 0))& (0+255)
  2395  02A0  0086               	movwf	6
  2396  02A1  0187               	clrf	7
  2397  02A2  0801               	movf	1,w
  2398  02A3  3E01               	addlw	1
  2399  02A4  0759               	addwf	Organize_Datas@Buffer,w
  2400  02A5  00DF               	movwf	??_Organize_Datas+1
  2401  02A6  085F               	movf	??_Organize_Datas+1,w
  2402  02A7  0086               	movwf	6
  2403  02A8  0187               	clrf	7
  2404  02A9  0E01               	swapf	1,w
  2405  02AA  390F               	andlw	15
  2406  02AB  00E0               	movwf	??_Organize_Datas+2
  2407  02AC  085C               	movf	Organize_Datas@bus_number,w
  2408  02AD  00E1               	movwf	??_Organize_Datas+3
  2409  02AE  3001               	movlw	1
  2410  02AF                     u1465:	
  2411  02AF  35E1               	lslf	??_Organize_Datas+3,f
  2412  02B0  3EFF               	addlw	-1
  2413  02B1  1D03               	skipz
  2414  02B2  2AAF               	goto	u1465
  2415  02B3  3561               	lslf	??_Organize_Datas+3,w
  2416  02B4  3E02               	addlw	2
  2417  02B5  3E29               	addlw	(low (_OP| 0))& (0+255)
  2418  02B6  0086               	movwf	6
  2419  02B7  0187               	clrf	7
  2420  02B8  0801               	movf	1,w
  2421  02B9  3E02               	addlw	2
  2422  02BA  0759               	addwf	Organize_Datas@Buffer,w
  2423  02BB  00E2               	movwf	??_Organize_Datas+4
  2424  02BC  0862               	movf	??_Organize_Datas+4,w
  2425  02BD  0086               	movwf	6
  2426  02BE  0187               	clrf	7
  2427  02BF  0801               	movf	1,w
  2428  02C0  390F               	andlw	15
  2429  02C1  0460               	iorwf	??_Organize_Datas+2,w
  2430  02C2  3A0F               	xorlw	15
  2431  02C3  1D03               	skipz
  2432  02C4  2AD8               	goto	l1168
  2433  02C5  085C               	movf	Organize_Datas@bus_number,w
  2434  02C6  00DE               	movwf	??_Organize_Datas
  2435  02C7  3001               	movlw	1
  2436  02C8                     u1485:	
  2437  02C8  35DE               	lslf	??_Organize_Datas,f
  2438  02C9  3EFF               	addlw	-1
  2439  02CA  1D03               	skipz
  2440  02CB  2AC8               	goto	u1485
  2441  02CC  355E               	lslf	??_Organize_Datas,w
  2442  02CD  3E29               	addlw	(low (_OP| 0))& (0+255)
  2443  02CE  0086               	movwf	6
  2444  02CF  0187               	clrf	7
  2445  02D0  3501               	lslf	1,w
  2446  02D1  0763               	addwf	Organize_Datas@RxData,w
  2447  02D2  00DF               	movwf	??_Organize_Datas+1
  2448  02D3  0A5F               	incf	??_Organize_Datas+1,w
  2449  02D4  0086               	movwf	6
  2450  02D5  0187               	clrf	7
  2451  02D6  1081               	bcf	1,1
  2452  02D7  2AEA               	goto	l214
  2453  02D8                     l1168:	
  2454                           
  2455                           ;Controller_Protocol.c: 29: else RxData[OP[bus_number].num].LD_error = 1;
  2456  02D8  085C               	movf	Organize_Datas@bus_number,w
  2457  02D9  00DE               	movwf	??_Organize_Datas
  2458  02DA  3001               	movlw	1
  2459  02DB                     u1495:	
  2460  02DB  35DE               	lslf	??_Organize_Datas,f
  2461  02DC  3EFF               	addlw	-1
  2462  02DD  1D03               	skipz
  2463  02DE  2ADB               	goto	u1495
  2464  02DF  355E               	lslf	??_Organize_Datas,w
  2465  02E0  3E29               	addlw	(low (_OP| 0))& (0+255)
  2466  02E1  0086               	movwf	6
  2467  02E2  0187               	clrf	7
  2468  02E3  3501               	lslf	1,w
  2469  02E4  0763               	addwf	Organize_Datas@RxData,w
  2470  02E5  00DF               	movwf	??_Organize_Datas+1
  2471  02E6  0A5F               	incf	??_Organize_Datas+1,w
  2472  02E7  0086               	movwf	6
  2473  02E8  0187               	clrf	7
  2474  02E9  1481               	bsf	1,1
  2475  02EA                     l214:	
  2476                           
  2477                           ;Controller_Protocol.c: 30: OP[bus_number].count += 2;
  2478  02EA  085C               	movf	Organize_Datas@bus_number,w
  2479  02EB  00DE               	movwf	??_Organize_Datas
  2480  02EC  3001               	movlw	1
  2481  02ED                     u1505:	
  2482  02ED  35DE               	lslf	??_Organize_Datas,f
  2483  02EE  3EFF               	addlw	-1
  2484  02EF  1D03               	skipz
  2485  02F0  2AED               	goto	u1505
  2486  02F1  355E               	lslf	??_Organize_Datas,w
  2487  02F2  3E02               	addlw	2
  2488  02F3  3E29               	addlw	(low (_OP| 0))& (0+255)
  2489  02F4  0086               	movwf	6
  2490  02F5  0187               	clrf	7
  2491  02F6  3002               	movlw	2
  2492  02F7  0781               	addwf	1,f
  2493  02F8  3141               	addfsr 1,1
  2494  02F9  1803               	skipnc
  2495  02FA  0A81               	incf	1,f
  2496  02FB  085C               	movf	Organize_Datas@bus_number,w
  2497  02FC  00DE               	movwf	??_Organize_Datas
  2498  02FD  3001               	movlw	1
  2499  02FE                     u1515:	
  2500  02FE  35DE               	lslf	??_Organize_Datas,f
  2501  02FF  3EFF               	addlw	-1
  2502  0300  1D03               	skipz
  2503  0301  2AFE               	goto	u1515
  2504  0302  355E               	lslf	??_Organize_Datas,w
  2505  0303  3E29               	addlw	(low (_OP| 0))& (0+255)
  2506  0304  0086               	movwf	6
  2507  0305  0187               	clrf	7
  2508  0306  3001               	movlw	1
  2509  0307  0781               	addwf	1,f
  2510  0308  3141               	addfsr 1,1
  2511  0309  1803               	skipnc
  2512  030A  0A81               	incf	1,f
  2513  030B  29CF               	goto	l209
  2514  030C                     __end_of_Organize_Datas:	
  2515                           
  2516                           	psect	text8
  2517  0513                     __ptext8:	
  2518 ;; *************** function _Initialize *****************
  2519 ;; Defined at:
  2520 ;;		line 225 in file "main.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;		None
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;		None
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  1    wreg      void 
  2527 ;; Registers used:
  2528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2536 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2537 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2538 ;;Total ram usage:        1 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    6
  2541 ;; This function calls:
  2542 ;;		_Initialize_Parameters
  2543 ;;		_Oscillator_Initialize
  2544 ;;		_Pin_Initialize
  2545 ;;		_UART_Initialize
  2546 ;; This function is called by:
  2547 ;;		_main
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _Initialize
  2553  0513                     _Initialize:	
  2554                           
  2555                           ;main.c: 226: Oscillator_Initialize();
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2559  0513  3185  2559  3185   	fcall	_Oscillator_Initialize
  2560                           
  2561                           ;main.c: 227: Pin_Initialize();
  2562  0516  3184  2447  3185   	fcall	_Pin_Initialize
  2563                           
  2564                           ;main.c: 228: UART_Initialize();
  2565  0519  3185  2526  3185   	fcall	_UART_Initialize
  2566                           
  2567                           ;main.c: 229: Initialize_Parameters();
  2568  051C  3183  230C         	fcall	_Initialize_Parameters
  2569                           
  2570                           ;main.c: 230: address.all_data = 0b001;
  2571  051E  0020               	movlb	0	; select bank0
  2572  051F  01B1               	clrf	_address
  2573  0520  0AB1               	incf	_address,f
  2574                           
  2575                           ;main.c: 231: zero.all_data = 0xFF;
  2576  0521  30FF               	movlw	255
  2577  0522  00DE               	movwf	??_Initialize
  2578  0523  085E               	movf	??_Initialize,w
  2579  0524  00AF               	movwf	_zero
  2580  0525  0008               	return
  2581  0526                     __end_of_Initialize:	
  2582                           
  2583                           	psect	text9
  2584  0526                     __ptext9:	
  2585 ;; *************** function _UART_Initialize *****************
  2586 ;; Defined at:
  2587 ;;		line 274 in file "main.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;Total ram usage:        0 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    4
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_Initialize
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _UART_Initialize
  2617  0526                     _UART_Initialize:	
  2618                           
  2619                           ;main.c: 276: PIE1bits.RCIE = 0;
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _UART_Initialize: [wreg+status,2]
  2623  0526  0021               	movlb	1	; select bank1
  2624  0527  1291               	bcf	17,5	;volatile
  2625                           
  2626                           ;main.c: 279: SP1BRGH = 0x00;
  2627  0528  0023               	movlb	3	; select bank3
  2628  0529  019C               	clrf	28	;volatile
  2629                           
  2630                           ;main.c: 280: SP1BRGL = 0x8A;
  2631  052A  308A               	movlw	138
  2632  052B  009B               	movwf	27	;volatile
  2633                           
  2634                           ;main.c: 281: TX1STAbits.BRGH = 1;
  2635  052C  151E               	bsf	30,2	;volatile
  2636                           
  2637                           ;main.c: 282: BAUD1CONbits.BRG16 = 1;
  2638  052D  159F               	bsf	31,3	;volatile
  2639                           
  2640                           ;main.c: 285: RC1STAbits.SPEN = 1;
  2641  052E  179D               	bsf	29,7	;volatile
  2642                           
  2643                           ;main.c: 286: RC1STAbits.CREN = 1;
  2644  052F  161D               	bsf	29,4	;volatile
  2645                           
  2646                           ;main.c: 287: TX1STAbits.SYNC = 0;
  2647  0530  121E               	bcf	30,4	;volatile
  2648                           
  2649                           ;main.c: 290: INTCONbits.GIE = 1;
  2650  0531  178B               	bsf	11,7	;volatile
  2651                           
  2652                           ;main.c: 291: INTCONbits.PEIE = 1;
  2653  0532  170B               	bsf	11,6	;volatile
  2654                           
  2655                           ;main.c: 292: PIE1bits.RCIE = 1;
  2656  0533  0021               	movlb	1	; select bank1
  2657  0534  1691               	bsf	17,5	;volatile
  2658                           
  2659                           ;main.c: 295: RC1STAbits.CREN = 1;
  2660  0535  0023               	movlb	3	; select bank3
  2661  0536  161D               	bsf	29,4	;volatile
  2662  0537  0008               	return
  2663  0538                     __end_of_UART_Initialize:	
  2664                           
  2665                           	psect	text10
  2666  0447                     __ptext10:	
  2667 ;; *************** function _Pin_Initialize *****************
  2668 ;; Defined at:
  2669 ;;		line 240 in file "main.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  state           1    8[BANK0 ] unsigned char 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;Total ram usage:        1 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    4
  2690 ;; This function calls:
  2691 ;;		Nothing
  2692 ;; This function is called by:
  2693 ;;		_Initialize
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _Pin_Initialize
  2699  0447                     _Pin_Initialize:	
  2700                           
  2701                           ;main.c: 241: ANSELA = 0x00;
  2702                           
  2703                           ;incstack = 0
  2704                           ; Regs used in _Pin_Initialize: [wreg+status,2]
  2705  0447  0023               	movlb	3	; select bank3
  2706  0448  018C               	clrf	12	;volatile
  2707                           
  2708                           ;main.c: 243: TRISAbits.TRISA5 = 1;
  2709  0449  0021               	movlb	1	; select bank1
  2710  044A  168C               	bsf	12,5	;volatile
  2711                           
  2712                           ;main.c: 245: TRISAbits.TRISA0 = 0;
  2713  044B  100C               	bcf	12,0	;volatile
  2714                           
  2715                           ;main.c: 246: TRISAbits.TRISA1 = 0;
  2716  044C  108C               	bcf	12,1	;volatile
  2717                           
  2718                           ;main.c: 247: TRISAbits.TRISA2 = 0;
  2719  044D  110C               	bcf	12,2	;volatile
  2720                           
  2721                           ;main.c: 248: TRISCbits.TRISC0 = 0;
  2722  044E  100E               	bcf	14,0	;volatile
  2723                           
  2724                           ;main.c: 249: TRISCbits.TRISC1 = 0;
  2725  044F  108E               	bcf	14,1	;volatile
  2726                           
  2727                           ;main.c: 250: TRISCbits.TRISC2 = 0;
  2728  0450  110E               	bcf	14,2	;volatile
  2729                           
  2730                           ;main.c: 251: TRISCbits.TRISC4 = 0;
  2731  0451  120E               	bcf	14,4	;volatile
  2732                           
  2733                           ;main.c: 253: TRISCbits.TRISC5 = 0;
  2734  0452  128E               	bcf	14,5	;volatile
  2735                           
  2736                           ;main.c: 254: TRISCbits.TRISC3 = 0;
  2737  0453  118E               	bcf	14,3	;volatile
  2738                           
  2739                           ;main.c: 255: TRISAbits.TRISA4 = 0;
  2740  0454  120C               	bcf	12,4	;volatile
  2741                           
  2742                           ;main.c: 259: bool state = GIE;
  2743  0455  3000               	movlw	0
  2744  0456  1B8B               	btfsc	11,7	;volatile
  2745  0457  3001               	movlw	1
  2746  0458  0020               	movlb	0	; select bank0
  2747  0459  00D9               	movwf	Pin_Initialize@state
  2748                           
  2749                           ;main.c: 260: GIE = 0;
  2750  045A  138B               	bcf	11,7	;volatile
  2751                           
  2752                           ;main.c: 261: PPSLOCK = 0x55;
  2753  045B  3055               	movlw	85
  2754  045C  003C               	movlb	28	; select bank28
  2755  045D  008F               	movwf	15	;volsfr
  2756                           
  2757                           ;main.c: 262: PPSLOCK = 0xAA;
  2758  045E  30AA               	movlw	170
  2759  045F  008F               	movwf	15	;volsfr
  2760                           
  2761                           ;main.c: 263: PPSLOCKbits.PPSLOCKED = 0x00;
  2762  0460  100F               	bcf	15,0	;volsfr
  2763                           
  2764                           ;main.c: 265: RXPPS = 0x5;
  2765  0461  3005               	movlw	5
  2766  0462  00A4               	movwf	36	;volatile
  2767                           
  2768                           ;main.c: 267: PPSLOCK = 0x55;
  2769  0463  3055               	movlw	85
  2770  0464  008F               	movwf	15	;volsfr
  2771                           
  2772                           ;main.c: 268: PPSLOCK = 0xAA;
  2773  0465  30AA               	movlw	170
  2774  0466  008F               	movwf	15	;volsfr
  2775                           
  2776                           ;main.c: 269: PPSLOCKbits.PPSLOCKED = 0x01;
  2777  0467  140F               	bsf	15,0	;volsfr
  2778                           
  2779                           ;main.c: 271: GIE = state;
  2780  0468  0020               	movlb	0	; select bank0
  2781  0469  1C59               	btfss	Pin_Initialize@state,0
  2782  046A  2C6D               	goto	u1650
  2783  046B  178B               	bsf	11,7	;volatile
  2784  046C  0008               	return
  2785  046D                     u1650:	
  2786  046D  138B               	bcf	11,7	;volatile
  2787  046E  0008               	return
  2788  046F                     __end_of_Pin_Initialize:	
  2789                           
  2790                           	psect	text11
  2791  0559                     __ptext11:	
  2792 ;; *************** function _Oscillator_Initialize *****************
  2793 ;; Defined at:
  2794 ;;		line 234 in file "main.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    4
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_Initialize
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _Oscillator_Initialize
  2824  0559                     _Oscillator_Initialize:	
  2825                           
  2826                           ;main.c: 235: OSCCON1 = 0x00;
  2827                           
  2828                           ;incstack = 0
  2829                           ; Regs used in _Oscillator_Initialize: [wreg+status,2]
  2830  0559  0032               	movlb	18	; select bank18
  2831  055A  0199               	clrf	25	;volatile
  2832                           
  2833                           ;main.c: 236: OSCFRQ = 0x06;
  2834  055B  3006               	movlw	6
  2835  055C  009F               	movwf	31	;volatile
  2836  055D                     l137:	
  2837                           ;main.c: 237: while (PLLR == 0);
  2838                           
  2839  055D  181C               	btfsc	28,0	;volatile
  2840  055E  0008               	return
  2841  055F  2D5D               	goto	l137
  2842  0560                     __end_of_Oscillator_Initialize:	
  2843                           
  2844                           	psect	text12
  2845  030C                     __ptext12:	
  2846 ;; *************** function _Initialize_Parameters *****************
  2847 ;; Defined at:
  2848 ;;		line 116 in file "Controller_Protocol.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;Total ram usage:        1 bytes
  2867 ;; Hardware stack levels used:    1
  2868 ;; Hardware stack levels required when called:    5
  2869 ;; This function calls:
  2870 ;;		___bmul
  2871 ;; This function is called by:
  2872 ;;		_Initialize
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           
  2877                           ;psect for function _Initialize_Parameters
  2878  030C                     _Initialize_Parameters:	
  2879                           
  2880                           ;Controller_Protocol.c: 117: static int i;;Controller_Protocol.c: 119: for (i = 0; i < 1
      +                          ; i++)OP[i].count = 1;
  2881                           
  2882                           ;incstack = 0
  2883                           ; Regs used in _Initialize_Parameters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2884  030C  0020               	movlb	0	; select bank0
  2885  030D  01AD               	clrf	Initialize_Parameters@i
  2886  030E  01AE               	clrf	Initialize_Parameters@i+1
  2887  030F  082E               	movf	Initialize_Parameters@i+1,w
  2888  0310  3A80               	xorlw	128
  2889  0311  00DD               	movwf	??_Initialize_Parameters
  2890  0312  3080               	movlw	128
  2891  0313  025D               	subwf	??_Initialize_Parameters,w
  2892  0314  1D03               	skipz
  2893  0315  2B18               	goto	u1675
  2894  0316  3001               	movlw	1
  2895  0317  022D               	subwf	Initialize_Parameters@i,w
  2896  0318                     u1675:	
  2897  0318  1803               	btfsc	3,0
  2898  0319  2B3A               	goto	l1294
  2899  031A                     l1288:	
  2900  031A  0020               	movlb	0	; select bank0
  2901  031B  082D               	movf	Initialize_Parameters@i,w
  2902  031C  00DD               	movwf	??_Initialize_Parameters
  2903  031D  3001               	movlw	1
  2904  031E                     u1685:	
  2905  031E  35DD               	lslf	??_Initialize_Parameters,f
  2906  031F  3EFF               	addlw	-1
  2907  0320  1D03               	skipz
  2908  0321  2B1E               	goto	u1685
  2909  0322  355D               	lslf	??_Initialize_Parameters,w
  2910  0323  3E02               	addlw	2
  2911  0324  3E29               	addlw	(low (_OP| 0))& (0+255)
  2912  0325  0086               	movwf	6
  2913  0326  0187               	clrf	7
  2914  0327  3001               	movlw	1
  2915  0328  3FC0               	movwi [0]fsr1
  2916  0329  3000               	movlw	0
  2917  032A  3FC1               	movwi [1]fsr1
  2918  032B  3001               	movlw	1
  2919  032C  07AD               	addwf	Initialize_Parameters@i,f
  2920  032D  3000               	movlw	0
  2921  032E  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2922  032F  082E               	movf	Initialize_Parameters@i+1,w
  2923  0330  3A80               	xorlw	128
  2924  0331  00DD               	movwf	??_Initialize_Parameters
  2925  0332  3080               	movlw	128
  2926  0333  025D               	subwf	??_Initialize_Parameters,w
  2927  0334  1D03               	skipz
  2928  0335  2B38               	goto	u1695
  2929  0336  3001               	movlw	1
  2930  0337  022D               	subwf	Initialize_Parameters@i,w
  2931  0338                     u1695:	
  2932  0338  1C03               	skipc
  2933  0339  2B1A               	goto	l1288
  2934  033A                     l1294:	
  2935                           
  2936                           ;Controller_Protocol.c: 120: for (i = 0; i < 1; i++) {
  2937  033A  0020               	movlb	0	; select bank0
  2938  033B  01AD               	clrf	Initialize_Parameters@i
  2939  033C  01AE               	clrf	Initialize_Parameters@i+1
  2940  033D                     L2:	
  2941  033D  082E               	movf	Initialize_Parameters@i+1,w
  2942  033E  3A80               	xorlw	128
  2943  033F  00DD               	movwf	??_Initialize_Parameters
  2944  0340  3080               	movlw	128
  2945  0341  025D               	subwf	??_Initialize_Parameters,w
  2946  0342  1D03               	skipz
  2947  0343  2B46               	goto	u1705
  2948  0344  3001               	movlw	1
  2949  0345  022D               	subwf	Initialize_Parameters@i,w
  2950  0346                     u1705:	
  2951  0346  1803               	btfsc	3,0
  2952  0347  0008               	return
  2953                           
  2954                           ;Controller_Protocol.c: 121: StP[i].Buffer_count = 1;
  2955  0348  0020               	movlb	0	; select bank0
  2956  0349  082D               	movf	Initialize_Parameters@i,w
  2957  034A  00DD               	movwf	??_Initialize_Parameters
  2958  034B  3001               	movlw	1
  2959  034C                     u1715:	
  2960  034C  35DD               	lslf	??_Initialize_Parameters,f
  2961  034D  3EFF               	addlw	-1
  2962  034E  1D03               	skipz
  2963  034F  2B4C               	goto	u1715
  2964  0350  355D               	lslf	??_Initialize_Parameters,w
  2965  0351  3E25               	addlw	(low (_StP| 0))& (0+255)
  2966  0352  0086               	movwf	6
  2967  0353  0187               	clrf	7
  2968  0354  3001               	movlw	1
  2969  0355  3FC0               	movwi [0]fsr1
  2970  0356  3000               	movlw	0
  2971  0357  3FC1               	movwi [1]fsr1
  2972                           
  2973                           ;Controller_Protocol.c: 122: SeP[i].byte_data_complete = 1;
  2974  0358  3005               	movlw	5
  2975  0359  00DD               	movwf	??_Initialize_Parameters
  2976  035A  085D               	movf	??_Initialize_Parameters,w
  2977  035B  00D9               	movwf	___bmul@multiplicand
  2978  035C  082D               	movf	Initialize_Parameters@i,w
  2979  035D  3185  2538  3183   	fcall	___bmul
  2980  0360  3E04               	addlw	4
  2981  0361  3E20               	addlw	(low (_SeP| 0))& (0+255)
  2982  0362  0086               	movwf	6
  2983  0363  0187               	clrf	7
  2984  0364  0181               	clrf	1
  2985  0365  0A81               	incf	1,f
  2986  0366  3001               	movlw	1
  2987  0367  0020               	movlb	0	; select bank0
  2988  0368  07AD               	addwf	Initialize_Parameters@i,f
  2989  0369  3000               	movlw	0
  2990  036A  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2991  036B  2B3D               	goto	L2
  2992  036C                     __end_of_Initialize_Parameters:	
  2993                           
  2994                           	psect	text13
  2995  0538                     __ptext13:	
  2996 ;; *************** function ___bmul *****************
  2997 ;; Defined at:
  2998 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  multiplier      1    wreg     unsigned char 
  3001 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  multiplier      1   11[BANK0 ] unsigned char 
  3004 ;;  product         1   10[BANK0 ] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      unsigned char 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3014 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;Total ram usage:        4 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; Hardware stack levels required when called:    4
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_Initialize_Parameters
  3025 ;;		_Send_Till_EndSignal
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function ___bmul
  3031  0538                     ___bmul:	
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3035                           ;___bmul@multiplier stored from wreg
  3036  0538  0020               	movlb	0	; select bank0
  3037  0539  00DC               	movwf	___bmul@multiplier
  3038  053A  01DB               	clrf	___bmul@product
  3039  053B                     l1146:	
  3040  053B  1C5C               	btfss	___bmul@multiplier,0
  3041  053C  2D41               	goto	l1150
  3042  053D  0859               	movf	___bmul@multiplicand,w
  3043  053E  00DA               	movwf	??___bmul
  3044  053F  085A               	movf	??___bmul,w
  3045  0540  07DB               	addwf	___bmul@product,f
  3046  0541                     l1150:	
  3047  0541  1003               	clrc
  3048  0542  0DD9               	rlf	___bmul@multiplicand,f
  3049  0543  1003               	clrc
  3050  0544  0CDC               	rrf	___bmul@multiplier,f
  3051  0545  085C               	movf	___bmul@multiplier,w
  3052  0546  1D03               	btfss	3,2
  3053  0547  2D3B               	goto	l1146
  3054  0548  085B               	movf	___bmul@product,w
  3055  0549  0008               	return
  3056  054A                     __end_of___bmul:	
  3057                           
  3058                           	psect	intentry
  3059  0004                     __pintentry:	
  3060 ;; *************** function _INTERRUPT_HANDLER *****************
  3061 ;; Defined at:
  3062 ;;		line 219 in file "main.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		_Reception_from_master
  3085 ;; This function is called by:
  3086 ;;		Interrupt level 1
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090  0004                     _INTERRUPT_HANDLER:	
  3091                           
  3092                           ;incstack = 0
  3093  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3094                           
  3095                           ; Regs used in _INTERRUPT_HANDLER: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3096  0005  3180               	pagesel	$
  3097                           
  3098                           ;main.c: 220: if (PIR1bits.RCIF) {
  3099  0006  0020               	movlb	0	; select bank0
  3100  0007  1E91               	btfss	17,5	;volatile
  3101  0008  280C               	goto	i1l131
  3102                           
  3103                           ;main.c: 221: Reception_from_master(0xC0);
  3104  0009  30C0               	movlw	192
  3105  000A  3183  23C7         	fcall	_Reception_from_master
  3106  000C                     i1l131:	
  3107                           ;main.c: 222: } else;
  3108                           
  3109  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3110  000D  0009               	retfie
  3111  000E                     __end_of_INTERRUPT_HANDLER:	
  3112                           
  3113                           	psect	text15
  3114  03C7                     __ptext15:	
  3115 ;; *************** function _Reception_from_master *****************
  3116 ;; Defined at:
  3117 ;;		line 36 in file "communication.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  slave_addres    1    wreg     unsigned char 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  slave_addres    1    6[BANK0 ] unsigned char 
  3122 ;;  error_comple    1    7[BANK0 ] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3135 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3136 ;;Total ram usage:        5 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    2
  3139 ;; This function calls:
  3140 ;;		_Store_Datas
  3141 ;;		_slave_address_check
  3142 ;; This function is called by:
  3143 ;;		_INTERRUPT_HANDLER
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _Reception_from_master
  3149  03C7                     _Reception_from_master:	
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _Reception_from_master: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  3153                           ;Reception_from_master@slave_address stored from wreg
  3154  03C7  0020               	movlb	0	; select bank0
  3155  03C8  00D7               	movwf	Reception_from_master@slave_address
  3156                           
  3157                           ;communication.c: 37: static uint8_t Receive_data_count = 0;;communication.c: 38: uint8_
      +                          t error_complete = 0;
  3158  03C9  01D8               	clrf	Reception_from_master@error_complete
  3159                           
  3160                           ;communication.c: 53: error_complete = Store_Datas(Buffer0, RC1REG, 6 * 2 + 3, 0, EUSART
      +                          _ERROR_from_master);
  3161  03CA  0023               	movlb	3	; select bank3
  3162  03CB  0819               	movf	25,w	;volatile
  3163  03CC  00FA               	movwf	??_Reception_from_master
  3164  03CD  087A               	movf	??_Reception_from_master,w
  3165  03CE  00F2               	movwf	Store_Datas@received_data
  3166  03CF  300F               	movlw	15
  3167  03D0  00F3               	movwf	Store_Datas@number_of_receive_data
  3168  03D1  3000               	movlw	0
  3169  03D2  00F4               	movwf	Store_Datas@number_of_receive_data+1
  3170  03D3  3000               	movlw	0
  3171  03D4  00F5               	movwf	Store_Datas@bus_number
  3172  03D5  00F6               	movwf	Store_Datas@bus_number+1
  3173  03D6  304A               	movlw	low _EUSART_ERROR_from_master
  3174  03D7  00F7               	movwf	Store_Datas@EUSART_ERROR
  3175  03D8  3005               	movlw	high _EUSART_ERROR_from_master
  3176  03D9  00F8               	movwf	Store_Datas@EUSART_ERROR+1
  3177  03DA  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  3178  03DB  3180  2023  3183   	fcall	_Store_Datas
  3179  03DE  00FB               	movwf	??_Reception_from_master+1
  3180  03DF  087B               	movf	??_Reception_from_master+1,w
  3181  03E0  0020               	movlb	0	; select bank0
  3182  03E1  00D8               	movwf	Reception_from_master@error_complete
  3183                           
  3184                           ;communication.c: 56: if (error_complete == 1) {
  3185  03E2  0358               	decf	Reception_from_master@error_complete,w
  3186  03E3  1903               	btfsc	3,2
  3187  03E4  2BED               	goto	i1l1416
  3188                           
  3189                           ;communication.c: 58: } else if ((error_complete == 2) && (Receive_data_count != (6 * 2 
      +                          + 3 - 1))) {
  3190                           
  3191                           ;communication.c: 57: Receive_data_count = 0;
  3192  03E5  3002               	movlw	2
  3193  03E6  0658               	xorwf	Reception_from_master@error_complete,w
  3194  03E7  1D03               	btfss	3,2
  3195  03E8  2BEF               	goto	i1l1418
  3196  03E9  300E               	movlw	14
  3197  03EA  0634               	xorwf	Reception_from_master@Receive_data_count,w
  3198  03EB  1903               	btfsc	3,2
  3199  03EC  2BEF               	goto	i1l1418
  3200  03ED                     i1l1416:	
  3201                           
  3202                           ;communication.c: 59: Receive_data_count = 0;
  3203  03ED  01B4               	clrf	Reception_from_master@Receive_data_count
  3204                           
  3205                           ;communication.c: 60: } else {
  3206  03EE  2C03               	goto	i1l1422
  3207  03EF                     i1l1418:	
  3208                           
  3209                           ;communication.c: 61: slave_different_flag = slave_address_check(Receive_data_count, sla
      +                          ve_address, slave_different_flag);
  3210  03EF  0857               	movf	Reception_from_master@slave_address,w
  3211  03F0  00FA               	movwf	??_Reception_from_master
  3212  03F1  087A               	movf	??_Reception_from_master,w
  3213  03F2  00F0               	movwf	slave_address_check@slave_address
  3214  03F3  0866               	movf	_slave_different_flag,w
  3215  03F4  00FB               	movwf	??_Reception_from_master+1
  3216  03F5  087B               	movf	??_Reception_from_master+1,w
  3217  03F6  00F1               	movwf	slave_address_check@slave_flag
  3218  03F7  0834               	movf	Reception_from_master@Receive_data_count,w
  3219  03F8  3184  2493  3183   	fcall	_slave_address_check
  3220  03FB  00FC               	movwf	??_Reception_from_master+2
  3221  03FC  087C               	movf	??_Reception_from_master+2,w
  3222  03FD  0020               	movlb	0	; select bank0
  3223  03FE  00E6               	movwf	_slave_different_flag
  3224                           
  3225                           ;communication.c: 62: Receive_data_count++;
  3226  03FF  3001               	movlw	1
  3227  0400  00FA               	movwf	??_Reception_from_master
  3228  0401  087A               	movf	??_Reception_from_master,w
  3229  0402  07B4               	addwf	Reception_from_master@Receive_data_count,f
  3230  0403                     i1l1422:	
  3231                           
  3232                           ;communication.c: 63: };communication.c: 65: if ((error_complete == 2) && (Receive_data_
      +                          count == 6 * 2 + 3)) {
  3233  0403  3002               	movlw	2
  3234  0404  0658               	xorwf	Reception_from_master@error_complete,w
  3235  0405  1D03               	btfss	3,2
  3236  0406  0008               	return
  3237  0407  300F               	movlw	15
  3238  0408  0634               	xorwf	Reception_from_master@Receive_data_count,w
  3239  0409  1D03               	btfss	3,2
  3240  040A  0008               	return
  3241                           
  3242                           ;communication.c: 66: Receive_flag = 0;
  3243  040B  01E7               	clrf	_Receive_flag
  3244                           
  3245                           ;communication.c: 67: Receive_data_count = 0;
  3246  040C  01B4               	clrf	Reception_from_master@Receive_data_count
  3247  040D  0008               	return
  3248  040E                     __end_of_Reception_from_master:	
  3249                           
  3250                           	psect	text16
  3251  0493                     __ptext16:	
  3252 ;; *************** function _slave_address_check *****************
  3253 ;; Defined at:
  3254 ;;		line 74 in file "communication.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  data_count      1    wreg     unsigned char 
  3257 ;;  slave_addres    1    0[COMMON] unsigned char 
  3258 ;;  slave_flag      1    1[COMMON] unsigned char 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;  data_count      1    5[COMMON] unsigned char 
  3261 ;;  sample_data     1    6[COMMON] unsigned char 
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      unsigned char 
  3264 ;; Registers used:
  3265 ;;		wreg, status,2, status,0
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;Total ram usage:        7 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_Reception_from_master
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function _slave_address_check
  3286  0493                     _slave_address_check:	
  3287                           
  3288                           ;incstack = 0
  3289                           ; Regs used in _slave_address_check: [wreg+status,2+status,0]
  3290                           ;slave_address_check@data_count stored from wreg
  3291  0493  00F5               	movwf	slave_address_check@data_count
  3292                           
  3293                           ;communication.c: 75: if (slave_flag == 2) {
  3294  0494  3002               	movlw	2
  3295  0495  0671               	xorwf	slave_address_check@slave_flag,w
  3296  0496  1D03               	btfss	3,2
  3297  0497  2CB5               	goto	i1l1378
  3298                           
  3299                           ;communication.c: 76: if (data_count == 4) {
  3300  0498  3004               	movlw	4
  3301  0499  0675               	xorwf	slave_address_check@data_count,w
  3302  049A  1D03               	btfss	3,2
  3303  049B  2CB3               	goto	i1l1372
  3304                           
  3305                           ;communication.c: 77: uint8_t sample_data = (Buffer0[1].upper_data << 4) | Buffer0[2].up
      +                          per_data;
  3306  049C  0020               	movlb	0	; select bank0
  3307  049D  0E38               	swapf	_Buffer0+2,w
  3308  049E  390F               	andlw	15
  3309  049F  00F2               	movwf	??_slave_address_check
  3310  04A0  0E37               	swapf	_Buffer0+1,w
  3311  04A1  390F               	andlw	15
  3312  04A2  00F3               	movwf	??_slave_address_check+1
  3313  04A3  3003               	movlw	3
  3314  04A4                     u205_25:	
  3315  04A4  35F3               	lslf	??_slave_address_check+1,f
  3316  04A5  3EFF               	addlw	-1
  3317  04A6  1D03               	skipz
  3318  04A7  2CA4               	goto	u205_25
  3319  04A8  3573               	lslf	??_slave_address_check+1,w
  3320  04A9  0472               	iorwf	??_slave_address_check,w
  3321  04AA  00F4               	movwf	??_slave_address_check+2
  3322  04AB  0874               	movf	??_slave_address_check+2,w
  3323  04AC  00F6               	movwf	slave_address_check@sample_data
  3324                           
  3325                           ;communication.c: 79: if (sample_data == slave_address) {
  3326  04AD  0876               	movf	slave_address_check@sample_data,w
  3327  04AE  0670               	xorwf	slave_address_check@slave_address,w
  3328  04AF  1D03               	skipz
  3329  04B0  2CB3               	goto	i1l1372
  3330                           
  3331                           ;communication.c: 80: return 1;
  3332  04B1  3001               	movlw	1
  3333  04B2  0008               	return
  3334  04B3                     i1l1372:	
  3335                           
  3336                           ;communication.c: 81: };communication.c: 82: };communication.c: 83: return 2;
  3337  04B3  3002               	movlw	2
  3338                           
  3339                           ;communication.c: 84: } else {
  3340  04B4  0008               	return
  3341  04B5                     i1l1378:	
  3342                           
  3343                           ;communication.c: 86: return slave_flag;
  3344  04B5  0871               	movf	slave_address_check@slave_flag,w
  3345  04B6  0008               	return
  3346  04B7                     __end_of_slave_address_check:	
  3347                           
  3348                           	psect	text17
  3349  0023                     __ptext17:	
  3350 ;; *************** function _Store_Datas *****************
  3351 ;; Defined at:
  3352 ;;		line 34 in file "Controller_Protocol.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  Buffer          1    wreg     PTR struct .
  3355 ;;		 -> Buffer0(15), 
  3356 ;;  received_dat    1    2[COMMON] unsigned char 
  3357 ;;  number_of_re    2    3[COMMON] int 
  3358 ;;  bus_number      2    5[COMMON] int 
  3359 ;;  EUSART_ERROR    2    7[COMMON] PTR FTN()unsigned char 
  3360 ;;		 -> EUSART_ERROR_from_master(1), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  Buffer          1    9[COMMON] PTR struct .
  3363 ;;		 -> Buffer0(15), 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      unsigned char 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3373 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3375 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3376 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3377 ;;Total ram usage:       14 bytes
  3378 ;; Hardware stack levels used:    1
  3379 ;; Hardware stack levels required when called:    1
  3380 ;; This function calls:
  3381 ;;		_EUSART_ERROR_from_master
  3382 ;; This function is called by:
  3383 ;;		_Reception_from_master
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _Store_Datas
  3389  0023                     _Store_Datas:	
  3390                           
  3391                           ;incstack = 0
  3392                           ; Regs used in _Store_Datas: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3393                           ;Store_Datas@Buffer stored from wreg
  3394  0023  00F9               	movwf	Store_Datas@Buffer
  3395                           
  3396                           ;Controller_Protocol.c: 35: if (EUSART_ERROR() == 1) {
  3397  0024  0878               	movf	Store_Datas@EUSART_ERROR+1,w
  3398  0025  008A               	movwf	10
  3399  0026  0877               	movf	Store_Datas@EUSART_ERROR,w
  3400  0027  000A               	callw
  3401  0028  3180               	pagesel	$
  3402  0029  3A01               	xorlw	1
  3403  002A  1D03               	skipz
  3404  002B  2857               	goto	i1l1318
  3405                           
  3406                           ;Controller_Protocol.c: 36: StP[bus_number].S_flag = 0;
  3407  002C  0875               	movf	Store_Datas@bus_number,w
  3408  002D  0020               	movlb	0	; select bank0
  3409  002E  00D1               	movwf	??_Store_Datas
  3410  002F  3001               	movlw	1
  3411  0030                     u174_25:	
  3412  0030  35D1               	lslf	??_Store_Datas,f
  3413  0031  3EFF               	addlw	-1
  3414  0032  1D03               	skipz
  3415  0033  2830               	goto	u174_25
  3416  0034  3551               	lslf	??_Store_Datas,w
  3417  0035  3E03               	addlw	3
  3418  0036  3E25               	addlw	(low (_StP| 0))& (0+255)
  3419  0037  0086               	movwf	6
  3420  0038  0187               	clrf	7
  3421  0039  0181               	clrf	1
  3422                           
  3423                           ;Controller_Protocol.c: 37: StP[bus_number].Buffer_count = 0;
  3424  003A  0875               	movf	Store_Datas@bus_number,w
  3425  003B  00D1               	movwf	??_Store_Datas
  3426  003C  3001               	movlw	1
  3427  003D                     u175_25:	
  3428  003D  35D1               	lslf	??_Store_Datas,f
  3429  003E  3EFF               	addlw	-1
  3430  003F  1D03               	skipz
  3431  0040  283D               	goto	u175_25
  3432  0041  3551               	lslf	??_Store_Datas,w
  3433  0042  3E25               	addlw	(low (_StP| 0))& (0+255)
  3434  0043  0086               	movwf	6
  3435  0044  0187               	clrf	7
  3436  0045  3000               	movlw	0
  3437  0046  3FC0               	movwi [0]fsr1
  3438  0047  3FC1               	movwi [1]fsr1
  3439                           
  3440                           ;Controller_Protocol.c: 38: StP[bus_number].Start_signal_has_come = 0;
  3441  0048  0875               	movf	Store_Datas@bus_number,w
  3442  0049  00D1               	movwf	??_Store_Datas
  3443  004A  3001               	movlw	1
  3444  004B                     u176_25:	
  3445  004B  35D1               	lslf	??_Store_Datas,f
  3446  004C  3EFF               	addlw	-1
  3447  004D  1D03               	skipz
  3448  004E  284B               	goto	u176_25
  3449  004F  3551               	lslf	??_Store_Datas,w
  3450  0050  3E02               	addlw	2
  3451  0051  3E25               	addlw	(low (_StP| 0))& (0+255)
  3452  0052  0086               	movwf	6
  3453  0053  0187               	clrf	7
  3454  0054  0181               	clrf	1
  3455                           
  3456                           ;Controller_Protocol.c: 39: return 1;
  3457  0055  3001               	movlw	1
  3458                           
  3459                           ;Controller_Protocol.c: 40: } else {
  3460  0056  0008               	return
  3461  0057                     i1l1318:	
  3462                           
  3463                           ;Controller_Protocol.c: 41: if (StP[bus_number].Start_signal_has_come == 0) {
  3464  0057  0875               	movf	Store_Datas@bus_number,w
  3465  0058  0020               	movlb	0	; select bank0
  3466  0059  00D1               	movwf	??_Store_Datas
  3467  005A  3001               	movlw	1
  3468  005B                     u177_25:	
  3469  005B  35D1               	lslf	??_Store_Datas,f
  3470  005C  3EFF               	addlw	-1
  3471  005D  1D03               	skipz
  3472  005E  285B               	goto	u177_25
  3473  005F  3551               	lslf	??_Store_Datas,w
  3474  0060  3E02               	addlw	2
  3475  0061  3E25               	addlw	(low (_StP| 0))& (0+255)
  3476  0062  0086               	movwf	6
  3477  0063  0187               	clrf	7
  3478  0064  0801               	movf	1,w
  3479  0065  1D03               	btfss	3,2
  3480  0066  28C4               	goto	i1l1334
  3481                           
  3482                           ;Controller_Protocol.c: 42: Buffer[StP[bus_number].S_flag].all_data = received_data;
  3483  0067  0872               	movf	Store_Datas@received_data,w
  3484  0068  00D1               	movwf	??_Store_Datas
  3485  0069  0875               	movf	Store_Datas@bus_number,w
  3486  006A  00D2               	movwf	??_Store_Datas+1
  3487  006B  3001               	movlw	1
  3488  006C                     u179_25:	
  3489  006C  35D2               	lslf	??_Store_Datas+1,f
  3490  006D  3EFF               	addlw	-1
  3491  006E  1D03               	skipz
  3492  006F  286C               	goto	u179_25
  3493  0070  3552               	lslf	??_Store_Datas+1,w
  3494  0071  3E03               	addlw	3
  3495  0072  3E25               	addlw	(low (_StP| 0))& (0+255)
  3496  0073  0086               	movwf	6
  3497  0074  0187               	clrf	7
  3498  0075  0801               	movf	1,w
  3499  0076  0779               	addwf	Store_Datas@Buffer,w
  3500  0077  00D3               	movwf	??_Store_Datas+2
  3501  0078  0853               	movf	??_Store_Datas+2,w
  3502  0079  0086               	movwf	6
  3503  007A  0187               	clrf	7
  3504  007B  0851               	movf	??_Store_Datas,w
  3505  007C  0081               	movwf	1
  3506                           
  3507                           ;Controller_Protocol.c: 43: if (StP[bus_number].S_flag == 1) {
  3508  007D  0875               	movf	Store_Datas@bus_number,w
  3509  007E  00D1               	movwf	??_Store_Datas
  3510  007F  3001               	movlw	1
  3511  0080                     u180_25:	
  3512  0080  35D1               	lslf	??_Store_Datas,f
  3513  0081  3EFF               	addlw	-1
  3514  0082  1D03               	skipz
  3515  0083  2880               	goto	u180_25
  3516  0084  3551               	lslf	??_Store_Datas,w
  3517  0085  3E03               	addlw	3
  3518  0086  3E25               	addlw	(low (_StP| 0))& (0+255)
  3519  0087  0086               	movwf	6
  3520  0088  0187               	clrf	7
  3521  0089  0301               	decf	1,w
  3522  008A  1D03               	btfss	3,2
  3523  008B  28AC               	goto	i1l1326
  3524                           
  3525                           ;Controller_Protocol.c: 44: if (Buffer[1].lower_data == 5) StP[bus_number].Start_signal_
      +                          has_come = 1;
  3526  008C  0A79               	incf	Store_Datas@Buffer,w
  3527  008D  0086               	movwf	6
  3528  008E  0187               	clrf	7
  3529  008F  0801               	movf	1,w
  3530  0090  390F               	andlw	15
  3531  0091  3A05               	xorlw	5
  3532  0092  1D03               	skipz
  3533  0093  28A2               	goto	i1l224
  3534  0094  0875               	movf	Store_Datas@bus_number,w
  3535  0095  00D1               	movwf	??_Store_Datas
  3536  0096  3001               	movlw	1
  3537  0097                     u183_25:	
  3538  0097  35D1               	lslf	??_Store_Datas,f
  3539  0098  3EFF               	addlw	-1
  3540  0099  1D03               	skipz
  3541  009A  2897               	goto	u183_25
  3542  009B  3551               	lslf	??_Store_Datas,w
  3543  009C  3E02               	addlw	2
  3544  009D  3E25               	addlw	(low (_StP| 0))& (0+255)
  3545  009E  0086               	movwf	6
  3546  009F  0187               	clrf	7
  3547  00A0  0181               	clrf	1
  3548  00A1  0A81               	incf	1,f
  3549  00A2                     i1l224:	
  3550                           
  3551                           ;Controller_Protocol.c: 45: StP[bus_number].S_flag = 0;
  3552  00A2  0875               	movf	Store_Datas@bus_number,w
  3553  00A3  00D1               	movwf	??_Store_Datas
  3554  00A4  3001               	movlw	1
  3555  00A5                     u184_25:	
  3556  00A5  35D1               	lslf	??_Store_Datas,f
  3557  00A6  3EFF               	addlw	-1
  3558  00A7  1D03               	skipz
  3559  00A8  28A5               	goto	u184_25
  3560  00A9  3551               	lslf	??_Store_Datas,w
  3561  00AA  3E03               	addlw	3
  3562  00AB  29A9               	goto	L3
  3563  00AC                     i1l1326:	
  3564                           ;Controller_Protocol.c: 46: } else if (Buffer[0].all_data == 'S') {
  3565                           
  3566  00AC  0879               	movf	Store_Datas@Buffer,w
  3567  00AD  0086               	movwf	6
  3568  00AE  0187               	clrf	7
  3569  00AF  3053               	movlw	83
  3570  00B0  0601               	xorwf	1,w
  3571  00B1  1D03               	btfss	3,2
  3572  00B2  28C2               	goto	i1l1330
  3573                           
  3574                           ;Controller_Protocol.c: 47: StP[bus_number].S_flag = 1;
  3575  00B3  0875               	movf	Store_Datas@bus_number,w
  3576  00B4  00D1               	movwf	??_Store_Datas
  3577  00B5  3001               	movlw	1
  3578  00B6                     u186_25:	
  3579  00B6  35D1               	lslf	??_Store_Datas,f
  3580  00B7  3EFF               	addlw	-1
  3581  00B8  1D03               	skipz
  3582  00B9  28B6               	goto	u186_25
  3583  00BA  3551               	lslf	??_Store_Datas,w
  3584  00BB  3E03               	addlw	3
  3585  00BC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3586  00BD  0086               	movwf	6
  3587  00BE  0187               	clrf	7
  3588  00BF  0181               	clrf	1
  3589  00C0  0A81               	incf	1,f
  3590                           
  3591                           ;Controller_Protocol.c: 48: }else return 1;
  3592  00C1  29AD               	goto	i1l1356
  3593  00C2                     i1l1330:	
  3594  00C2  3001               	movlw	1
  3595  00C3  0008               	return
  3596  00C4                     i1l1334:	
  3597                           ;Controller_Protocol.c: 49: } else {
  3598                           
  3599                           
  3600                           ;Controller_Protocol.c: 50: StP[bus_number].Buffer_count++;
  3601  00C4  0875               	movf	Store_Datas@bus_number,w
  3602  00C5  00D1               	movwf	??_Store_Datas
  3603  00C6  3001               	movlw	1
  3604  00C7                     u187_25:	
  3605  00C7  35D1               	lslf	??_Store_Datas,f
  3606  00C8  3EFF               	addlw	-1
  3607  00C9  1D03               	skipz
  3608  00CA  28C7               	goto	u187_25
  3609  00CB  3551               	lslf	??_Store_Datas,w
  3610  00CC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3611  00CD  0086               	movwf	6
  3612  00CE  0187               	clrf	7
  3613  00CF  3001               	movlw	1
  3614  00D0  0781               	addwf	1,f
  3615  00D1  3141               	addfsr 1,1
  3616  00D2  1803               	skipnc
  3617  00D3  0A81               	incf	1,f
  3618                           
  3619                           ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count > number_of_receive_data - 1
      +                          ){
  3620  00D4  0875               	movf	Store_Datas@bus_number,w
  3621  00D5  00D1               	movwf	??_Store_Datas
  3622  00D6  3001               	movlw	1
  3623  00D7                     u188_25:	
  3624  00D7  35D1               	lslf	??_Store_Datas,f
  3625  00D8  3EFF               	addlw	-1
  3626  00D9  1D03               	skipz
  3627  00DA  28D7               	goto	u188_25
  3628  00DB  3551               	lslf	??_Store_Datas,w
  3629  00DC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3630  00DD  0086               	movwf	6
  3631  00DE  0187               	clrf	7
  3632  00DF  3F40               	moviw [0]fsr1
  3633  00E0  00D2               	movwf	??_Store_Datas+1
  3634  00E1  3F41               	moviw [1]fsr1
  3635  00E2  00D3               	movwf	??_Store_Datas+2
  3636  00E3  0873               	movf	Store_Datas@number_of_receive_data,w
  3637  00E4  3EFF               	addlw	255
  3638  00E5  00D4               	movwf	??_Store_Datas+3
  3639  00E6  30FF               	movlw	255
  3640  00E7  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3641  00E8  00D5               	movwf	??_Store_Datas+4
  3642  00E9  0855               	movf	??_Store_Datas+4,w
  3643  00EA  3A80               	xorlw	128
  3644  00EB  00D6               	movwf	??_Store_Datas+5
  3645  00EC  0853               	movf	??_Store_Datas+2,w
  3646  00ED  3A80               	xorlw	128
  3647  00EE  0256               	subwf	??_Store_Datas+5,w
  3648  00EF  1D03               	skipz
  3649  00F0  28F3               	goto	u189_25
  3650  00F1  0852               	movf	??_Store_Datas+1,w
  3651  00F2  0254               	subwf	??_Store_Datas+3,w
  3652  00F3                     u189_25:	
  3653  00F3  1803               	skipnc
  3654  00F4  2914               	goto	i1l1342
  3655                           
  3656                           ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
  3657  00F5  0875               	movf	Store_Datas@bus_number,w
  3658  00F6  0020               	movlb	0	; select bank0
  3659  00F7  00D1               	movwf	??_Store_Datas
  3660  00F8  3001               	movlw	1
  3661  00F9                     u190_25:	
  3662  00F9  35D1               	lslf	??_Store_Datas,f
  3663  00FA  3EFF               	addlw	-1
  3664  00FB  1D03               	skipz
  3665  00FC  28F9               	goto	u190_25
  3666  00FD  3551               	lslf	??_Store_Datas,w
  3667  00FE  3E25               	addlw	(low (_StP| 0))& (0+255)
  3668  00FF  0086               	movwf	6
  3669  0100  0187               	clrf	7
  3670  0101  3001               	movlw	1
  3671  0102  3FC0               	movwi [0]fsr1
  3672  0103  3000               	movlw	0
  3673  0104  3FC1               	movwi [1]fsr1
  3674                           
  3675                           ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
  3676  0105  0875               	movf	Store_Datas@bus_number,w
  3677  0106  00D1               	movwf	??_Store_Datas
  3678  0107  3001               	movlw	1
  3679  0108                     u191_25:	
  3680  0108  35D1               	lslf	??_Store_Datas,f
  3681  0109  3EFF               	addlw	-1
  3682  010A  1D03               	skipz
  3683  010B  2908               	goto	u191_25
  3684  010C  3551               	lslf	??_Store_Datas,w
  3685  010D  3E02               	addlw	2
  3686  010E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3687  010F  0086               	movwf	6
  3688  0110  0187               	clrf	7
  3689  0111  0181               	clrf	1
  3690                           
  3691                           ;Controller_Protocol.c: 55: return 1;
  3692  0112  3001               	movlw	1
  3693  0113  0008               	return
  3694  0114                     i1l1342:	
  3695                           
  3696                           ;Controller_Protocol.c: 56: };Controller_Protocol.c: 58: Buffer[StP[bus_number].Buffer_c
      +                          ount].all_data = received_data;
  3697  0114  0872               	movf	Store_Datas@received_data,w
  3698  0115  0020               	movlb	0	; select bank0
  3699  0116  00D1               	movwf	??_Store_Datas
  3700  0117  0875               	movf	Store_Datas@bus_number,w
  3701  0118  00D2               	movwf	??_Store_Datas+1
  3702  0119  3001               	movlw	1
  3703  011A                     u192_25:	
  3704  011A  35D2               	lslf	??_Store_Datas+1,f
  3705  011B  3EFF               	addlw	-1
  3706  011C  1D03               	skipz
  3707  011D  291A               	goto	u192_25
  3708  011E  3552               	lslf	??_Store_Datas+1,w
  3709  011F  3E25               	addlw	(low (_StP| 0))& (0+255)
  3710  0120  0086               	movwf	6
  3711  0121  0187               	clrf	7
  3712  0122  0801               	movf	1,w
  3713  0123  0779               	addwf	Store_Datas@Buffer,w
  3714  0124  00D3               	movwf	??_Store_Datas+2
  3715  0125  0853               	movf	??_Store_Datas+2,w
  3716  0126  0086               	movwf	6
  3717  0127  0187               	clrf	7
  3718  0128  0851               	movf	??_Store_Datas,w
  3719  0129  0081               	movwf	1
  3720                           
  3721                           ;Controller_Protocol.c: 59: if (Buffer[StP[bus_number].Buffer_count].all_data == 'C') {
  3722  012A  0875               	movf	Store_Datas@bus_number,w
  3723  012B  00D1               	movwf	??_Store_Datas
  3724  012C  3001               	movlw	1
  3725  012D                     u193_25:	
  3726  012D  35D1               	lslf	??_Store_Datas,f
  3727  012E  3EFF               	addlw	-1
  3728  012F  1D03               	skipz
  3729  0130  292D               	goto	u193_25
  3730  0131  3551               	lslf	??_Store_Datas,w
  3731  0132  3E25               	addlw	(low (_StP| 0))& (0+255)
  3732  0133  0086               	movwf	6
  3733  0134  0187               	clrf	7
  3734  0135  0801               	movf	1,w
  3735  0136  0779               	addwf	Store_Datas@Buffer,w
  3736  0137  00D2               	movwf	??_Store_Datas+1
  3737  0138  0852               	movf	??_Store_Datas+1,w
  3738  0139  0086               	movwf	6
  3739  013A  0187               	clrf	7
  3740  013B  3043               	movlw	67
  3741  013C  0601               	xorwf	1,w
  3742  013D  1D03               	btfss	3,2
  3743  013E  2974               	goto	i1l1352
  3744                           
  3745                           ;Controller_Protocol.c: 61: if (Buffer[StP[bus_number].Buffer_count - 1].upper_data == 3
      +                          ) {
  3746  013F  0875               	movf	Store_Datas@bus_number,w
  3747  0140  00D1               	movwf	??_Store_Datas
  3748  0141  3001               	movlw	1
  3749  0142                     u195_25:	
  3750  0142  35D1               	lslf	??_Store_Datas,f
  3751  0143  3EFF               	addlw	-1
  3752  0144  1D03               	skipz
  3753  0145  2942               	goto	u195_25
  3754  0146  3551               	lslf	??_Store_Datas,w
  3755  0147  3E25               	addlw	(low (_StP| 0))& (0+255)
  3756  0148  0086               	movwf	6
  3757  0149  0187               	clrf	7
  3758  014A  0801               	movf	1,w
  3759  014B  3EFF               	addlw	-1
  3760  014C  0779               	addwf	Store_Datas@Buffer,w
  3761  014D  00D2               	movwf	??_Store_Datas+1
  3762  014E  0852               	movf	??_Store_Datas+1,w
  3763  014F  0086               	movwf	6
  3764  0150  0187               	clrf	7
  3765  0151  0E01               	swapf	1,w
  3766  0152  390F               	andlw	15
  3767  0153  3A03               	xorlw	3
  3768  0154  1D03               	skipz
  3769  0155  2974               	goto	i1l1352
  3770                           
  3771                           ;Controller_Protocol.c: 62: StP[bus_number].Buffer_count = 1;
  3772  0156  0875               	movf	Store_Datas@bus_number,w
  3773  0157  00D1               	movwf	??_Store_Datas
  3774  0158  3001               	movlw	1
  3775  0159                     u197_25:	
  3776  0159  35D1               	lslf	??_Store_Datas,f
  3777  015A  3EFF               	addlw	-1
  3778  015B  1D03               	skipz
  3779  015C  2959               	goto	u197_25
  3780  015D  3551               	lslf	??_Store_Datas,w
  3781  015E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3782  015F  0086               	movwf	6
  3783  0160  0187               	clrf	7
  3784  0161  3001               	movlw	1
  3785  0162  3FC0               	movwi [0]fsr1
  3786  0163  3000               	movlw	0
  3787  0164  3FC1               	movwi [1]fsr1
  3788                           
  3789                           ;Controller_Protocol.c: 63: StP[bus_number].Start_signal_has_come = 0;
  3790  0165  0875               	movf	Store_Datas@bus_number,w
  3791  0166  00D1               	movwf	??_Store_Datas
  3792  0167  3001               	movlw	1
  3793  0168                     u198_25:	
  3794  0168  35D1               	lslf	??_Store_Datas,f
  3795  0169  3EFF               	addlw	-1
  3796  016A  1D03               	skipz
  3797  016B  2968               	goto	u198_25
  3798  016C  3551               	lslf	??_Store_Datas,w
  3799  016D  3E02               	addlw	2
  3800  016E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3801  016F  0086               	movwf	6
  3802  0170  0187               	clrf	7
  3803  0171  0181               	clrf	1
  3804                           
  3805                           ;Controller_Protocol.c: 64: return 2;
  3806  0172  3002               	movlw	2
  3807  0173  0008               	return
  3808  0174                     i1l1352:	
  3809                           
  3810                           ;Controller_Protocol.c: 65: };Controller_Protocol.c: 66: };Controller_Protocol.c: 67: if
      +                           (StP[bus_number].Buffer_count == number_of_receive_data - 1) {
  3811  0174  0875               	movf	Store_Datas@bus_number,w
  3812  0175  00D1               	movwf	??_Store_Datas
  3813  0176  3001               	movlw	1
  3814  0177                     u199_25:	
  3815  0177  35D1               	lslf	??_Store_Datas,f
  3816  0178  3EFF               	addlw	-1
  3817  0179  1D03               	skipz
  3818  017A  2977               	goto	u199_25
  3819  017B  3551               	lslf	??_Store_Datas,w
  3820  017C  3E25               	addlw	(low (_StP| 0))& (0+255)
  3821  017D  0086               	movwf	6
  3822  017E  0187               	clrf	7
  3823  017F  3F40               	moviw [0]fsr1
  3824  0180  00D2               	movwf	??_Store_Datas+1
  3825  0181  3F41               	moviw [1]fsr1
  3826  0182  00D3               	movwf	??_Store_Datas+2
  3827  0183  0873               	movf	Store_Datas@number_of_receive_data,w
  3828  0184  3EFF               	addlw	255
  3829  0185  00D4               	movwf	??_Store_Datas+3
  3830  0186  30FF               	movlw	255
  3831  0187  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3832  0188  00D5               	movwf	??_Store_Datas+4
  3833  0189  0853               	movf	??_Store_Datas+2,w
  3834  018A  0655               	xorwf	??_Store_Datas+4,w
  3835  018B  1D03               	skipz
  3836  018C  298F               	goto	u200_25
  3837  018D  0852               	movf	??_Store_Datas+1,w
  3838  018E  0654               	xorwf	??_Store_Datas+3,w
  3839  018F                     u200_25:	
  3840  018F  1D03               	skipz
  3841  0190  29AD               	goto	i1l1356
  3842                           
  3843                           ;Controller_Protocol.c: 68: StP[bus_number].Buffer_count = 1;
  3844  0191  0875               	movf	Store_Datas@bus_number,w
  3845  0192  00D1               	movwf	??_Store_Datas
  3846  0193  3001               	movlw	1
  3847  0194                     u201_25:	
  3848  0194  35D1               	lslf	??_Store_Datas,f
  3849  0195  3EFF               	addlw	-1
  3850  0196  1D03               	skipz
  3851  0197  2994               	goto	u201_25
  3852  0198  3551               	lslf	??_Store_Datas,w
  3853  0199  3E25               	addlw	(low (_StP| 0))& (0+255)
  3854  019A  0086               	movwf	6
  3855  019B  0187               	clrf	7
  3856  019C  3001               	movlw	1
  3857  019D  3FC0               	movwi [0]fsr1
  3858  019E  3000               	movlw	0
  3859  019F  3FC1               	movwi [1]fsr1
  3860                           
  3861                           ;Controller_Protocol.c: 69: StP[bus_number].Start_signal_has_come = 0;
  3862  01A0  0875               	movf	Store_Datas@bus_number,w
  3863  01A1  00D1               	movwf	??_Store_Datas
  3864  01A2  3001               	movlw	1
  3865  01A3                     u202_25:	
  3866  01A3  35D1               	lslf	??_Store_Datas,f
  3867  01A4  3EFF               	addlw	-1
  3868  01A5  1D03               	skipz
  3869  01A6  29A3               	goto	u202_25
  3870  01A7  3551               	lslf	??_Store_Datas,w
  3871  01A8  3E02               	addlw	2
  3872  01A9                     L3:	
  3873  01A9  3E25               	addlw	(low (_StP| 0))& (0+255)
  3874  01AA  0086               	movwf	6
  3875  01AB  0187               	clrf	7
  3876  01AC  0181               	clrf	1
  3877  01AD                     i1l1356:	
  3878                           
  3879                           ;Controller_Protocol.c: 70: };Controller_Protocol.c: 71: };Controller_Protocol.c: 73: re
      +                          turn 0;
  3880  01AD  3000               	movlw	0
  3881  01AE  0008               	return
  3882  01AF                     __end_of_Store_Datas:	
  3883                           
  3884                           	psect	text18
  3885  054A                     __ptext18:	
  3886 ;; *************** function _EUSART_ERROR_from_master *****************
  3887 ;; Defined at:
  3888 ;;		line 24 in file "communication.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;		None
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  waste_data      1    1[COMMON] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      unsigned char 
  3895 ;; Registers used:
  3896 ;;		wreg
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;Total ram usage:        2 bytes
  3907 ;; Hardware stack levels used:    1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_Reception_from_master
  3912 ;;		_Store_Datas
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           
  3917                           ;psect for function _EUSART_ERROR_from_master
  3918  054A                     _EUSART_ERROR_from_master:	
  3919                           
  3920                           ;communication.c: 25: if ((RC1STAbits.FERR == 1) || (RC1STAbits.OERR == 1)) {
  3921                           
  3922                           ;incstack = 0
  3923                           ; Regs used in _EUSART_ERROR_from_master: [wreg]
  3924  054A  0023               	movlb	3	; select bank3
  3925  054B  191D               	btfsc	29,2	;volatile
  3926  054C  2D4F               	goto	i1l1132
  3927  054D  1C9D               	btfss	29,1	;volatile
  3928  054E  2D57               	goto	i1l1140
  3929  054F                     i1l1132:	
  3930                           
  3931                           ;communication.c: 27: uint8_t waste_data = RC1REG;
  3932  054F  0819               	movf	25,w	;volatile
  3933  0550  00F0               	movwf	??_EUSART_ERROR_from_master
  3934  0551  0870               	movf	??_EUSART_ERROR_from_master,w
  3935  0552  00F1               	movwf	EUSART_ERROR_from_master@waste_data
  3936                           
  3937                           ;communication.c: 29: RC1STAbits.CREN = 0;
  3938  0553  121D               	bcf	29,4	;volatile
  3939                           
  3940                           ;communication.c: 30: RC1STAbits.CREN = 1;
  3941  0554  161D               	bsf	29,4	;volatile
  3942                           
  3943                           ;communication.c: 31: return 1;
  3944  0555  3001               	movlw	1
  3945  0556  0008               	return
  3946  0557                     i1l1140:	
  3947                           
  3948                           ;communication.c: 32: };communication.c: 33: return 0;
  3949  0557  3000               	movlw	0
  3950  0558  0008               	return
  3951  0559                     __end_of_EUSART_ERROR_from_master:	
  3952  007E                     btemp	set	126	;btemp
  3953  007E                     int$flags	set	126
  3954  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     21      72
    BANK1            80      4       4
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Store_Datas@Buffer	PTR struct . size(1) Largest target is 15
		 -> Buffer0(BANK0[15]), 

    Store_Datas@EUSART_ERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_ERROR_from_master(), 

    Organize_Datas@Buffer	PTR struct . size(1) Largest target is 15
		 -> Buffer0(BANK0[15]), 

    Organize_Datas@RxData	PTR struct . size(1) Largest target is 12
		 -> RxData0(BANK0[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas
    _Store_Datas->_EUSART_ERROR_from_master

Critical Paths under _main in BANK0

    _main->_Reception_from_master_main
    _SetData->_ChangeAddress
    _ChangeData->_Write_data
    _ChangeAddress->_Write_Address
    _Reception_from_master_main->_Organize_Datas
    _Initialize->_Initialize_Parameters
    _Initialize_Parameters->___bmul

Critical Paths under _INTERRUPT_HANDLER in BANK0

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4    3820
                                             20 BANK0      1     1      0
                                              0 BANK1      4     0      4
                         _Initialize
                     _Organize_Datas
         _Reception_from_master_main
                            _SetData
 ---------------------------------------------------------------------------------
 (1) _SetData                                              0     0      0    1003
                      _ChangeAddress
                         _ChangeData
 ---------------------------------------------------------------------------------
 (2) _ChangeData                                           0     0      0     762
                         _Write_data
 ---------------------------------------------------------------------------------
 (3) _Write_data                                           2     0      2     762
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ChangeAddress                                        3     3      0     241
                                             10 BANK0      3     3      0
                      _Write_Address
 ---------------------------------------------------------------------------------
 (3) _Write_Address                                        2     0      2     218
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Reception_from_master_main                           1     1      0    1182
                                             19 BANK0      1     1      0
                     _Organize_Datas
 ---------------------------------------------------------------------------------
 (2) _Organize_Datas                                      11     6      5    1182
                                              8 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           1     1      0     453
                                             13 BANK0      1     1      0
              _Initialize_Parameters
              _Oscillator_Initialize
                     _Pin_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Pin_Initialize                                       1     1      0      23
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Initialize_Parameters                                1     1      0     430
                                             12 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     430
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_HANDLER                                    0     0      0    1395
              _Reception_from_master
 ---------------------------------------------------------------------------------
 (5) _Reception_from_master                                5     5      0    1395
                                             10 COMMON     3     3      0
                                              6 BANK0      2     2      0
                        _Store_Datas
                _slave_address_check
 ---------------------------------------------------------------------------------
 (6) _slave_address_check                                  7     5      2     263
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (6) _Store_Datas                                         14     7      7    1042
                                              2 COMMON     8     1      7
                                              0 BANK0      6     6      0
           _EUSART_ERROR_from_master *
 ---------------------------------------------------------------------------------
 (7) _EUSART_ERROR_from_master                             2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
     _Initialize_Parameters
       ___bmul
     _Oscillator_Initialize
     _Pin_Initialize
     _UART_Initialize
   _Organize_Datas
   _Reception_from_master_main
     _Organize_Datas
   _SetData
     _ChangeAddress
       _Write_Address
     _ChangeData
       _Write_data

 _INTERRUPT_HANDLER (ROOT)
   _Reception_from_master
     _Store_Datas
       _EUSART_ERROR_from_master *
     _slave_address_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      48       5       90.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4       4       7        5.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      59      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      59      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jul 13 09:56:37 2019

                         ___bmul@product 005B                 Store_Datas@received_data 0072  
                            __CFG_CP$OFF 0000                                       _OP 0029  
                                    l212 0296                                      l214 02EA  
                                    l137 055D                                      l209 01CF  
                                    _GIE 005F                             __CFG_CPD$OFF 0000  
                                    _SeP 0020                                      _StP 0025  
                  _Oscillator_Initialize 0559       EUSART_ERROR_from_master@waste_data 0071  
                                    wreg 0009                             _BAUD1CONbits 019F  
                           __CFG_LVP$OFF 0000                               _ChangeData 036C  
                                   l1210 03A8                                     l1202 0391  
                                   l1212 03B0                                     l1204 0399  
                                   l1150 0541                                     l1146 053B  
                                   l1218 03BF                                     l1164 0284  
                                   l1168 02D8                                     l1178 04C6  
                                   l1194 037A                                     l1196 0382  
                                   l1294 033A                                     l1470 0472  
                                   l1288 031A                                     l1476 0488  
                                   l1398 04F3                                     u1100 0500  
                                   u1120 0508                                     u1200 0424  
                                   u1114 0502                                     u1140 0510  
                                   u1220 042C                                     u1134 050A  
                                   u1214 0426                                     u1240 0434  
                                   u1160 0414                                     u1234 042E  
                                   u1260 043C                                     u1180 041C  
                                   u1405 0246                                     u1254 0436  
                                   u1174 0416                                     u1415 025B  
                                   u1280 0444                                     u1505 02ED  
                                   u1345 01B4                                     u1274 043E  
                                   u1194 041E                                     u1515 02FE  
                                   u1435 0274                                     u1355 01C4  
                                   u1525 01D2                                     u1445 0287  
                                   u1365 01EE                                     u1535 01E8  
                                   u1455 0299                                     u1375 0203  
                                   u1705 0346                                     u1465 02AF  
                                   u1385 021A                                     u1650 046D  
                                   u1715 034C                                     u1395 0230  
                                   u1485 02C8                                     u1495 02DB  
                                   u1675 0318                                     u1685 031E  
                                   u1695 0338                                     _PLLR 48E0  
                    Pin_Initialize@state 0059                             __CFG_WRT$OFF 0000  
                                   _main 046F                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                                   _zero 002F                   ?_Reception_from_master 0070  
                                   start 000E                        ___bmul@multiplier 005C  
                        __end_of_SetData 056C                         ?_UART_Initialize 0070  
               Organize_Datas@bus_number 005C                   __size_of_Write_Address 0019  
                                  ?_main 00A0                            __CFG_WDTE$OFF 0000  
                  Store_Datas@bus_number 0075                           __CFG_DEBUG$OFF 0000  
                                  i1l131 000C                                    i1l224 00A2  
                                  _RXPPS 0E24                           __CFG_FCMEN$OFF 0000  
       slave_address_check@slave_address 0070                           _Organize_Datas 01AF  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
Reception_from_master@Receive_data_count 0034                           __CFG_BORV$HIGH 0000  
                  _Initialize_Parameters 030C                                    status 0003  
           Organize_Datas@number_of_data 005A                                    wtemp0 007E  
                         __CFG_CSWEN$OFF 0000                           __CFG_MCLRE$OFF 0000  
                        __initialization 0010              ?_Reception_from_master_main 0070  
                           __end_of_main 0493                               _Initialize 0513  
                 ?_Oscillator_Initialize 0070                                   ??_main 0065  
                 __end_of_Organize_Datas 030C                              ?_ChangeData 0070  
                                 _ANSELA 018C                                   _RC1REG 0199  
                                 i1l1140 0557                                   i1l1132 054F  
                                 i1l1330 00C2                                   i1l1342 0114  
                                 i1l1326 00AC                                   i1l1334 00C4  
                                 i1l1318 0057                                   i1l1422 0403  
                                 i1l1352 0174                                   i1l1416 03ED  
                                 i1l1418 03EF                                   i1l1356 01AD  
                                 i1l1372 04B3                                   u200_25 018F  
                                 i1l1378 04B5                                   u201_25 0194  
                                 u202_25 01A3                            _Write_Address 04FA  
                                 u205_25 04A4         __end_of_EUSART_ERROR_from_master 0559  
                                 u180_25 0080                                   u190_25 00F9  
                                 u174_25 0030                                   u191_25 0108  
                                 u183_25 0097                                   u175_25 003D  
                                 u192_25 011A                                   u184_25 00A5  
                                 u176_25 004B                                   u193_25 012D  
                                 u177_25 005B                                   u186_25 00B6  
                                 u195_25 0142                                   u187_25 00C7  
                                 u179_25 006C                                   u188_25 00D7  
                                 u197_25 0159                                   u189_25 00F3  
                                 u198_25 0168                                   u199_25 0177  
                                 _OSCFRQ 091F                           __CFG_PWRTE$OFF 0000  
                              ??_SetData 005E                                   ___bmul 0538  
           __size_of_slave_address_check 0024                   __size_of_ChangeAddress 0023  
                        ?_Organize_Datas 0059                   ?_Initialize_Parameters 0070  
                         ?_Write_Address 0059                  __end_of__initialization 001F  
                    ___bmul@multiplicand 0059                           __pcstackCOMMON 0070  
                           __pidataBANK0 056C                               _Write_data 040E  
                    __size_of_ChangeData 005B                              ?_Initialize 0070  
    __size_of_Reception_from_master_main 0020                  ??_Reception_from_master 007A  
                             __pbssBANK0 0020                            ??_Store_Datas 0051  
                          _ChangeAddress 04B7                  Store_Datas@EUSART_ERROR 0077  
               _EUSART_ERROR_from_master 054A                               __pmaintext 046F  
                                ?___bmul 0059                               __pintentry 0004  
                __size_of_Pin_Initialize 0028                      __CFG_RSTOSC$HFINT32 0000  
                      Store_Datas@Buffer 0079                                  _SP1BRGH 019C  
                                _SP1BRGL 019B                                  _OSCCON1 0919  
                        ??_Write_Address 005B                                  _PPSLOCK 0E0F  
                    __size_of_Initialize 0013                           ?_ChangeAddress 0070  
                                _Buffer0 0036                                  _RxData0 0045  
                                _SetData 0566                       _not_of_before_data 0033  
                    __end_of_Store_Datas 01AF                          __size_of___bmul 0012  
                ??_Oscillator_Initialize 0059                              ?_Write_data 0059  
                                _address 0031                          __CFG_STVREN$OFF 0000  
                                __ptext1 0566                                  __ptext2 036C  
                                __ptext3 040E                                  __ptext4 04B7  
                                __ptext5 04FA                                  __ptext6 04DA  
                                __ptext7 01AF                                  __ptext8 0513  
                                __ptext9 0526                        _INTERRUPT_HANDLER 0004  
                     ?_INTERRUPT_HANDLER 0070                 __size_of_UART_Initialize 0012  
                           ??_ChangeData 005B                                  clrloop0 0561  
                   end_of_initialization 001F                      _slave_address_check 0493  
                    ??_INTERRUPT_HANDLER 007D      Reception_from_master@error_complete 0058  
                   ?_slave_address_check 0070           slave_address_check@sample_data 0076  
              __end_of_INTERRUPT_HANDLER 000E                       __end_of_ChangeData 03C7  
                   _slave_different_flag 0066                         ??_Organize_Datas 005E  
                ??_Initialize_Parameters 005D                                _TRISAbits 008C  
                              _TRISCbits 008E                         __CFG_FEXTOSC$OFF 0000  
                        ??_ChangeAddress 005B                      __size_of_Write_data 0039  
                            _Store_Datas 0023                    ??_slave_address_check 0072  
                         _Pin_Initialize 0447                           __end_of___bmul 054A  
                           ??_Initialize 005E        Store_Datas@number_of_receive_data 0073  
                    start_initialization 0010               ??_EUSART_ERROR_from_master 0070  
                      ??_UART_Initialize 0059           __size_of_Reception_from_master 0047  
          __end_of_Reception_from_master 040E                       __end_of_Initialize 0526  
                       __CFG_LPBOREN$OFF 0000                     Write_Address@address 0059  
                 __end_of_Pin_Initialize 046F                                 ??___bmul 005A  
                            __pdataBANK0 0066               __size_of_INTERRUPT_HANDLER 000A  
                      ChangeAddress@None 005C                     Write_data@servo_data 0059  
                              ___latbits 0002                            __pcstackBANK0 0051  
                          __pcstackBANK1 00A0                             _Receive_flag 0067  
                               ?_SetData 0070                          ?_Pin_Initialize 0070  
           ??_Reception_from_master_main 0064                             ??_Write_data 005B  
     Reception_from_master@slave_address 0057                         __CFG_PPS1WAY$OFF 0000  
         __size_of_Oscillator_Initialize 0007            __end_of_Oscillator_Initialize 0560  
                  __end_of_Write_Address 0513                       __end_of_Write_data 0447  
                               _LATAbits 010C                                 _LATCbits 010E  
                              clear_ram0 0560                                 _PIE1bits 0091  
                               _PIR1bits 0011                   Initialize_Parameters@i 002D  
                         _address_status 0035           __size_of_Initialize_Parameters 0060  
          __end_of_Initialize_Parameters 036C                             ?_Store_Datas 0072  
                       __size_of_SetData 0006            slave_address_check@data_count 0075  
                        _UART_Initialize 0526                                 __ptext10 0447  
                               __ptext11 0559                                 __ptext12 030C  
                               __ptext13 0538                                 __ptext15 03C7  
                               __ptext16 0493                                 __ptext17 0023  
                               __ptext18 054A                    __end_of_ChangeAddress 04DA  
                          __size_of_main 0024              __end_of_slave_address_check 04B7  
                   Organize_Datas@Buffer 0059       __end_of_Reception_from_master_main 04FA  
             _Reception_from_master_main 04DA                     Organize_Datas@RxData 0063  
                             _RC1STAbits 019D                                 int$flags 007E  
                               main@argc 00A0                                 main@argv 00A2  
                             _INTCONbits 000B                                 intlevel1 0000  
                __size_of_Organize_Datas 015D                         ??_Pin_Initialize 0059  
                      __CFG_CLKOUTEN$OFF 0000                              _PPSLOCKbits 0E0F  
                  _Reception_from_master 03C7        __size_of_EUSART_ERROR_from_master 000F  
              ?_EUSART_ERROR_from_master 0070                  __end_of_UART_Initialize 0538  
          slave_address_check@slave_flag 0071                               _TX1STAbits 019E  
                   __size_of_Store_Datas 018C  
