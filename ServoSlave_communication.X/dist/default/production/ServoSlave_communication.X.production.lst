

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jun 05 15:31:36 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F18325
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.00
    32                           ; Generated 27/05/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F18325 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000E                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008E                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0097                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  018C                     	;# 
   124  018E                     	;# 
   125  0197                     	;# 
   126  0199                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  019A                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020E                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0217                     	;# 
   169  0219                     	;# 
   170  021A                     	;# 
   171  021B                     	;# 
   172  021C                     	;# 
   173  021D                     	;# 
   174  021D                     	;# 
   175  021E                     	;# 
   176  021F                     	;# 
   177  028C                     	;# 
   178  028E                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0297                     	;# 
   188  0298                     	;# 
   189  029F                     	;# 
   190  030C                     	;# 
   191  030E                     	;# 
   192  0311                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0314                     	;# 
   197  0315                     	;# 
   198  0315                     	;# 
   199  0316                     	;# 
   200  0317                     	;# 
   201  0318                     	;# 
   202  038C                     	;# 
   203  038E                     	;# 
   204  0391                     	;# 
   205  0392                     	;# 
   206  0393                     	;# 
   207  0397                     	;# 
   208  0398                     	;# 
   209  0399                     	;# 
   210  039A                     	;# 
   211  039C                     	;# 
   212  039D                     	;# 
   213  039E                     	;# 
   214  039F                     	;# 
   215  0411                     	;# 
   216  0411                     	;# 
   217  0412                     	;# 
   218  0413                     	;# 
   219  0414                     	;# 
   220  0415                     	;# 
   221  0416                     	;# 
   222  0417                     	;# 
   223  0418                     	;# 
   224  0418                     	;# 
   225  0419                     	;# 
   226  041A                     	;# 
   227  041B                     	;# 
   228  041C                     	;# 
   229  041D                     	;# 
   230  041E                     	;# 
   231  041F                     	;# 
   232  0498                     	;# 
   233  0498                     	;# 
   234  0499                     	;# 
   235  049A                     	;# 
   236  049B                     	;# 
   237  049B                     	;# 
   238  049C                     	;# 
   239  049D                     	;# 
   240  049E                     	;# 
   241  049F                     	;# 
   242  0617                     	;# 
   243  0618                     	;# 
   244  0619                     	;# 
   245  0619                     	;# 
   246  061A                     	;# 
   247  061B                     	;# 
   248  061C                     	;# 
   249  061C                     	;# 
   250  061F                     	;# 
   251  0691                     	;# 
   252  0692                     	;# 
   253  0693                     	;# 
   254  0694                     	;# 
   255  0695                     	;# 
   256  0696                     	;# 
   257  0697                     	;# 
   258  0698                     	;# 
   259  0699                     	;# 
   260  0711                     	;# 
   261  0712                     	;# 
   262  0713                     	;# 
   263  0714                     	;# 
   264  0715                     	;# 
   265  0716                     	;# 
   266  0717                     	;# 
   267  0718                     	;# 
   268  0719                     	;# 
   269  0891                     	;# 
   270  0891                     	;# 
   271  0891                     	;# 
   272  0891                     	;# 
   273  0891                     	;# 
   274  0891                     	;# 
   275  0892                     	;# 
   276  0892                     	;# 
   277  0892                     	;# 
   278  0893                     	;# 
   279  0893                     	;# 
   280  0893                     	;# 
   281  0893                     	;# 
   282  0893                     	;# 
   283  0893                     	;# 
   284  0894                     	;# 
   285  0894                     	;# 
   286  0894                     	;# 
   287  0895                     	;# 
   288  0895                     	;# 
   289  0895                     	;# 
   290  0896                     	;# 
   291  0896                     	;# 
   292  0896                     	;# 
   293  089B                     	;# 
   294  0911                     	;# 
   295  0912                     	;# 
   296  0913                     	;# 
   297  0914                     	;# 
   298  0915                     	;# 
   299  0916                     	;# 
   300  0918                     	;# 
   301  0919                     	;# 
   302  091A                     	;# 
   303  091B                     	;# 
   304  091C                     	;# 
   305  091D                     	;# 
   306  091E                     	;# 
   307  091F                     	;# 
   308  0E0F                     	;# 
   309  0E10                     	;# 
   310  0E11                     	;# 
   311  0E12                     	;# 
   312  0E13                     	;# 
   313  0E14                     	;# 
   314  0E15                     	;# 
   315  0E16                     	;# 
   316  0E17                     	;# 
   317  0E18                     	;# 
   318  0E19                     	;# 
   319  0E1A                     	;# 
   320  0E1B                     	;# 
   321  0E1C                     	;# 
   322  0E1D                     	;# 
   323  0E1E                     	;# 
   324  0E1F                     	;# 
   325  0E20                     	;# 
   326  0E21                     	;# 
   327  0E22                     	;# 
   328  0E24                     	;# 
   329  0E25                     	;# 
   330  0E28                     	;# 
   331  0E29                     	;# 
   332  0E2A                     	;# 
   333  0E2B                     	;# 
   334  0E2C                     	;# 
   335  0E2D                     	;# 
   336  0E2E                     	;# 
   337  0E2F                     	;# 
   338  0E90                     	;# 
   339  0E91                     	;# 
   340  0E92                     	;# 
   341  0E94                     	;# 
   342  0E95                     	;# 
   343  0EA0                     	;# 
   344  0EA1                     	;# 
   345  0EA2                     	;# 
   346  0EA3                     	;# 
   347  0EA4                     	;# 
   348  0EA5                     	;# 
   349  0F0F                     	;# 
   350  0F10                     	;# 
   351  0F11                     	;# 
   352  0F12                     	;# 
   353  0F13                     	;# 
   354  0F14                     	;# 
   355  0F15                     	;# 
   356  0F16                     	;# 
   357  0F17                     	;# 
   358  0F18                     	;# 
   359  0F19                     	;# 
   360  0F1A                     	;# 
   361  0F1B                     	;# 
   362  0F1C                     	;# 
   363  0F1D                     	;# 
   364  0F1E                     	;# 
   365  0F1F                     	;# 
   366  0F20                     	;# 
   367  0F21                     	;# 
   368  0F22                     	;# 
   369  0F23                     	;# 
   370  0F24                     	;# 
   371  0F25                     	;# 
   372  0F26                     	;# 
   373  0F27                     	;# 
   374  0F28                     	;# 
   375  0F29                     	;# 
   376  0F2A                     	;# 
   377  0F2B                     	;# 
   378  0F2C                     	;# 
   379  0F2D                     	;# 
   380  0F2E                     	;# 
   381  0F2F                     	;# 
   382  0F30                     	;# 
   383  0F31                     	;# 
   384  0F32                     	;# 
   385  0F33                     	;# 
   386  0F34                     	;# 
   387  0F35                     	;# 
   388  0F36                     	;# 
   389  0F37                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000E                     	;# 
   415  0010                     	;# 
   416  0011                     	;# 
   417  0012                     	;# 
   418  0013                     	;# 
   419  0014                     	;# 
   420  0015                     	;# 
   421  0015                     	;# 
   422  0016                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  0019                     	;# 
   428  001A                     	;# 
   429  001B                     	;# 
   430  001C                     	;# 
   431  001D                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  008C                     	;# 
   435  008E                     	;# 
   436  0090                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0097                     	;# 
   442  009B                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  010C                     	;# 
   449  010E                     	;# 
   450  0111                     	;# 
   451  0112                     	;# 
   452  0113                     	;# 
   453  0114                     	;# 
   454  0115                     	;# 
   455  0116                     	;# 
   456  0117                     	;# 
   457  0118                     	;# 
   458  0119                     	;# 
   459  018C                     	;# 
   460  018E                     	;# 
   461  0197                     	;# 
   462  0199                     	;# 
   463  0199                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019A                     	;# 
   467  019A                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019C                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019D                     	;# 
   478  019D                     	;# 
   479  019E                     	;# 
   480  019E                     	;# 
   481  019E                     	;# 
   482  019F                     	;# 
   483  019F                     	;# 
   484  019F                     	;# 
   485  019F                     	;# 
   486  019F                     	;# 
   487  020C                     	;# 
   488  020E                     	;# 
   489  0211                     	;# 
   490  0211                     	;# 
   491  0212                     	;# 
   492  0212                     	;# 
   493  0213                     	;# 
   494  0213                     	;# 
   495  0214                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0219                     	;# 
   506  021A                     	;# 
   507  021B                     	;# 
   508  021C                     	;# 
   509  021D                     	;# 
   510  021D                     	;# 
   511  021E                     	;# 
   512  021F                     	;# 
   513  028C                     	;# 
   514  028E                     	;# 
   515  0291                     	;# 
   516  0291                     	;# 
   517  0292                     	;# 
   518  0293                     	;# 
   519  0294                     	;# 
   520  0295                     	;# 
   521  0295                     	;# 
   522  0296                     	;# 
   523  0297                     	;# 
   524  0298                     	;# 
   525  029F                     	;# 
   526  030C                     	;# 
   527  030E                     	;# 
   528  0311                     	;# 
   529  0311                     	;# 
   530  0312                     	;# 
   531  0313                     	;# 
   532  0314                     	;# 
   533  0315                     	;# 
   534  0315                     	;# 
   535  0316                     	;# 
   536  0317                     	;# 
   537  0318                     	;# 
   538  038C                     	;# 
   539  038E                     	;# 
   540  0391                     	;# 
   541  0392                     	;# 
   542  0393                     	;# 
   543  0397                     	;# 
   544  0398                     	;# 
   545  0399                     	;# 
   546  039A                     	;# 
   547  039C                     	;# 
   548  039D                     	;# 
   549  039E                     	;# 
   550  039F                     	;# 
   551  0411                     	;# 
   552  0411                     	;# 
   553  0412                     	;# 
   554  0413                     	;# 
   555  0414                     	;# 
   556  0415                     	;# 
   557  0416                     	;# 
   558  0417                     	;# 
   559  0418                     	;# 
   560  0418                     	;# 
   561  0419                     	;# 
   562  041A                     	;# 
   563  041B                     	;# 
   564  041C                     	;# 
   565  041D                     	;# 
   566  041E                     	;# 
   567  041F                     	;# 
   568  0498                     	;# 
   569  0498                     	;# 
   570  0499                     	;# 
   571  049A                     	;# 
   572  049B                     	;# 
   573  049B                     	;# 
   574  049C                     	;# 
   575  049D                     	;# 
   576  049E                     	;# 
   577  049F                     	;# 
   578  0617                     	;# 
   579  0618                     	;# 
   580  0619                     	;# 
   581  0619                     	;# 
   582  061A                     	;# 
   583  061B                     	;# 
   584  061C                     	;# 
   585  061C                     	;# 
   586  061F                     	;# 
   587  0691                     	;# 
   588  0692                     	;# 
   589  0693                     	;# 
   590  0694                     	;# 
   591  0695                     	;# 
   592  0696                     	;# 
   593  0697                     	;# 
   594  0698                     	;# 
   595  0699                     	;# 
   596  0711                     	;# 
   597  0712                     	;# 
   598  0713                     	;# 
   599  0714                     	;# 
   600  0715                     	;# 
   601  0716                     	;# 
   602  0717                     	;# 
   603  0718                     	;# 
   604  0719                     	;# 
   605  0891                     	;# 
   606  0891                     	;# 
   607  0891                     	;# 
   608  0891                     	;# 
   609  0891                     	;# 
   610  0891                     	;# 
   611  0892                     	;# 
   612  0892                     	;# 
   613  0892                     	;# 
   614  0893                     	;# 
   615  0893                     	;# 
   616  0893                     	;# 
   617  0893                     	;# 
   618  0893                     	;# 
   619  0893                     	;# 
   620  0894                     	;# 
   621  0894                     	;# 
   622  0894                     	;# 
   623  0895                     	;# 
   624  0895                     	;# 
   625  0895                     	;# 
   626  0896                     	;# 
   627  0896                     	;# 
   628  0896                     	;# 
   629  089B                     	;# 
   630  0911                     	;# 
   631  0912                     	;# 
   632  0913                     	;# 
   633  0914                     	;# 
   634  0915                     	;# 
   635  0916                     	;# 
   636  0918                     	;# 
   637  0919                     	;# 
   638  091A                     	;# 
   639  091B                     	;# 
   640  091C                     	;# 
   641  091D                     	;# 
   642  091E                     	;# 
   643  091F                     	;# 
   644  0E0F                     	;# 
   645  0E10                     	;# 
   646  0E11                     	;# 
   647  0E12                     	;# 
   648  0E13                     	;# 
   649  0E14                     	;# 
   650  0E15                     	;# 
   651  0E16                     	;# 
   652  0E17                     	;# 
   653  0E18                     	;# 
   654  0E19                     	;# 
   655  0E1A                     	;# 
   656  0E1B                     	;# 
   657  0E1C                     	;# 
   658  0E1D                     	;# 
   659  0E1E                     	;# 
   660  0E1F                     	;# 
   661  0E20                     	;# 
   662  0E21                     	;# 
   663  0E22                     	;# 
   664  0E24                     	;# 
   665  0E25                     	;# 
   666  0E28                     	;# 
   667  0E29                     	;# 
   668  0E2A                     	;# 
   669  0E2B                     	;# 
   670  0E2C                     	;# 
   671  0E2D                     	;# 
   672  0E2E                     	;# 
   673  0E2F                     	;# 
   674  0E90                     	;# 
   675  0E91                     	;# 
   676  0E92                     	;# 
   677  0E94                     	;# 
   678  0E95                     	;# 
   679  0EA0                     	;# 
   680  0EA1                     	;# 
   681  0EA2                     	;# 
   682  0EA3                     	;# 
   683  0EA4                     	;# 
   684  0EA5                     	;# 
   685  0F0F                     	;# 
   686  0F10                     	;# 
   687  0F11                     	;# 
   688  0F12                     	;# 
   689  0F13                     	;# 
   690  0F14                     	;# 
   691  0F15                     	;# 
   692  0F16                     	;# 
   693  0F17                     	;# 
   694  0F18                     	;# 
   695  0F19                     	;# 
   696  0F1A                     	;# 
   697  0F1B                     	;# 
   698  0F1C                     	;# 
   699  0F1D                     	;# 
   700  0F1E                     	;# 
   701  0F1F                     	;# 
   702  0F20                     	;# 
   703  0F21                     	;# 
   704  0F22                     	;# 
   705  0F23                     	;# 
   706  0F24                     	;# 
   707  0F25                     	;# 
   708  0F26                     	;# 
   709  0F27                     	;# 
   710  0F28                     	;# 
   711  0F29                     	;# 
   712  0F2A                     	;# 
   713  0F2B                     	;# 
   714  0F2C                     	;# 
   715  0F2D                     	;# 
   716  0F2E                     	;# 
   717  0F2F                     	;# 
   718  0F30                     	;# 
   719  0F31                     	;# 
   720  0F32                     	;# 
   721  0F33                     	;# 
   722  0F34                     	;# 
   723  0F35                     	;# 
   724  0F36                     	;# 
   725  0F37                     	;# 
   726  0FE4                     	;# 
   727  0FE5                     	;# 
   728  0FE6                     	;# 
   729  0FE7                     	;# 
   730  0FE8                     	;# 
   731  0FE9                     	;# 
   732  0FEA                     	;# 
   733  0FEB                     	;# 
   734  0FED                     	;# 
   735  0FEE                     	;# 
   736  0FEF                     	;# 
   737  0000                     	;# 
   738  0001                     	;# 
   739  0002                     	;# 
   740  0003                     	;# 
   741  0004                     	;# 
   742  0005                     	;# 
   743  0006                     	;# 
   744  0007                     	;# 
   745  0008                     	;# 
   746  0009                     	;# 
   747  000A                     	;# 
   748  000B                     	;# 
   749  000C                     	;# 
   750  000E                     	;# 
   751  0010                     	;# 
   752  0011                     	;# 
   753  0012                     	;# 
   754  0013                     	;# 
   755  0014                     	;# 
   756  0015                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0016                     	;# 
   760  0017                     	;# 
   761  0018                     	;# 
   762  0019                     	;# 
   763  0019                     	;# 
   764  001A                     	;# 
   765  001B                     	;# 
   766  001C                     	;# 
   767  001D                     	;# 
   768  001E                     	;# 
   769  001F                     	;# 
   770  008C                     	;# 
   771  008E                     	;# 
   772  0090                     	;# 
   773  0091                     	;# 
   774  0092                     	;# 
   775  0093                     	;# 
   776  0094                     	;# 
   777  0097                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  010C                     	;# 
   785  010E                     	;# 
   786  0111                     	;# 
   787  0112                     	;# 
   788  0113                     	;# 
   789  0114                     	;# 
   790  0115                     	;# 
   791  0116                     	;# 
   792  0117                     	;# 
   793  0118                     	;# 
   794  0119                     	;# 
   795  018C                     	;# 
   796  018E                     	;# 
   797  0197                     	;# 
   798  0199                     	;# 
   799  0199                     	;# 
   800  0199                     	;# 
   801  019A                     	;# 
   802  019A                     	;# 
   803  019A                     	;# 
   804  019B                     	;# 
   805  019B                     	;# 
   806  019B                     	;# 
   807  019B                     	;# 
   808  019B                     	;# 
   809  019C                     	;# 
   810  019C                     	;# 
   811  019C                     	;# 
   812  019D                     	;# 
   813  019D                     	;# 
   814  019D                     	;# 
   815  019E                     	;# 
   816  019E                     	;# 
   817  019E                     	;# 
   818  019F                     	;# 
   819  019F                     	;# 
   820  019F                     	;# 
   821  019F                     	;# 
   822  019F                     	;# 
   823  020C                     	;# 
   824  020E                     	;# 
   825  0211                     	;# 
   826  0211                     	;# 
   827  0212                     	;# 
   828  0212                     	;# 
   829  0213                     	;# 
   830  0213                     	;# 
   831  0214                     	;# 
   832  0214                     	;# 
   833  0215                     	;# 
   834  0215                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0216                     	;# 
   838  0216                     	;# 
   839  0217                     	;# 
   840  0217                     	;# 
   841  0219                     	;# 
   842  021A                     	;# 
   843  021B                     	;# 
   844  021C                     	;# 
   845  021D                     	;# 
   846  021D                     	;# 
   847  021E                     	;# 
   848  021F                     	;# 
   849  028C                     	;# 
   850  028E                     	;# 
   851  0291                     	;# 
   852  0291                     	;# 
   853  0292                     	;# 
   854  0293                     	;# 
   855  0294                     	;# 
   856  0295                     	;# 
   857  0295                     	;# 
   858  0296                     	;# 
   859  0297                     	;# 
   860  0298                     	;# 
   861  029F                     	;# 
   862  030C                     	;# 
   863  030E                     	;# 
   864  0311                     	;# 
   865  0311                     	;# 
   866  0312                     	;# 
   867  0313                     	;# 
   868  0314                     	;# 
   869  0315                     	;# 
   870  0315                     	;# 
   871  0316                     	;# 
   872  0317                     	;# 
   873  0318                     	;# 
   874  038C                     	;# 
   875  038E                     	;# 
   876  0391                     	;# 
   877  0392                     	;# 
   878  0393                     	;# 
   879  0397                     	;# 
   880  0398                     	;# 
   881  0399                     	;# 
   882  039A                     	;# 
   883  039C                     	;# 
   884  039D                     	;# 
   885  039E                     	;# 
   886  039F                     	;# 
   887  0411                     	;# 
   888  0411                     	;# 
   889  0412                     	;# 
   890  0413                     	;# 
   891  0414                     	;# 
   892  0415                     	;# 
   893  0416                     	;# 
   894  0417                     	;# 
   895  0418                     	;# 
   896  0418                     	;# 
   897  0419                     	;# 
   898  041A                     	;# 
   899  041B                     	;# 
   900  041C                     	;# 
   901  041D                     	;# 
   902  041E                     	;# 
   903  041F                     	;# 
   904  0498                     	;# 
   905  0498                     	;# 
   906  0499                     	;# 
   907  049A                     	;# 
   908  049B                     	;# 
   909  049B                     	;# 
   910  049C                     	;# 
   911  049D                     	;# 
   912  049E                     	;# 
   913  049F                     	;# 
   914  0617                     	;# 
   915  0618                     	;# 
   916  0619                     	;# 
   917  0619                     	;# 
   918  061A                     	;# 
   919  061B                     	;# 
   920  061C                     	;# 
   921  061C                     	;# 
   922  061F                     	;# 
   923  0691                     	;# 
   924  0692                     	;# 
   925  0693                     	;# 
   926  0694                     	;# 
   927  0695                     	;# 
   928  0696                     	;# 
   929  0697                     	;# 
   930  0698                     	;# 
   931  0699                     	;# 
   932  0711                     	;# 
   933  0712                     	;# 
   934  0713                     	;# 
   935  0714                     	;# 
   936  0715                     	;# 
   937  0716                     	;# 
   938  0717                     	;# 
   939  0718                     	;# 
   940  0719                     	;# 
   941  0891                     	;# 
   942  0891                     	;# 
   943  0891                     	;# 
   944  0891                     	;# 
   945  0891                     	;# 
   946  0891                     	;# 
   947  0892                     	;# 
   948  0892                     	;# 
   949  0892                     	;# 
   950  0893                     	;# 
   951  0893                     	;# 
   952  0893                     	;# 
   953  0893                     	;# 
   954  0893                     	;# 
   955  0893                     	;# 
   956  0894                     	;# 
   957  0894                     	;# 
   958  0894                     	;# 
   959  0895                     	;# 
   960  0895                     	;# 
   961  0895                     	;# 
   962  0896                     	;# 
   963  0896                     	;# 
   964  0896                     	;# 
   965  089B                     	;# 
   966  0911                     	;# 
   967  0912                     	;# 
   968  0913                     	;# 
   969  0914                     	;# 
   970  0915                     	;# 
   971  0916                     	;# 
   972  0918                     	;# 
   973  0919                     	;# 
   974  091A                     	;# 
   975  091B                     	;# 
   976  091C                     	;# 
   977  091D                     	;# 
   978  091E                     	;# 
   979  091F                     	;# 
   980  0E0F                     	;# 
   981  0E10                     	;# 
   982  0E11                     	;# 
   983  0E12                     	;# 
   984  0E13                     	;# 
   985  0E14                     	;# 
   986  0E15                     	;# 
   987  0E16                     	;# 
   988  0E17                     	;# 
   989  0E18                     	;# 
   990  0E19                     	;# 
   991  0E1A                     	;# 
   992  0E1B                     	;# 
   993  0E1C                     	;# 
   994  0E1D                     	;# 
   995  0E1E                     	;# 
   996  0E1F                     	;# 
   997  0E20                     	;# 
   998  0E21                     	;# 
   999  0E22                     	;# 
  1000  0E24                     	;# 
  1001  0E25                     	;# 
  1002  0E28                     	;# 
  1003  0E29                     	;# 
  1004  0E2A                     	;# 
  1005  0E2B                     	;# 
  1006  0E2C                     	;# 
  1007  0E2D                     	;# 
  1008  0E2E                     	;# 
  1009  0E2F                     	;# 
  1010  0E90                     	;# 
  1011  0E91                     	;# 
  1012  0E92                     	;# 
  1013  0E94                     	;# 
  1014  0E95                     	;# 
  1015  0EA0                     	;# 
  1016  0EA1                     	;# 
  1017  0EA2                     	;# 
  1018  0EA3                     	;# 
  1019  0EA4                     	;# 
  1020  0EA5                     	;# 
  1021  0F0F                     	;# 
  1022  0F10                     	;# 
  1023  0F11                     	;# 
  1024  0F12                     	;# 
  1025  0F13                     	;# 
  1026  0F14                     	;# 
  1027  0F15                     	;# 
  1028  0F16                     	;# 
  1029  0F17                     	;# 
  1030  0F18                     	;# 
  1031  0F19                     	;# 
  1032  0F1A                     	;# 
  1033  0F1B                     	;# 
  1034  0F1C                     	;# 
  1035  0F1D                     	;# 
  1036  0F1E                     	;# 
  1037  0F1F                     	;# 
  1038  0F20                     	;# 
  1039  0F21                     	;# 
  1040  0F22                     	;# 
  1041  0F23                     	;# 
  1042  0F24                     	;# 
  1043  0F25                     	;# 
  1044  0F26                     	;# 
  1045  0F27                     	;# 
  1046  0F28                     	;# 
  1047  0F29                     	;# 
  1048  0F2A                     	;# 
  1049  0F2B                     	;# 
  1050  0F2C                     	;# 
  1051  0F2D                     	;# 
  1052  0F2E                     	;# 
  1053  0F2F                     	;# 
  1054  0F30                     	;# 
  1055  0F31                     	;# 
  1056  0F32                     	;# 
  1057  0F33                     	;# 
  1058  0F34                     	;# 
  1059  0F35                     	;# 
  1060  0F36                     	;# 
  1061  0F37                     	;# 
  1062  0FE4                     	;# 
  1063  0FE5                     	;# 
  1064  0FE6                     	;# 
  1065  0FE7                     	;# 
  1066  0FE8                     	;# 
  1067  0FE9                     	;# 
  1068  0FEA                     	;# 
  1069  0FEB                     	;# 
  1070  0FED                     	;# 
  1071  0FEE                     	;# 
  1072  0FEF                     	;# 
  1073                           
  1074                           	psect	idataBANK0
  1075  0527                     __pidataBANK0:	
  1076                           
  1077                           ;initializer for _address
  1078  0527  3401               	retlw	1
  1079  0528  3400               	retlw	0
  1080                           
  1081                           ;initializer for _slave_different_flag
  1082  0529  3402               	retlw	2
  1083                           
  1084                           ;initializer for _Receive_flag
  1085  052A  3401               	retlw	1
  1086  000B                     _INTCONbits	set	11
  1087  0011                     _PIR1bits	set	17
  1088  0091                     _PIE1bits	set	145
  1089  008E                     _TRISC	set	142
  1090  008C                     _TRISAbits	set	140
  1091  010C                     _LATAbits	set	268
  1092  010E                     _LATCbits	set	270
  1093  0199                     _RC1REG	set	409
  1094  019D                     _RC1STAbits	set	413
  1095  019F                     _BAUD1CONbits	set	415
  1096  019E                     _TX1STAbits	set	414
  1097  019B                     _SP1BRGL	set	411
  1098  019C                     _SP1BRGH	set	412
  1099  018C                     _ANSELA	set	396
  1100  091F                     _OSCFRQ	set	2335
  1101  0919                     _OSCCON1	set	2329
  1102  48E0                     _PLLR	set	18656
  1103  0E24                     _RXPPS	set	3620
  1104                           
  1105                           ; #config settings
  1106  0000                     
  1107                           	psect	cinit
  1108  0010                     start_initialization:	
  1109  0010                     __initialization:	
  1110                           
  1111                           ; Initialize objects allocated to BANK0
  1112  0010  3185  2527  3180   	fcall	__pidataBANK0	;fetch initializer
  1113  0013  00E1               	movwf	__pdataBANK0& (0+127)
  1114  0014  3185  2528  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1115  0017  00E2               	movwf	(__pdataBANK0+1)& (0+127)
  1116  0018  3185  2529  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1117  001B  00E3               	movwf	(__pdataBANK0+2)& (0+127)
  1118  001C  3185  252A  3180   	fcall	__pidataBANK0+3	;fetch initializer
  1119  001F  00E4               	movwf	(__pdataBANK0+3)& (0+127)
  1120                           
  1121                           ; Clear objects allocated to COMMON
  1122  0020  01FD               	clrf	__pbssCOMMON& (0+127)
  1123                           
  1124                           ; Clear objects allocated to BANK0
  1125  0021  3020               	movlw	low __pbssBANK0
  1126  0022  0084               	movwf	4
  1127  0023  3000               	movlw	high __pbssBANK0
  1128  0024  0085               	movwf	5
  1129  0025  3028               	movlw	40
  1130  0026  3185  251B         	fcall	clear_ram0
  1131  0028                     end_of_initialization:	
  1132                           ;End of C runtime variable initialization code
  1133                           
  1134  0028                     __end_of__initialization:	
  1135  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1136  0029  0020               	movlb	0
  1137  002A  3184  2C79         	ljmp	_main	;jump to C main() function
  1138                           
  1139                           	psect	bssCOMMON
  1140  007D                     __pbssCOMMON:	
  1141  007D                     _not_of_before_data:	
  1142  007D                     	ds	1
  1143                           
  1144                           	psect	bssBANK0
  1145  0020                     __pbssBANK0:	
  1146  0020                     _SeP:	
  1147  0020                     	ds	5
  1148  0025                     _StP:	
  1149  0025                     	ds	4
  1150  0029                     _OP:	
  1151  0029                     	ds	4
  1152  002D                     Initialize_Parameters@i:	
  1153  002D                     	ds	2
  1154  002F                     Reception_from_master@Receive_data_count:	
  1155  002F                     	ds	1
  1156  0030                     _address_status:	
  1157  0030                     	ds	1
  1158  0031                     _Buffer0:	
  1159  0031                     	ds	13
  1160  003E                     _RxData0:	
  1161  003E                     	ds	10
  1162                           
  1163                           	psect	dataBANK0
  1164  0061                     __pdataBANK0:	
  1165  0061                     _address:	
  1166  0061                     	ds	2
  1167  0063                     _slave_different_flag:	
  1168  0063                     	ds	1
  1169  0064                     _Receive_flag:	
  1170  0064                     	ds	1
  1171                           
  1172                           	psect	clrtext
  1173  051B                     clear_ram0:	
  1174                           ;	Called with FSR0 containing the base address, and
  1175                           ;	WREG with the size to clear
  1176                           
  1177  051B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1178  051C                     clrloop0:	
  1179  051C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1180  051D  3101               	addfsr 0,1
  1181  051E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1182  051F  2D1C               	goto	clrloop0	;have we reached the end yet?
  1183  0520  3400               	retlw	0	;all done for this memory range, return
  1184                           
  1185                           	psect	cstackCOMMON
  1186  0070                     __pcstackCOMMON:	
  1187  0070                     ?_Initialize:	
  1188  0070                     ?_Reception_from_master_main:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191  0070                     ?_SetData:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194  0070                     ?_ChangeAddress:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197  0070                     ?_ChangeData:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200  0070                     ?_Write_data:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203  0070                     ?_Reception_from_master:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206  0070                     ?_Oscillator_Initialize:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209  0070                     ?_Pin_Initialize:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212  0070                     ?_UART_Initialize:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215  0070                     ?_slave_address_check:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218  0070                     ?_INTERRUPT_HANDLER:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221  0070                     ?_EUSART_ERROR_from_master:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224  0070                     ??_EUSART_ERROR_from_master:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227  0070                     slave_address_check@slave_address:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230                           
  1231                           ; 1 bytes @ 0x0
  1232  0070                     	ds	1
  1233  0071                     EUSART_ERROR_from_master@waste_data:	
  1234  0071                     slave_address_check@slave_flag:	
  1235                           ; 1 bytes @ 0x1
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x1
  1239  0071                     	ds	1
  1240  0072                     ?_Store_Datas:	
  1241  0072                     ??_slave_address_check:	
  1242                           ; 1 bytes @ 0x2
  1243                           
  1244  0072                     Store_Datas@received_data:	
  1245                           ; 1 bytes @ 0x2
  1246                           
  1247                           
  1248                           ; 1 bytes @ 0x2
  1249  0072                     	ds	1
  1250  0073                     Store_Datas@number_of_receive_data:	
  1251                           
  1252                           ; 2 bytes @ 0x3
  1253  0073                     	ds	2
  1254  0075                     slave_address_check@data_count:	
  1255  0075                     Store_Datas@bus_number:	
  1256                           ; 1 bytes @ 0x5
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x5
  1260  0075                     	ds	1
  1261  0076                     slave_address_check@sample_data:	
  1262                           
  1263                           ; 1 bytes @ 0x6
  1264  0076                     	ds	1
  1265  0077                     Store_Datas@EUSART_ERROR:	
  1266                           
  1267                           ; 2 bytes @ 0x7
  1268  0077                     	ds	2
  1269  0079                     Store_Datas@Buffer:	
  1270                           
  1271                           ; 1 bytes @ 0x9
  1272  0079                     	ds	1
  1273  007A                     ??_Reception_from_master:	
  1274                           
  1275                           ; 1 bytes @ 0xA
  1276  007A                     	ds	3
  1277  007D                     ??_INTERRUPT_HANDLER:	
  1278                           
  1279                           	psect	cstackBANK0
  1280  0048                     __pcstackBANK0:	
  1281                           ; 1 bytes @ 0xD
  1282                           
  1283  0048                     ??_Store_Datas:	
  1284                           
  1285                           ; 1 bytes @ 0x0
  1286  0048                     	ds	6
  1287  004E                     Reception_from_master@slave_address:	
  1288                           
  1289                           ; 1 bytes @ 0x6
  1290  004E                     	ds	1
  1291  004F                     Reception_from_master@error_complete:	
  1292                           
  1293                           ; 1 bytes @ 0x7
  1294  004F                     	ds	1
  1295  0050                     ??_Initialize:	
  1296  0050                     ?_Organize_Datas:	
  1297                           ; 1 bytes @ 0x8
  1298                           
  1299  0050                     ?_Write_Address:	
  1300                           ; 1 bytes @ 0x8
  1301                           
  1302  0050                     ??_Write_data:	
  1303                           ; 1 bytes @ 0x8
  1304                           
  1305  0050                     ??_Oscillator_Initialize:	
  1306                           ; 1 bytes @ 0x8
  1307                           
  1308  0050                     ??_Pin_Initialize:	
  1309                           ; 1 bytes @ 0x8
  1310                           
  1311  0050                     ??_UART_Initialize:	
  1312                           ; 1 bytes @ 0x8
  1313                           
  1314  0050                     Organize_Datas@Buffer:	
  1315                           ; 1 bytes @ 0x8
  1316                           
  1317  0050                     Write_Address@address:	
  1318                           ; 1 bytes @ 0x8
  1319                           
  1320                           
  1321                           ; 2 bytes @ 0x8
  1322  0050                     	ds	1
  1323  0051                     Organize_Datas@number_of_data:	
  1324                           
  1325                           ; 2 bytes @ 0x9
  1326  0051                     	ds	1
  1327  0052                     ??_Write_Address:	
  1328  0052                     Write_data@servo_data:	
  1329                           ; 1 bytes @ 0xA
  1330                           
  1331                           
  1332                           ; 1 bytes @ 0xA
  1333  0052                     	ds	1
  1334  0053                     ??_ChangeData:	
  1335  0053                     Organize_Datas@bus_number:	
  1336                           ; 1 bytes @ 0xB
  1337                           
  1338                           
  1339                           ; 2 bytes @ 0xB
  1340  0053                     	ds	2
  1341  0055                     ??_Organize_Datas:	
  1342  0055                     ??_ChangeAddress:	
  1343                           ; 1 bytes @ 0xD
  1344                           
  1345                           
  1346                           ; 1 bytes @ 0xD
  1347  0055                     	ds	1
  1348  0056                     ??_SetData:	
  1349                           
  1350                           ; 1 bytes @ 0xE
  1351  0056                     	ds	4
  1352  005A                     Organize_Datas@RxData:	
  1353                           
  1354                           ; 1 bytes @ 0x12
  1355  005A                     	ds	1
  1356  005B                     ??_Reception_from_master_main:	
  1357                           
  1358                           ; 1 bytes @ 0x13
  1359  005B                     	ds	1
  1360  005C                     ?_main:	
  1361  005C                     main@argc:	
  1362                           ; 2 bytes @ 0x14
  1363                           
  1364                           
  1365                           ; 2 bytes @ 0x14
  1366  005C                     	ds	2
  1367  005E                     main@argv:	
  1368                           
  1369                           ; 2 bytes @ 0x16
  1370  005E                     	ds	2
  1371  0060                     ??_main:	
  1372                           
  1373                           ; 1 bytes @ 0x18
  1374  0060                     	ds	1
  1375                           
  1376                           	psect	maintext
  1377  0479                     __pmaintext:	
  1378 ;;
  1379 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1380 ;;
  1381 ;; *************** function _main *****************
  1382 ;; Defined at:
  1383 ;;		line 114 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  argc            2   20[BANK0 ] int 
  1386 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2   20[BANK0 ] int 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : B1F/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1398 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1401 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1402 ;;Total ram usage:        5 bytes
  1403 ;; Hardware stack levels required when called:    7
  1404 ;; This function calls:
  1405 ;;		_Initialize
  1406 ;;		_Organize_Datas
  1407 ;;		_Reception_from_master_main
  1408 ;;		_SetData
  1409 ;; This function is called by:
  1410 ;;		Startup code after reset
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _main
  1416  0479                     _main:	
  1417                           
  1418                           ;main.c: 115: Initialize();
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1422  0479  3185  2501  3184   	fcall	_Initialize
  1423  047C                     l1242:	
  1424                           ;main.c: 118: while (Receive_flag != 0);
  1425                           
  1426  047C  0020               	movlb	0	; select bank0
  1427  047D  0864               	movf	_Receive_flag,w
  1428  047E  1D03               	btfss	3,2
  1429  047F  2C7C               	goto	l1242
  1430                           
  1431                           ;main.c: 119: Organize_Datas(RxData0, Buffer0, 5, 0);
  1432  0480  3031               	movlw	(low (_Buffer0| 0))& (0+255)
  1433  0481  00E0               	movwf	??_main
  1434  0482  0860               	movf	??_main,w
  1435  0483  00D0               	movwf	Organize_Datas@Buffer
  1436  0484  3005               	movlw	5
  1437  0485  00D1               	movwf	Organize_Datas@number_of_data
  1438  0486  3000               	movlw	0
  1439  0487  00D2               	movwf	Organize_Datas@number_of_data+1
  1440  0488  3000               	movlw	0
  1441  0489  00D3               	movwf	Organize_Datas@bus_number
  1442  048A  00D4               	movwf	Organize_Datas@bus_number+1
  1443  048B  303E               	movlw	(low (_RxData0| 0))& (0+255)
  1444  048C  3181  21B8  3184   	fcall	_Organize_Datas
  1445                           
  1446                           ;main.c: 120: Receive_flag = 1;
  1447  048F  0020               	movlb	0	; select bank0
  1448  0490  01E4               	clrf	_Receive_flag
  1449  0491  0AE4               	incf	_Receive_flag,f
  1450  0492                     l1248:	
  1451                           ;main.c: 123: while (1) {
  1452                           
  1453                           
  1454                           ;main.c: 124: if (Receive_flag == 0) {
  1455  0492  0020               	movlb	0	; select bank0
  1456  0493  0864               	movf	_Receive_flag,w
  1457  0494  1D03               	btfss	3,2
  1458  0495  2C92               	goto	l1248
  1459                           
  1460                           ;main.c: 125: Reception_from_master_main();
  1461  0496  3184  24C1  3184   	fcall	_Reception_from_master_main
  1462                           
  1463                           ;main.c: 127: SetData();
  1464  0499  3185  2521  3184   	fcall	_SetData
  1465  049C  2C92               	goto	l1248
  1466  049D                     __end_of_main:	
  1467                           ;main.c: 129: };main.c: 130: };main.c: 132: return (0);;	Return value of _main is never 
      +                          used
  1468                           
  1469                           
  1470                           	psect	text1
  1471  0521                     __ptext1:	
  1472 ;; *************** function _SetData *****************
  1473 ;; Defined at:
  1474 ;;		line 135 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    6
  1495 ;; This function calls:
  1496 ;;		_ChangeAddress
  1497 ;;		_ChangeData
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _SetData
  1505  0521                     _SetData:	
  1506                           
  1507                           ;main.c: 137: ChangeAddress();
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _SetData: [wreg+status,2+status,0+pclath+cstack]
  1511  0521  3184  2427  3185   	fcall	_ChangeAddress
  1512                           
  1513                           ;main.c: 138: ChangeData();
  1514  0524  3184  2452         	fcall	_ChangeData
  1515  0526  0008               	return
  1516  0527                     __end_of_SetData:	
  1517                           
  1518                           	psect	text2
  1519  0452                     __ptext2:	
  1520 ;; *************** function _ChangeData *****************
  1521 ;; Defined at:
  1522 ;;		line 179 in file "main.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, status,0, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1540 ;;Total ram usage:        0 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    5
  1543 ;; This function calls:
  1544 ;;		_Write_data
  1545 ;; This function is called by:
  1546 ;;		_SetData
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _ChangeData
  1552  0452                     _ChangeData:	
  1553                           
  1554                           ;main.c: 182: if (address == 1) {
  1555                           
  1556                           ;incstack = 0
  1557                           ; Regs used in _ChangeData: [wreg+status,2+status,0+pclath+cstack]
  1558  0452  0020               	movlb	0	; select bank0
  1559  0453  0361               	decf	_address,w
  1560  0454  0462               	iorwf	_address+1,w
  1561  0455  1D03               	btfss	3,2
  1562  0456  2C5B               	goto	l1084
  1563                           
  1564                           ;main.c: 183: Write_data(RxData0[1].all_data);
  1565  0457  0840               	movf	_RxData0+2,w
  1566  0458  3183  2315         	fcall	_Write_data
  1567                           
  1568                           ;main.c: 184: } else if (address == 2) {
  1569  045A  0008               	return
  1570  045B                     l1084:	
  1571  045B  3002               	movlw	2
  1572  045C  0020               	movlb	0	; select bank0
  1573  045D  0661               	xorwf	_address,w
  1574  045E  0462               	iorwf	_address+1,w
  1575  045F  1D03               	btfss	3,2
  1576  0460  2C65               	goto	l1088
  1577                           
  1578                           ;main.c: 185: Write_data(RxData0[2].all_data);
  1579  0461  0842               	movf	_RxData0+4,w
  1580  0462  3183  2315         	fcall	_Write_data
  1581                           
  1582                           ;main.c: 186: } else if (address == 3) {
  1583  0464  0008               	return
  1584  0465                     l1088:	
  1585  0465  3003               	movlw	3
  1586  0466  0020               	movlb	0	; select bank0
  1587  0467  0661               	xorwf	_address,w
  1588  0468  0462               	iorwf	_address+1,w
  1589  0469  1D03               	btfss	3,2
  1590  046A  2C6F               	goto	l1092
  1591                           
  1592                           ;main.c: 187: Write_data(RxData0[3].all_data);
  1593  046B  0844               	movf	_RxData0+6,w
  1594  046C  3183  2315         	fcall	_Write_data
  1595                           
  1596                           ;main.c: 188: } else if (address == 4) {
  1597  046E  0008               	return
  1598  046F                     l1092:	
  1599  046F  3004               	movlw	4
  1600  0470  0020               	movlb	0	; select bank0
  1601  0471  0661               	xorwf	_address,w
  1602  0472  0462               	iorwf	_address+1,w
  1603  0473  1D03               	btfss	3,2
  1604  0474  0008               	return
  1605                           
  1606                           ;main.c: 189: Write_data(RxData0[4].all_data);
  1607  0475  0846               	movf	_RxData0+8,w
  1608  0476  3183  2315         	fcall	_Write_data
  1609                           
  1610                           ;main.c: 190: } else;
  1611  0478  0008               	return
  1612  0479                     __end_of_ChangeData:	
  1613                           
  1614                           	psect	text3
  1615  0315                     __ptext3:	
  1616 ;; *************** function _Write_data *****************
  1617 ;; Defined at:
  1618 ;;		line 194 in file "main.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  servo_data      1    wreg     unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  servo_data      1   10[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1635 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1636 ;;Total ram usage:        3 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    4
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_ChangeData
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           
  1647                           ;psect for function _Write_data
  1648  0315                     _Write_data:	
  1649                           
  1650                           ;incstack = 0
  1651                           ; Regs used in _Write_data: [wreg+status,2+status,0]
  1652                           ;Write_data@servo_data stored from wreg
  1653  0315  0020               	movlb	0	; select bank0
  1654  0316  00D2               	movwf	Write_data@servo_data
  1655                           
  1656                           ;main.c: 196: LATAbits.LATA0 = (servo_data & 0b00000001);
  1657  0317  3001               	movlw	1
  1658  0318  0552               	andwf	Write_data@servo_data,w
  1659  0319  00D0               	movwf	??_Write_data
  1660  031A  0022               	movlb	2	; select bank2
  1661  031B  080C               	movf	12,w	;volatile
  1662  031C  0020               	movlb	0	; select bank0
  1663  031D  0650               	xorwf	??_Write_data,w
  1664  031E  39FE               	andlw	-2
  1665  031F  0650               	xorwf	??_Write_data,w
  1666  0320  0022               	movlb	2	; select bank2
  1667  0321  008C               	movwf	12	;volatile
  1668                           
  1669                           ;main.c: 197: LATAbits.LATA1 = ((servo_data & 0b00000010) >> 1);
  1670  0322  0020               	movlb	0	; select bank0
  1671  0323  3652               	lsrf	Write_data@servo_data,w
  1672  0324  3901               	andlw	1
  1673  0325  00D0               	movwf	??_Write_data
  1674  0326  0DD0               	rlf	??_Write_data,f
  1675  0327  0022               	movlb	2	; select bank2
  1676  0328  080C               	movf	12,w	;volatile
  1677  0329  0020               	movlb	0	; select bank0
  1678  032A  0650               	xorwf	??_Write_data,w
  1679  032B  39FD               	andlw	-3
  1680  032C  0650               	xorwf	??_Write_data,w
  1681  032D  0022               	movlb	2	; select bank2
  1682  032E  008C               	movwf	12	;volatile
  1683                           
  1684                           ;main.c: 198: LATAbits.LATA2 = ((servo_data & 0b00000100) >> 2);
  1685  032F  0020               	movlb	0	; select bank0
  1686  0330  0852               	movf	Write_data@servo_data,w
  1687  0331  00D0               	movwf	??_Write_data
  1688  0332  3002               	movlw	2
  1689  0333                     u885:	
  1690  0333  36D0               	lsrf	??_Write_data,f
  1691  0334  0B89               	decfsz	9,f
  1692  0335  2B33               	goto	u885
  1693  0336  0850               	movf	??_Write_data,w
  1694  0337  3901               	andlw	1
  1695  0338  00D1               	movwf	??_Write_data+1
  1696  0339  0DD1               	rlf	??_Write_data+1,f
  1697  033A  0DD1               	rlf	??_Write_data+1,f
  1698  033B  0022               	movlb	2	; select bank2
  1699  033C  080C               	movf	12,w	;volatile
  1700  033D  0020               	movlb	0	; select bank0
  1701  033E  0651               	xorwf	??_Write_data+1,w
  1702  033F  39FB               	andlw	-5
  1703  0340  0651               	xorwf	??_Write_data+1,w
  1704  0341  0022               	movlb	2	; select bank2
  1705  0342  008C               	movwf	12	;volatile
  1706                           
  1707                           ;main.c: 199: LATCbits.LATC0 = ((servo_data & 0b00001000) >> 3);
  1708  0343  0020               	movlb	0	; select bank0
  1709  0344  0852               	movf	Write_data@servo_data,w
  1710  0345  00D0               	movwf	??_Write_data
  1711  0346  3003               	movlw	3
  1712  0347                     u895:	
  1713  0347  36D0               	lsrf	??_Write_data,f
  1714  0348  0B89               	decfsz	9,f
  1715  0349  2B47               	goto	u895
  1716  034A  3001               	movlw	1
  1717  034B  0550               	andwf	??_Write_data,w
  1718  034C  00D1               	movwf	??_Write_data+1
  1719  034D  0022               	movlb	2	; select bank2
  1720  034E  080E               	movf	14,w	;volatile
  1721  034F  0020               	movlb	0	; select bank0
  1722  0350  0651               	xorwf	??_Write_data+1,w
  1723  0351  39FE               	andlw	-2
  1724  0352  0651               	xorwf	??_Write_data+1,w
  1725  0353  0022               	movlb	2	; select bank2
  1726  0354  008E               	movwf	14	;volatile
  1727                           
  1728                           ;main.c: 200: LATCbits.LATC1 = ((servo_data & 0b00010000) >> 4);
  1729  0355  0020               	movlb	0	; select bank0
  1730  0356  0852               	movf	Write_data@servo_data,w
  1731  0357  00D0               	movwf	??_Write_data
  1732  0358  3004               	movlw	4
  1733  0359                     u905:	
  1734  0359  36D0               	lsrf	??_Write_data,f
  1735  035A  0B89               	decfsz	9,f
  1736  035B  2B59               	goto	u905
  1737  035C  0850               	movf	??_Write_data,w
  1738  035D  3901               	andlw	1
  1739  035E  00D1               	movwf	??_Write_data+1
  1740  035F  0DD1               	rlf	??_Write_data+1,f
  1741  0360  0022               	movlb	2	; select bank2
  1742  0361  080E               	movf	14,w	;volatile
  1743  0362  0020               	movlb	0	; select bank0
  1744  0363  0651               	xorwf	??_Write_data+1,w
  1745  0364  39FD               	andlw	-3
  1746  0365  0651               	xorwf	??_Write_data+1,w
  1747  0366  0022               	movlb	2	; select bank2
  1748  0367  008E               	movwf	14	;volatile
  1749                           
  1750                           ;main.c: 201: LATCbits.LATC2 = ((servo_data & 0b00100000) >> 5);
  1751  0368  0020               	movlb	0	; select bank0
  1752  0369  0852               	movf	Write_data@servo_data,w
  1753  036A  00D0               	movwf	??_Write_data
  1754  036B  3005               	movlw	5
  1755  036C                     u915:	
  1756  036C  36D0               	lsrf	??_Write_data,f
  1757  036D  0B89               	decfsz	9,f
  1758  036E  2B6C               	goto	u915
  1759  036F  0850               	movf	??_Write_data,w
  1760  0370  3901               	andlw	1
  1761  0371  00D1               	movwf	??_Write_data+1
  1762  0372  0DD1               	rlf	??_Write_data+1,f
  1763  0373  0DD1               	rlf	??_Write_data+1,f
  1764  0374  0022               	movlb	2	; select bank2
  1765  0375  080E               	movf	14,w	;volatile
  1766  0376  0020               	movlb	0	; select bank0
  1767  0377  0651               	xorwf	??_Write_data+1,w
  1768  0378  39FB               	andlw	-5
  1769  0379  0651               	xorwf	??_Write_data+1,w
  1770  037A  0022               	movlb	2	; select bank2
  1771  037B  008E               	movwf	14	;volatile
  1772                           
  1773                           ;main.c: 202: LATCbits.LATC4 = ((servo_data & 0b01000000) >> 6);
  1774  037C  0020               	movlb	0	; select bank0
  1775  037D  0852               	movf	Write_data@servo_data,w
  1776  037E  00D0               	movwf	??_Write_data
  1777  037F  3006               	movlw	6
  1778  0380                     u925:	
  1779  0380  36D0               	lsrf	??_Write_data,f
  1780  0381  0B89               	decfsz	9,f
  1781  0382  2B80               	goto	u925
  1782  0383  0850               	movf	??_Write_data,w
  1783  0384  3901               	andlw	1
  1784  0385  00D1               	movwf	??_Write_data+1
  1785  0386  0ED1               	swapf	??_Write_data+1,f
  1786  0387  0022               	movlb	2	; select bank2
  1787  0388  080E               	movf	14,w	;volatile
  1788  0389  0020               	movlb	0	; select bank0
  1789  038A  0651               	xorwf	??_Write_data+1,w
  1790  038B  39EF               	andlw	-17
  1791  038C  0651               	xorwf	??_Write_data+1,w
  1792  038D  0022               	movlb	2	; select bank2
  1793  038E  008E               	movwf	14	;volatile
  1794                           
  1795                           ;main.c: 203: LATCbits.LATC3 = ((servo_data & 0b10000000) >> 7);
  1796  038F  0020               	movlb	0	; select bank0
  1797  0390  0852               	movf	Write_data@servo_data,w
  1798  0391  00D0               	movwf	??_Write_data
  1799  0392  3007               	movlw	7
  1800  0393                     u935:	
  1801  0393  36D0               	lsrf	??_Write_data,f
  1802  0394  0B89               	decfsz	9,f
  1803  0395  2B93               	goto	u935
  1804  0396  0850               	movf	??_Write_data,w
  1805  0397  3901               	andlw	1
  1806  0398  00D1               	movwf	??_Write_data+1
  1807  0399  0DD1               	rlf	??_Write_data+1,f
  1808  039A  0DD1               	rlf	??_Write_data+1,f
  1809  039B  0DD1               	rlf	??_Write_data+1,f
  1810  039C  0022               	movlb	2	; select bank2
  1811  039D  080E               	movf	14,w	;volatile
  1812  039E  0020               	movlb	0	; select bank0
  1813  039F  0651               	xorwf	??_Write_data+1,w
  1814  03A0  39F7               	andlw	-9
  1815  03A1  0651               	xorwf	??_Write_data+1,w
  1816  03A2  0022               	movlb	2	; select bank2
  1817  03A3  008E               	movwf	14	;volatile
  1818  03A4  0008               	return
  1819  03A5                     __end_of_Write_data:	
  1820                           
  1821                           	psect	text4
  1822  0427                     __ptext4:	
  1823 ;; *************** function _ChangeAddress *****************
  1824 ;; Defined at:
  1825 ;;		line 141 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, pclath, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1841 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    5
  1846 ;; This function calls:
  1847 ;;		_Write_Address
  1848 ;; This function is called by:
  1849 ;;		_SetData
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           
  1854                           ;psect for function _ChangeAddress
  1855  0427                     _ChangeAddress:	
  1856                           
  1857                           ;main.c: 145: if (address_status == 0b000) {
  1858                           
  1859                           ;incstack = 0
  1860                           ; Regs used in _ChangeAddress: [wreg+status,2+status,0+pclath+cstack]
  1861  0427  0020               	movlb	0	; select bank0
  1862  0428  0830               	movf	_address_status,w
  1863  0429  1D03               	btfss	3,2
  1864  042A  2C35               	goto	l1070
  1865                           
  1866                           ;main.c: 148: Write_Address(address);
  1867  042B  0862               	movf	_address+1,w
  1868  042C  00D1               	movwf	Write_Address@address+1
  1869  042D  0861               	movf	_address,w
  1870  042E  00D0               	movwf	Write_Address@address
  1871  042F  3183  23EC         	fcall	_Write_Address
  1872                           
  1873                           ;main.c: 151: address_status = 1;
  1874  0431  0020               	movlb	0	; select bank0
  1875  0432  01B0               	clrf	_address_status
  1876  0433  0AB0               	incf	_address_status,f
  1877                           
  1878                           ;main.c: 153: } else {
  1879  0434  0008               	return
  1880  0435                     l1070:	
  1881                           
  1882                           ;main.c: 156: Write_Address(0b000);
  1883  0435  3000               	movlw	0
  1884  0436  00D0               	movwf	Write_Address@address
  1885  0437  00D1               	movwf	Write_Address@address+1
  1886  0438  3183  23EC  3184   	fcall	_Write_Address
  1887                           
  1888                           ;main.c: 159: address_status = 0b000;
  1889  043B  0020               	movlb	0	; select bank0
  1890  043C  01B0               	clrf	_address_status
  1891                           
  1892                           ;main.c: 162: address++;
  1893  043D  3001               	movlw	1
  1894  043E  07E1               	addwf	_address,f
  1895  043F  3000               	movlw	0
  1896  0440  3DE2               	addwfc	_address+1,f
  1897                           
  1898                           ;main.c: 165: if (address >= 5) {
  1899  0441  0862               	movf	_address+1,w
  1900  0442  3A80               	xorlw	128
  1901  0443  00D5               	movwf	??_ChangeAddress
  1902  0444  3080               	movlw	128
  1903  0445  0255               	subwf	??_ChangeAddress,w
  1904  0446  1D03               	skipz
  1905  0447  2C4A               	goto	u1175
  1906  0448  3005               	movlw	5
  1907  0449  0261               	subwf	_address,w
  1908  044A                     u1175:	
  1909  044A  1C03               	skipc
  1910  044B  0008               	return
  1911                           
  1912                           ;main.c: 166: address = 0b001;
  1913  044C  3001               	movlw	1
  1914  044D  0020               	movlb	0	; select bank0
  1915  044E  00E1               	movwf	_address
  1916  044F  3000               	movlw	0
  1917  0450  00E2               	movwf	_address+1
  1918  0451  0008               	return
  1919  0452                     __end_of_ChangeAddress:	
  1920                           
  1921                           	psect	text5
  1922  03EC                     __ptext5:	
  1923 ;; *************** function _Write_Address *****************
  1924 ;; Defined at:
  1925 ;;		line 173 in file "main.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  address         2    8[BANK0 ] int 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1941 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1942 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1943 ;;Total ram usage:        5 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    4
  1946 ;; This function calls:
  1947 ;;		Nothing
  1948 ;; This function is called by:
  1949 ;;		_ChangeAddress
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _Write_Address
  1955  03EC                     _Write_Address:	
  1956                           
  1957                           ;main.c: 174: LATCbits.LATC5 = (address & 0b001);
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _Write_Address: [wreg+status,2+status,0]
  1961  03EC  0020               	movlb	0	; select bank0
  1962  03ED  0850               	movf	Write_Address@address,w
  1963  03EE  3901               	andlw	1
  1964  03EF  00D2               	movwf	??_Write_Address
  1965  03F0  0ED2               	swapf	??_Write_Address,f
  1966  03F1  0DD2               	rlf	??_Write_Address,f
  1967  03F2  0022               	movlb	2	; select bank2
  1968  03F3  080E               	movf	14,w	;volatile
  1969  03F4  0020               	movlb	0	; select bank0
  1970  03F5  0652               	xorwf	??_Write_Address,w
  1971  03F6  39DF               	andlw	-33
  1972  03F7  0652               	xorwf	??_Write_Address,w
  1973  03F8  0022               	movlb	2	; select bank2
  1974  03F9  008E               	movwf	14	;volatile
  1975                           
  1976                           ;main.c: 175: LATAbits.LATA5 = ((address & 0b010) >> 1);
  1977  03FA  0020               	movlb	0	; select bank0
  1978  03FB  0851               	movf	Write_Address@address+1,w
  1979  03FC  00D3               	movwf	??_Write_Address+1
  1980  03FD  0850               	movf	Write_Address@address,w
  1981  03FE  00D2               	movwf	??_Write_Address
  1982  03FF  0D53               	rlf	??_Write_Address+1,w
  1983  0400  0CD3               	rrf	??_Write_Address+1,f
  1984  0401  0CD2               	rrf	??_Write_Address,f
  1985  0402  0852               	movf	??_Write_Address,w
  1986  0403  3901               	andlw	1
  1987  0404  00D4               	movwf	??_Write_Address+2
  1988  0405  0ED4               	swapf	??_Write_Address+2,f
  1989  0406  0DD4               	rlf	??_Write_Address+2,f
  1990  0407  0022               	movlb	2	; select bank2
  1991  0408  080C               	movf	12,w	;volatile
  1992  0409  0020               	movlb	0	; select bank0
  1993  040A  0654               	xorwf	??_Write_Address+2,w
  1994  040B  39DF               	andlw	-33
  1995  040C  0654               	xorwf	??_Write_Address+2,w
  1996  040D  0022               	movlb	2	; select bank2
  1997  040E  008C               	movwf	12	;volatile
  1998                           
  1999                           ;main.c: 176: LATAbits.LATA4 = ((address & 0b100) >> 2);
  2000  040F  0020               	movlb	0	; select bank0
  2001  0410  0851               	movf	Write_Address@address+1,w
  2002  0411  00D3               	movwf	??_Write_Address+1
  2003  0412  0850               	movf	Write_Address@address,w
  2004  0413  00D2               	movwf	??_Write_Address
  2005  0414  0D53               	rlf	??_Write_Address+1,w
  2006  0415  0CD3               	rrf	??_Write_Address+1,f
  2007  0416  0CD2               	rrf	??_Write_Address,f
  2008  0417  0D53               	rlf	??_Write_Address+1,w
  2009  0418  0CD3               	rrf	??_Write_Address+1,f
  2010  0419  0CD2               	rrf	??_Write_Address,f
  2011  041A  0852               	movf	??_Write_Address,w
  2012  041B  3901               	andlw	1
  2013  041C  00D4               	movwf	??_Write_Address+2
  2014  041D  0ED4               	swapf	??_Write_Address+2,f
  2015  041E  0022               	movlb	2	; select bank2
  2016  041F  080C               	movf	12,w	;volatile
  2017  0420  0020               	movlb	0	; select bank0
  2018  0421  0654               	xorwf	??_Write_Address+2,w
  2019  0422  39EF               	andlw	-17
  2020  0423  0654               	xorwf	??_Write_Address+2,w
  2021  0424  0022               	movlb	2	; select bank2
  2022  0425  008C               	movwf	12	;volatile
  2023  0426  0008               	return
  2024  0427                     __end_of_Write_Address:	
  2025                           
  2026                           	psect	text6
  2027  04C1                     __ptext6:	
  2028 ;; *************** function _Reception_from_master_main *****************
  2029 ;; Defined at:
  2030 ;;		line 90 in file "communication.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;		None
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2046 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2047 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;Total ram usage:        1 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    5
  2051 ;; This function calls:
  2052 ;;		_Organize_Datas
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           
  2059                           ;psect for function _Reception_from_master_main
  2060  04C1                     _Reception_from_master_main:	
  2061                           
  2062                           ;communication.c: 91: if (Receive_flag == 0) {
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _Reception_from_master_main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2066  04C1  0020               	movlb	0	; select bank0
  2067  04C2  0864               	movf	_Receive_flag,w
  2068  04C3  1D03               	btfss	3,2
  2069  04C4  0008               	return
  2070                           
  2071                           ;communication.c: 93: if (slave_different_flag == 1) {
  2072  04C5  0363               	decf	_slave_different_flag,w
  2073  04C6  1D03               	btfss	3,2
  2074  04C7  2CDA               	goto	l1210
  2075                           
  2076                           ;communication.c: 94: Organize_Datas(RxData0, Buffer0, 5, 0);
  2077  04C8  3031               	movlw	(low (_Buffer0| 0))& (0+255)
  2078  04C9  00DB               	movwf	??_Reception_from_master_main
  2079  04CA  085B               	movf	??_Reception_from_master_main,w
  2080  04CB  00D0               	movwf	Organize_Datas@Buffer
  2081  04CC  3005               	movlw	5
  2082  04CD  00D1               	movwf	Organize_Datas@number_of_data
  2083  04CE  3000               	movlw	0
  2084  04CF  00D2               	movwf	Organize_Datas@number_of_data+1
  2085  04D0  3000               	movlw	0
  2086  04D1  00D3               	movwf	Organize_Datas@bus_number
  2087  04D2  00D4               	movwf	Organize_Datas@bus_number+1
  2088  04D3  303E               	movlw	(low (_RxData0| 0))& (0+255)
  2089  04D4  3181  21B8  3184   	fcall	_Organize_Datas
  2090                           
  2091                           ;communication.c: 95: slave_different_flag = 2;
  2092  04D7  3002               	movlw	2
  2093  04D8  0020               	movlb	0	; select bank0
  2094  04D9  2CDB               	goto	L1
  2095  04DA                     l1210:	
  2096                           ;communication.c: 96: } else {
  2097                           
  2098                           
  2099                           ;communication.c: 97: slave_different_flag = 2;
  2100  04DA  3002               	movlw	2
  2101  04DB                     L1:	
  2102  04DB  00DB               	movwf	??_Reception_from_master_main
  2103  04DC  085B               	movf	??_Reception_from_master_main,w
  2104  04DD  00E3               	movwf	_slave_different_flag
  2105                           
  2106                           ;communication.c: 98: };communication.c: 99: Receive_flag = 1;
  2107  04DE  01E4               	clrf	_Receive_flag
  2108  04DF  0AE4               	incf	_Receive_flag,f
  2109                           
  2110                           ;communication.c: 100: } else;
  2111  04E0  0008               	return
  2112  04E1                     __end_of_Reception_from_master_main:	
  2113                           
  2114                           	psect	text7
  2115  01B8                     __ptext7:	
  2116 ;; *************** function _Organize_Datas *****************
  2117 ;; Defined at:
  2118 ;;		line 20 in file "Controller_Protocol.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  RxData          1    wreg     PTR struct .
  2121 ;;		 -> RxData0(10), 
  2122 ;;  Buffer          1    8[BANK0 ] PTR struct .
  2123 ;;		 -> Buffer0(13), 
  2124 ;;  number_of_da    2    9[BANK0 ] int 
  2125 ;;  bus_number      2   11[BANK0 ] int 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  RxData          1   18[BANK0 ] PTR struct .
  2128 ;;		 -> RxData0(10), 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2138 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;Total ram usage:       11 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    4
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;;		_Reception_from_master_main
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _Organize_Datas
  2155  01B8                     _Organize_Datas:	
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _Organize_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  2159                           ;Organize_Datas@RxData stored from wreg
  2160  01B8  0020               	movlb	0	; select bank0
  2161  01B9  00DA               	movwf	Organize_Datas@RxData
  2162                           
  2163                           ;Controller_Protocol.c: 22: OP[bus_number].count = 1;
  2164  01BA  0853               	movf	Organize_Datas@bus_number,w
  2165  01BB  00D5               	movwf	??_Organize_Datas
  2166  01BC  3001               	movlw	1
  2167  01BD                     u965:	
  2168  01BD  35D5               	lslf	??_Organize_Datas,f
  2169  01BE  3EFF               	addlw	-1
  2170  01BF  1D03               	skipz
  2171  01C0  29BD               	goto	u965
  2172  01C1  3555               	lslf	??_Organize_Datas,w
  2173  01C2  3E02               	addlw	2
  2174  01C3  3E29               	addlw	(low (_OP| 0))& (0+255)
  2175  01C4  0086               	movwf	6
  2176  01C5  0187               	clrf	7
  2177  01C6  3001               	movlw	1
  2178  01C7  3FC0               	movwi [0]fsr1
  2179  01C8  3000               	movlw	0
  2180  01C9  3FC1               	movwi [1]fsr1
  2181                           
  2182                           ;Controller_Protocol.c: 23: for (OP[bus_number].num = 0; OP[bus_number].num < number_of_
      +                          data; OP[bus_number].num++) {
  2183  01CA  0853               	movf	Organize_Datas@bus_number,w
  2184  01CB  00D5               	movwf	??_Organize_Datas
  2185  01CC  3001               	movlw	1
  2186  01CD                     u975:	
  2187  01CD  35D5               	lslf	??_Organize_Datas,f
  2188  01CE  3EFF               	addlw	-1
  2189  01CF  1D03               	skipz
  2190  01D0  29CD               	goto	u975
  2191  01D1  3555               	lslf	??_Organize_Datas,w
  2192  01D2  3E29               	addlw	(low (_OP| 0))& (0+255)
  2193  01D3  0086               	movwf	6
  2194  01D4  0187               	clrf	7
  2195  01D5  3000               	movlw	0
  2196  01D6  3FC0               	movwi [0]fsr1
  2197  01D7  3FC1               	movwi [1]fsr1
  2198  01D8                     l191:	
  2199  01D8  0853               	movf	Organize_Datas@bus_number,w
  2200  01D9  00D5               	movwf	??_Organize_Datas
  2201  01DA  3001               	movlw	1
  2202  01DB                     u1145:	
  2203  01DB  35D5               	lslf	??_Organize_Datas,f
  2204  01DC  3EFF               	addlw	-1
  2205  01DD  1D03               	skipz
  2206  01DE  29DB               	goto	u1145
  2207  01DF  3555               	lslf	??_Organize_Datas,w
  2208  01E0  3E29               	addlw	(low (_OP| 0))& (0+255)
  2209  01E1  0086               	movwf	6
  2210  01E2  0187               	clrf	7
  2211  01E3  3F40               	moviw [0]fsr1
  2212  01E4  00D6               	movwf	??_Organize_Datas+1
  2213  01E5  3F41               	moviw [1]fsr1
  2214  01E6  00D7               	movwf	??_Organize_Datas+2
  2215  01E7  0857               	movf	??_Organize_Datas+2,w
  2216  01E8  3A80               	xorlw	128
  2217  01E9  00D8               	movwf	??_Organize_Datas+3
  2218  01EA  0852               	movf	Organize_Datas@number_of_data+1,w
  2219  01EB  3A80               	xorlw	128
  2220  01EC  0258               	subwf	??_Organize_Datas+3,w
  2221  01ED  1D03               	skipz
  2222  01EE  29F1               	goto	u1155
  2223  01EF  0851               	movf	Organize_Datas@number_of_data,w
  2224  01F0  0256               	subwf	??_Organize_Datas+1,w
  2225  01F1                     u1155:	
  2226  01F1  1803               	btfsc	3,0
  2227  01F2  0008               	return
  2228                           
  2229                           ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number
      +                          ].count].upper_data;
  2230  01F3  0020               	movlb	0	; select bank0
  2231  01F4  0853               	movf	Organize_Datas@bus_number,w
  2232  01F5  00D5               	movwf	??_Organize_Datas
  2233  01F6  3001               	movlw	1
  2234  01F7                     u985:	
  2235  01F7  35D5               	lslf	??_Organize_Datas,f
  2236  01F8  3EFF               	addlw	-1
  2237  01F9  1D03               	skipz
  2238  01FA  29F7               	goto	u985
  2239  01FB  3555               	lslf	??_Organize_Datas,w
  2240  01FC  3E02               	addlw	2
  2241  01FD  3E29               	addlw	(low (_OP| 0))& (0+255)
  2242  01FE  0086               	movwf	6
  2243  01FF  0187               	clrf	7
  2244  0200  0801               	movf	1,w
  2245  0201  0750               	addwf	Organize_Datas@Buffer,w
  2246  0202  00D6               	movwf	??_Organize_Datas+1
  2247  0203  0856               	movf	??_Organize_Datas+1,w
  2248  0204  0086               	movwf	6
  2249  0205  0187               	clrf	7
  2250  0206  0E01               	swapf	1,w
  2251  0207  390F               	andlw	15
  2252  0208  00D7               	movwf	??_Organize_Datas+2
  2253  0209  0853               	movf	Organize_Datas@bus_number,w
  2254  020A  00D8               	movwf	??_Organize_Datas+3
  2255  020B  3001               	movlw	1
  2256  020C                     u995:	
  2257  020C  35D8               	lslf	??_Organize_Datas+3,f
  2258  020D  3EFF               	addlw	-1
  2259  020E  1D03               	skipz
  2260  020F  2A0C               	goto	u995
  2261  0210  3558               	lslf	??_Organize_Datas+3,w
  2262  0211  3E29               	addlw	(low (_OP| 0))& (0+255)
  2263  0212  0086               	movwf	6
  2264  0213  0187               	clrf	7
  2265  0214  3501               	lslf	1,w
  2266  0215  075A               	addwf	Organize_Datas@RxData,w
  2267  0216  00D9               	movwf	??_Organize_Datas+4
  2268  0217  0859               	movf	??_Organize_Datas+4,w
  2269  0218  0086               	movwf	6
  2270  0219  0187               	clrf	7
  2271  021A  0ED7               	swapf	??_Organize_Datas+2,f
  2272  021B  0801               	movf	1,w
  2273  021C  0657               	xorwf	??_Organize_Datas+2,w
  2274  021D  390F               	andlw	-241
  2275  021E  0657               	xorwf	??_Organize_Datas+2,w
  2276  021F  0081               	movwf	1
  2277                           
  2278                           ;Controller_Protocol.c: 25: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number
      +                          ].count + 1].upper_data;
  2279  0220  0853               	movf	Organize_Datas@bus_number,w
  2280  0221  00D5               	movwf	??_Organize_Datas
  2281  0222  3001               	movlw	1
  2282  0223                     u1005:	
  2283  0223  35D5               	lslf	??_Organize_Datas,f
  2284  0224  3EFF               	addlw	-1
  2285  0225  1D03               	skipz
  2286  0226  2A23               	goto	u1005
  2287  0227  3555               	lslf	??_Organize_Datas,w
  2288  0228  3E02               	addlw	2
  2289  0229  3E29               	addlw	(low (_OP| 0))& (0+255)
  2290  022A  0086               	movwf	6
  2291  022B  0187               	clrf	7
  2292  022C  0801               	movf	1,w
  2293  022D  3E01               	addlw	1
  2294  022E  0750               	addwf	Organize_Datas@Buffer,w
  2295  022F  00D6               	movwf	??_Organize_Datas+1
  2296  0230  0856               	movf	??_Organize_Datas+1,w
  2297  0231  0086               	movwf	6
  2298  0232  0187               	clrf	7
  2299  0233  0E01               	swapf	1,w
  2300  0234  390F               	andlw	15
  2301  0235  00D7               	movwf	??_Organize_Datas+2
  2302  0236  0853               	movf	Organize_Datas@bus_number,w
  2303  0237  00D8               	movwf	??_Organize_Datas+3
  2304  0238  3001               	movlw	1
  2305  0239                     u1015:	
  2306  0239  35D8               	lslf	??_Organize_Datas+3,f
  2307  023A  3EFF               	addlw	-1
  2308  023B  1D03               	skipz
  2309  023C  2A39               	goto	u1015
  2310  023D  3558               	lslf	??_Organize_Datas+3,w
  2311  023E  3E29               	addlw	(low (_OP| 0))& (0+255)
  2312  023F  0086               	movwf	6
  2313  0240  0187               	clrf	7
  2314  0241  3501               	lslf	1,w
  2315  0242  075A               	addwf	Organize_Datas@RxData,w
  2316  0243  00D9               	movwf	??_Organize_Datas+4
  2317  0244  0859               	movf	??_Organize_Datas+4,w
  2318  0245  0086               	movwf	6
  2319  0246  0187               	clrf	7
  2320  0247  0801               	movf	1,w
  2321  0248  0657               	xorwf	??_Organize_Datas+2,w
  2322  0249  39F0               	andlw	-16
  2323  024A  0657               	xorwf	??_Organize_Datas+2,w
  2324  024B  0081               	movwf	1
  2325                           
  2326                           ;Controller_Protocol.c: 26: if ((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus
      +                          _number].count + 1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
  2327  024C  0853               	movf	Organize_Datas@bus_number,w
  2328  024D  00D5               	movwf	??_Organize_Datas
  2329  024E  3001               	movlw	1
  2330  024F                     u1025:	
  2331  024F  35D5               	lslf	??_Organize_Datas,f
  2332  0250  3EFF               	addlw	-1
  2333  0251  1D03               	skipz
  2334  0252  2A4F               	goto	u1025
  2335  0253  3555               	lslf	??_Organize_Datas,w
  2336  0254  3E02               	addlw	2
  2337  0255  3E29               	addlw	(low (_OP| 0))& (0+255)
  2338  0256  0086               	movwf	6
  2339  0257  0187               	clrf	7
  2340  0258  0801               	movf	1,w
  2341  0259  0750               	addwf	Organize_Datas@Buffer,w
  2342  025A  00D6               	movwf	??_Organize_Datas+1
  2343  025B  0856               	movf	??_Organize_Datas+1,w
  2344  025C  0086               	movwf	6
  2345  025D  0187               	clrf	7
  2346  025E  0E01               	swapf	1,w
  2347  025F  390F               	andlw	15
  2348  0260  00D7               	movwf	??_Organize_Datas+2
  2349  0261  0853               	movf	Organize_Datas@bus_number,w
  2350  0262  00D8               	movwf	??_Organize_Datas+3
  2351  0263  3001               	movlw	1
  2352  0264                     u1035:	
  2353  0264  35D8               	lslf	??_Organize_Datas+3,f
  2354  0265  3EFF               	addlw	-1
  2355  0266  1D03               	skipz
  2356  0267  2A64               	goto	u1035
  2357  0268  3558               	lslf	??_Organize_Datas+3,w
  2358  0269  3E02               	addlw	2
  2359  026A  3E29               	addlw	(low (_OP| 0))& (0+255)
  2360  026B  0086               	movwf	6
  2361  026C  0187               	clrf	7
  2362  026D  0801               	movf	1,w
  2363  026E  3E01               	addlw	1
  2364  026F  0750               	addwf	Organize_Datas@Buffer,w
  2365  0270  00D9               	movwf	??_Organize_Datas+4
  2366  0271  0859               	movf	??_Organize_Datas+4,w
  2367  0272  0086               	movwf	6
  2368  0273  0187               	clrf	7
  2369  0274  0801               	movf	1,w
  2370  0275  390F               	andlw	15
  2371  0276  0457               	iorwf	??_Organize_Datas+2,w
  2372  0277  3A0F               	xorlw	15
  2373  0278  1D03               	skipz
  2374  0279  2A8D               	goto	l1058
  2375  027A  0853               	movf	Organize_Datas@bus_number,w
  2376  027B  00D5               	movwf	??_Organize_Datas
  2377  027C  3001               	movlw	1
  2378  027D                     u1055:	
  2379  027D  35D5               	lslf	??_Organize_Datas,f
  2380  027E  3EFF               	addlw	-1
  2381  027F  1D03               	skipz
  2382  0280  2A7D               	goto	u1055
  2383  0281  3555               	lslf	??_Organize_Datas,w
  2384  0282  3E29               	addlw	(low (_OP| 0))& (0+255)
  2385  0283  0086               	movwf	6
  2386  0284  0187               	clrf	7
  2387  0285  3501               	lslf	1,w
  2388  0286  075A               	addwf	Organize_Datas@RxData,w
  2389  0287  00D6               	movwf	??_Organize_Datas+1
  2390  0288  0A56               	incf	??_Organize_Datas+1,w
  2391  0289  0086               	movwf	6
  2392  028A  0187               	clrf	7
  2393  028B  1001               	bcf	1,0
  2394  028C  2A9F               	goto	l194
  2395  028D                     l1058:	
  2396                           
  2397                           ;Controller_Protocol.c: 27: else RxData[OP[bus_number].num].UD_error = 1;
  2398  028D  0853               	movf	Organize_Datas@bus_number,w
  2399  028E  00D5               	movwf	??_Organize_Datas
  2400  028F  3001               	movlw	1
  2401  0290                     u1065:	
  2402  0290  35D5               	lslf	??_Organize_Datas,f
  2403  0291  3EFF               	addlw	-1
  2404  0292  1D03               	skipz
  2405  0293  2A90               	goto	u1065
  2406  0294  3555               	lslf	??_Organize_Datas,w
  2407  0295  3E29               	addlw	(low (_OP| 0))& (0+255)
  2408  0296  0086               	movwf	6
  2409  0297  0187               	clrf	7
  2410  0298  3501               	lslf	1,w
  2411  0299  075A               	addwf	Organize_Datas@RxData,w
  2412  029A  00D6               	movwf	??_Organize_Datas+1
  2413  029B  0A56               	incf	??_Organize_Datas+1,w
  2414  029C  0086               	movwf	6
  2415  029D  0187               	clrf	7
  2416  029E  1401               	bsf	1,0
  2417  029F                     l194:	
  2418                           
  2419                           ;Controller_Protocol.c: 28: if ((Buffer[OP[bus_number].count + 1].upper_data | Buffer[OP
      +                          [bus_number].count + 2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
  2420  029F  0853               	movf	Organize_Datas@bus_number,w
  2421  02A0  00D5               	movwf	??_Organize_Datas
  2422  02A1  3001               	movlw	1
  2423  02A2                     u1075:	
  2424  02A2  35D5               	lslf	??_Organize_Datas,f
  2425  02A3  3EFF               	addlw	-1
  2426  02A4  1D03               	skipz
  2427  02A5  2AA2               	goto	u1075
  2428  02A6  3555               	lslf	??_Organize_Datas,w
  2429  02A7  3E02               	addlw	2
  2430  02A8  3E29               	addlw	(low (_OP| 0))& (0+255)
  2431  02A9  0086               	movwf	6
  2432  02AA  0187               	clrf	7
  2433  02AB  0801               	movf	1,w
  2434  02AC  3E01               	addlw	1
  2435  02AD  0750               	addwf	Organize_Datas@Buffer,w
  2436  02AE  00D6               	movwf	??_Organize_Datas+1
  2437  02AF  0856               	movf	??_Organize_Datas+1,w
  2438  02B0  0086               	movwf	6
  2439  02B1  0187               	clrf	7
  2440  02B2  0E01               	swapf	1,w
  2441  02B3  390F               	andlw	15
  2442  02B4  00D7               	movwf	??_Organize_Datas+2
  2443  02B5  0853               	movf	Organize_Datas@bus_number,w
  2444  02B6  00D8               	movwf	??_Organize_Datas+3
  2445  02B7  3001               	movlw	1
  2446  02B8                     u1085:	
  2447  02B8  35D8               	lslf	??_Organize_Datas+3,f
  2448  02B9  3EFF               	addlw	-1
  2449  02BA  1D03               	skipz
  2450  02BB  2AB8               	goto	u1085
  2451  02BC  3558               	lslf	??_Organize_Datas+3,w
  2452  02BD  3E02               	addlw	2
  2453  02BE  3E29               	addlw	(low (_OP| 0))& (0+255)
  2454  02BF  0086               	movwf	6
  2455  02C0  0187               	clrf	7
  2456  02C1  0801               	movf	1,w
  2457  02C2  3E02               	addlw	2
  2458  02C3  0750               	addwf	Organize_Datas@Buffer,w
  2459  02C4  00D9               	movwf	??_Organize_Datas+4
  2460  02C5  0859               	movf	??_Organize_Datas+4,w
  2461  02C6  0086               	movwf	6
  2462  02C7  0187               	clrf	7
  2463  02C8  0801               	movf	1,w
  2464  02C9  390F               	andlw	15
  2465  02CA  0457               	iorwf	??_Organize_Datas+2,w
  2466  02CB  3A0F               	xorlw	15
  2467  02CC  1D03               	skipz
  2468  02CD  2AE1               	goto	l1062
  2469  02CE  0853               	movf	Organize_Datas@bus_number,w
  2470  02CF  00D5               	movwf	??_Organize_Datas
  2471  02D0  3001               	movlw	1
  2472  02D1                     u1105:	
  2473  02D1  35D5               	lslf	??_Organize_Datas,f
  2474  02D2  3EFF               	addlw	-1
  2475  02D3  1D03               	skipz
  2476  02D4  2AD1               	goto	u1105
  2477  02D5  3555               	lslf	??_Organize_Datas,w
  2478  02D6  3E29               	addlw	(low (_OP| 0))& (0+255)
  2479  02D7  0086               	movwf	6
  2480  02D8  0187               	clrf	7
  2481  02D9  3501               	lslf	1,w
  2482  02DA  075A               	addwf	Organize_Datas@RxData,w
  2483  02DB  00D6               	movwf	??_Organize_Datas+1
  2484  02DC  0A56               	incf	??_Organize_Datas+1,w
  2485  02DD  0086               	movwf	6
  2486  02DE  0187               	clrf	7
  2487  02DF  1081               	bcf	1,1
  2488  02E0  2AF3               	goto	l196
  2489  02E1                     l1062:	
  2490                           
  2491                           ;Controller_Protocol.c: 29: else RxData[OP[bus_number].num].LD_error = 1;
  2492  02E1  0853               	movf	Organize_Datas@bus_number,w
  2493  02E2  00D5               	movwf	??_Organize_Datas
  2494  02E3  3001               	movlw	1
  2495  02E4                     u1115:	
  2496  02E4  35D5               	lslf	??_Organize_Datas,f
  2497  02E5  3EFF               	addlw	-1
  2498  02E6  1D03               	skipz
  2499  02E7  2AE4               	goto	u1115
  2500  02E8  3555               	lslf	??_Organize_Datas,w
  2501  02E9  3E29               	addlw	(low (_OP| 0))& (0+255)
  2502  02EA  0086               	movwf	6
  2503  02EB  0187               	clrf	7
  2504  02EC  3501               	lslf	1,w
  2505  02ED  075A               	addwf	Organize_Datas@RxData,w
  2506  02EE  00D6               	movwf	??_Organize_Datas+1
  2507  02EF  0A56               	incf	??_Organize_Datas+1,w
  2508  02F0  0086               	movwf	6
  2509  02F1  0187               	clrf	7
  2510  02F2  1481               	bsf	1,1
  2511  02F3                     l196:	
  2512                           
  2513                           ;Controller_Protocol.c: 30: OP[bus_number].count += 2;
  2514  02F3  0853               	movf	Organize_Datas@bus_number,w
  2515  02F4  00D5               	movwf	??_Organize_Datas
  2516  02F5  3001               	movlw	1
  2517  02F6                     u1125:	
  2518  02F6  35D5               	lslf	??_Organize_Datas,f
  2519  02F7  3EFF               	addlw	-1
  2520  02F8  1D03               	skipz
  2521  02F9  2AF6               	goto	u1125
  2522  02FA  3555               	lslf	??_Organize_Datas,w
  2523  02FB  3E02               	addlw	2
  2524  02FC  3E29               	addlw	(low (_OP| 0))& (0+255)
  2525  02FD  0086               	movwf	6
  2526  02FE  0187               	clrf	7
  2527  02FF  3002               	movlw	2
  2528  0300  0781               	addwf	1,f
  2529  0301  3141               	addfsr 1,1
  2530  0302  1803               	skipnc
  2531  0303  0A81               	incf	1,f
  2532  0304  0853               	movf	Organize_Datas@bus_number,w
  2533  0305  00D5               	movwf	??_Organize_Datas
  2534  0306  3001               	movlw	1
  2535  0307                     u1135:	
  2536  0307  35D5               	lslf	??_Organize_Datas,f
  2537  0308  3EFF               	addlw	-1
  2538  0309  1D03               	skipz
  2539  030A  2B07               	goto	u1135
  2540  030B  3555               	lslf	??_Organize_Datas,w
  2541  030C  3E29               	addlw	(low (_OP| 0))& (0+255)
  2542  030D  0086               	movwf	6
  2543  030E  0187               	clrf	7
  2544  030F  3001               	movlw	1
  2545  0310  0781               	addwf	1,f
  2546  0311  3141               	addfsr 1,1
  2547  0312  1803               	skipnc
  2548  0313  0A81               	incf	1,f
  2549  0314  29D8               	goto	l191
  2550  0315                     __end_of_Organize_Datas:	
  2551                           
  2552                           	psect	text8
  2553  0501                     __ptext8:	
  2554 ;; *************** function _Initialize *****************
  2555 ;; Defined at:
  2556 ;;		line 213 in file "main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, pclath, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    5
  2577 ;; This function calls:
  2578 ;;		_Oscillator_Initialize
  2579 ;;		_Pin_Initialize
  2580 ;;		_UART_Initialize
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _Initialize
  2588  0501                     _Initialize:	
  2589                           
  2590                           ;main.c: 214: Oscillator_Initialize();
  2591                           
  2592                           ;incstack = 0
  2593                           ; Regs used in _Initialize: [wreg+status,2+status,0+pclath+cstack]
  2594  0501  3185  2513  3185   	fcall	_Oscillator_Initialize
  2595                           
  2596                           ;main.c: 215: Pin_Initialize();
  2597  0504  3185  250A  3185   	fcall	_Pin_Initialize
  2598                           
  2599                           ;main.c: 216: UART_Initialize();
  2600  0507  3184  24E1         	fcall	_UART_Initialize
  2601  0509  0008               	return
  2602  050A                     __end_of_Initialize:	
  2603                           
  2604                           	psect	text9
  2605  04E1                     __ptext9:	
  2606 ;; *************** function _UART_Initialize *****************
  2607 ;; Defined at:
  2608 ;;		line 235 in file "main.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    4
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_Initialize
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           
  2637                           ;psect for function _UART_Initialize
  2638  04E1                     _UART_Initialize:	
  2639                           
  2640                           ;main.c: 237: PIE1bits.RCIE = 0;
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in _UART_Initialize: [wreg+status,2]
  2644  04E1  0021               	movlb	1	; select bank1
  2645  04E2  1291               	bcf	17,5	;volatile
  2646                           
  2647                           ;main.c: 240: SP1BRGH = 0x00;
  2648  04E3  0023               	movlb	3	; select bank3
  2649  04E4  019C               	clrf	28	;volatile
  2650                           
  2651                           ;main.c: 241: SP1BRGL = 0x8A;
  2652  04E5  308A               	movlw	138
  2653  04E6  009B               	movwf	27	;volatile
  2654                           
  2655                           ;main.c: 242: TX1STAbits.BRGH = 1;
  2656  04E7  151E               	bsf	30,2	;volatile
  2657                           
  2658                           ;main.c: 243: BAUD1CONbits.BRG16 = 1;
  2659  04E8  159F               	bsf	31,3	;volatile
  2660                           
  2661                           ;main.c: 246: RC1STAbits.SPEN = 1;
  2662  04E9  179D               	bsf	29,7	;volatile
  2663                           
  2664                           ;main.c: 247: TX1STAbits.SYNC = 0;
  2665  04EA  121E               	bcf	30,4	;volatile
  2666                           
  2667                           ;main.c: 250: INTCONbits.GIE = 1;
  2668  04EB  178B               	bsf	11,7	;volatile
  2669                           
  2670                           ;main.c: 251: INTCONbits.PEIE = 1;
  2671  04EC  170B               	bsf	11,6	;volatile
  2672                           
  2673                           ;main.c: 252: PIE1bits.RCIE = 1;
  2674  04ED  0021               	movlb	1	; select bank1
  2675  04EE  1691               	bsf	17,5	;volatile
  2676                           
  2677                           ;main.c: 255: RC1STAbits.CREN = 1;
  2678  04EF  0023               	movlb	3	; select bank3
  2679  04F0  161D               	bsf	29,4	;volatile
  2680  04F1  0008               	return
  2681  04F2                     __end_of_UART_Initialize:	
  2682                           
  2683                           	psect	text10
  2684  050A                     __ptext10:	
  2685 ;; *************** function _Pin_Initialize *****************
  2686 ;; Defined at:
  2687 ;;		line 225 in file "main.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      void 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    4
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_Initialize
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           
  2716                           ;psect for function _Pin_Initialize
  2717  050A                     _Pin_Initialize:	
  2718                           
  2719                           ;main.c: 226: ANSELA = 0x00;
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _Pin_Initialize: [wreg+status,2]
  2723  050A  0023               	movlb	3	; select bank3
  2724  050B  018C               	clrf	12	;volatile
  2725                           
  2726                           ;main.c: 228: TRISAbits.TRISA5 = 1;
  2727  050C  0021               	movlb	1	; select bank1
  2728  050D  168C               	bsf	12,5	;volatile
  2729                           
  2730                           ;main.c: 229: TRISC = 0x00;
  2731  050E  018E               	clrf	14	;volatile
  2732                           
  2733                           ;main.c: 232: RXPPS = 0x5;
  2734  050F  3005               	movlw	5
  2735  0510  003C               	movlb	28	; select bank28
  2736  0511  00A4               	movwf	36	;volatile
  2737  0512  0008               	return
  2738  0513                     __end_of_Pin_Initialize:	
  2739                           
  2740                           	psect	text11
  2741  0513                     __ptext11:	
  2742 ;; *************** function _Oscillator_Initialize *****************
  2743 ;; Defined at:
  2744 ;;		line 219 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    4
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_Initialize
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _Oscillator_Initialize
  2774  0513                     _Oscillator_Initialize:	
  2775                           
  2776                           ;main.c: 220: OSCCON1 = 0x60;
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _Oscillator_Initialize: [wreg]
  2780  0513  3060               	movlw	96
  2781  0514  0032               	movlb	18	; select bank18
  2782  0515  0099               	movwf	25	;volatile
  2783                           
  2784                           ;main.c: 221: OSCFRQ = 0x06;
  2785  0516  3006               	movlw	6
  2786  0517  009F               	movwf	31	;volatile
  2787  0518                     l119:	
  2788                           ;main.c: 222: while (PLLR == 0);
  2789                           
  2790  0518  181C               	btfsc	28,0	;volatile
  2791  0519  0008               	return
  2792  051A  2D18               	goto	l119
  2793  051B                     __end_of_Oscillator_Initialize:	
  2794                           
  2795                           	psect	intentry
  2796  0004                     __pintentry:	
  2797 ;; *************** function _INTERRUPT_HANDLER *****************
  2798 ;; Defined at:
  2799 ;;		line 207 in file "main.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    3
  2820 ;; This function calls:
  2821 ;;		_Reception_from_master
  2822 ;; This function is called by:
  2823 ;;		Interrupt level 1
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827  0004                     _INTERRUPT_HANDLER:	
  2828                           
  2829                           ;incstack = 0
  2830  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2831                           
  2832                           ; Regs used in _INTERRUPT_HANDLER: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2833  0005  3180               	pagesel	$
  2834                           
  2835                           ;main.c: 208: if (PIR1bits.RCIF) {
  2836  0006  0020               	movlb	0	; select bank0
  2837  0007  1E91               	btfss	17,5	;volatile
  2838  0008  280C               	goto	i1l113
  2839                           
  2840                           ;main.c: 209: Reception_from_master(0xC0);
  2841  0009  30C0               	movlw	192
  2842  000A  3183  23A5         	fcall	_Reception_from_master
  2843  000C                     i1l113:	
  2844                           ;main.c: 210: } else;
  2845                           
  2846  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2847  000D  0009               	retfie
  2848  000E                     __end_of_INTERRUPT_HANDLER:	
  2849                           
  2850                           	psect	text13
  2851  03A5                     __ptext13:	
  2852 ;; *************** function _Reception_from_master *****************
  2853 ;; Defined at:
  2854 ;;		line 36 in file "communication.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  slave_addres    1    wreg     unsigned char 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  slave_addres    1    6[BANK0 ] unsigned char 
  2859 ;;  error_comple    1    7[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;Total ram usage:        5 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    2
  2876 ;; This function calls:
  2877 ;;		_Store_Datas
  2878 ;;		_slave_address_check
  2879 ;; This function is called by:
  2880 ;;		_INTERRUPT_HANDLER
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _Reception_from_master
  2886  03A5                     _Reception_from_master:	
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _Reception_from_master: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2890                           ;Reception_from_master@slave_address stored from wreg
  2891  03A5  0020               	movlb	0	; select bank0
  2892  03A6  00CE               	movwf	Reception_from_master@slave_address
  2893                           
  2894                           ;communication.c: 37: static uint8_t Receive_data_count = 0;;communication.c: 38: uint8_
      +                          t error_complete = 0;
  2895  03A7  01CF               	clrf	Reception_from_master@error_complete
  2896                           
  2897                           ;communication.c: 53: error_complete = Store_Datas(Buffer0, RC1REG, 5 * 2 + 3, 0, EUSART
      +                          _ERROR_from_master);
  2898  03A8  0023               	movlb	3	; select bank3
  2899  03A9  0819               	movf	25,w	;volatile
  2900  03AA  00FA               	movwf	??_Reception_from_master
  2901  03AB  087A               	movf	??_Reception_from_master,w
  2902  03AC  00F2               	movwf	Store_Datas@received_data
  2903  03AD  300D               	movlw	13
  2904  03AE  00F3               	movwf	Store_Datas@number_of_receive_data
  2905  03AF  3000               	movlw	0
  2906  03B0  00F4               	movwf	Store_Datas@number_of_receive_data+1
  2907  03B1  3000               	movlw	0
  2908  03B2  00F5               	movwf	Store_Datas@bus_number
  2909  03B3  00F6               	movwf	Store_Datas@bus_number+1
  2910  03B4  30F2               	movlw	low _EUSART_ERROR_from_master
  2911  03B5  00F7               	movwf	Store_Datas@EUSART_ERROR
  2912  03B6  3004               	movlw	high _EUSART_ERROR_from_master
  2913  03B7  00F8               	movwf	Store_Datas@EUSART_ERROR+1
  2914  03B8  3031               	movlw	(low (_Buffer0| 0))& (0+255)
  2915  03B9  3180  202C  3183   	fcall	_Store_Datas
  2916  03BC  00FB               	movwf	??_Reception_from_master+1
  2917  03BD  087B               	movf	??_Reception_from_master+1,w
  2918  03BE  0020               	movlb	0	; select bank0
  2919  03BF  00CF               	movwf	Reception_from_master@error_complete
  2920                           
  2921                           ;communication.c: 56: if (error_complete == 1) {
  2922  03C0  034F               	decf	Reception_from_master@error_complete,w
  2923  03C1  1903               	btfsc	3,2
  2924  03C2  2BCB               	goto	i1l1228
  2925                           
  2926                           ;communication.c: 58: } else if ((error_complete == 2) && (Receive_data_count != (5 * 2 
      +                          + 3 - 1))) {
  2927                           
  2928                           ;communication.c: 57: Receive_data_count = 0;
  2929  03C3  3002               	movlw	2
  2930  03C4  064F               	xorwf	Reception_from_master@error_complete,w
  2931  03C5  1D03               	btfss	3,2
  2932  03C6  2BCD               	goto	i1l1230
  2933  03C7  300C               	movlw	12
  2934  03C8  062F               	xorwf	Reception_from_master@Receive_data_count,w
  2935  03C9  1903               	btfsc	3,2
  2936  03CA  2BCD               	goto	i1l1230
  2937  03CB                     i1l1228:	
  2938                           
  2939                           ;communication.c: 59: Receive_data_count = 0;
  2940  03CB  01AF               	clrf	Reception_from_master@Receive_data_count
  2941                           
  2942                           ;communication.c: 60: } else {
  2943  03CC  2BE1               	goto	i1l1234
  2944  03CD                     i1l1230:	
  2945                           
  2946                           ;communication.c: 61: slave_different_flag = slave_address_check(Receive_data_count, sla
      +                          ve_address, slave_different_flag);
  2947  03CD  084E               	movf	Reception_from_master@slave_address,w
  2948  03CE  00FA               	movwf	??_Reception_from_master
  2949  03CF  087A               	movf	??_Reception_from_master,w
  2950  03D0  00F0               	movwf	slave_address_check@slave_address
  2951  03D1  0863               	movf	_slave_different_flag,w
  2952  03D2  00FB               	movwf	??_Reception_from_master+1
  2953  03D3  087B               	movf	??_Reception_from_master+1,w
  2954  03D4  00F1               	movwf	slave_address_check@slave_flag
  2955  03D5  082F               	movf	Reception_from_master@Receive_data_count,w
  2956  03D6  3184  249D  3183   	fcall	_slave_address_check
  2957  03D9  00FC               	movwf	??_Reception_from_master+2
  2958  03DA  087C               	movf	??_Reception_from_master+2,w
  2959  03DB  0020               	movlb	0	; select bank0
  2960  03DC  00E3               	movwf	_slave_different_flag
  2961                           
  2962                           ;communication.c: 62: Receive_data_count++;
  2963  03DD  3001               	movlw	1
  2964  03DE  00FA               	movwf	??_Reception_from_master
  2965  03DF  087A               	movf	??_Reception_from_master,w
  2966  03E0  07AF               	addwf	Reception_from_master@Receive_data_count,f
  2967  03E1                     i1l1234:	
  2968                           
  2969                           ;communication.c: 63: };communication.c: 65: if ((error_complete == 2) && (Receive_data_
      +                          count == 5 * 2 + 3)) {
  2970  03E1  3002               	movlw	2
  2971  03E2  064F               	xorwf	Reception_from_master@error_complete,w
  2972  03E3  1D03               	btfss	3,2
  2973  03E4  0008               	return
  2974  03E5  300D               	movlw	13
  2975  03E6  062F               	xorwf	Reception_from_master@Receive_data_count,w
  2976  03E7  1D03               	btfss	3,2
  2977  03E8  0008               	return
  2978                           
  2979                           ;communication.c: 66: Receive_flag = 0;
  2980  03E9  01E4               	clrf	_Receive_flag
  2981                           
  2982                           ;communication.c: 67: Receive_data_count = 0;
  2983  03EA  01AF               	clrf	Reception_from_master@Receive_data_count
  2984  03EB  0008               	return
  2985  03EC                     __end_of_Reception_from_master:	
  2986                           
  2987                           	psect	text14
  2988  049D                     __ptext14:	
  2989 ;; *************** function _slave_address_check *****************
  2990 ;; Defined at:
  2991 ;;		line 74 in file "communication.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  data_count      1    wreg     unsigned char 
  2994 ;;  slave_addres    1    0[COMMON] unsigned char 
  2995 ;;  slave_flag      1    1[COMMON] unsigned char 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;  data_count      1    5[COMMON] unsigned char 
  2998 ;;  sample_data     1    6[COMMON] unsigned char 
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1    wreg      unsigned char 
  3001 ;; Registers used:
  3002 ;;		wreg, status,2, status,0
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/0
  3005 ;;		On exit  : 0/0
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;Total ram usage:        7 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_Reception_from_master
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _slave_address_check
  3023  049D                     _slave_address_check:	
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _slave_address_check: [wreg+status,2+status,0]
  3027                           ;slave_address_check@data_count stored from wreg
  3028  049D  00F5               	movwf	slave_address_check@data_count
  3029                           
  3030                           ;communication.c: 75: if (slave_flag == 2) {
  3031  049E  3002               	movlw	2
  3032  049F  0671               	xorwf	slave_address_check@slave_flag,w
  3033  04A0  1D03               	btfss	3,2
  3034  04A1  2CBF               	goto	i1l1196
  3035                           
  3036                           ;communication.c: 76: if (data_count == 4) {
  3037  04A2  3004               	movlw	4
  3038  04A3  0675               	xorwf	slave_address_check@data_count,w
  3039  04A4  1D03               	btfss	3,2
  3040  04A5  2CBD               	goto	i1l1190
  3041                           
  3042                           ;communication.c: 77: uint8_t sample_data = (Buffer0[1].upper_data << 4) | Buffer0[2].up
      +                          per_data;
  3043  04A6  0020               	movlb	0	; select bank0
  3044  04A7  0E33               	swapf	_Buffer0+2,w
  3045  04A8  390F               	andlw	15
  3046  04A9  00F2               	movwf	??_slave_address_check
  3047  04AA  0E32               	swapf	_Buffer0+1,w
  3048  04AB  390F               	andlw	15
  3049  04AC  00F3               	movwf	??_slave_address_check+1
  3050  04AD  3003               	movlw	3
  3051  04AE                     u155_25:	
  3052  04AE  35F3               	lslf	??_slave_address_check+1,f
  3053  04AF  3EFF               	addlw	-1
  3054  04B0  1D03               	skipz
  3055  04B1  2CAE               	goto	u155_25
  3056  04B2  3573               	lslf	??_slave_address_check+1,w
  3057  04B3  0472               	iorwf	??_slave_address_check,w
  3058  04B4  00F4               	movwf	??_slave_address_check+2
  3059  04B5  0874               	movf	??_slave_address_check+2,w
  3060  04B6  00F6               	movwf	slave_address_check@sample_data
  3061                           
  3062                           ;communication.c: 79: if (sample_data == slave_address) {
  3063  04B7  0876               	movf	slave_address_check@sample_data,w
  3064  04B8  0670               	xorwf	slave_address_check@slave_address,w
  3065  04B9  1D03               	skipz
  3066  04BA  2CBD               	goto	i1l1190
  3067                           
  3068                           ;communication.c: 80: return 1;
  3069  04BB  3001               	movlw	1
  3070  04BC  0008               	return
  3071  04BD                     i1l1190:	
  3072                           
  3073                           ;communication.c: 81: };communication.c: 82: };communication.c: 83: return 2;
  3074  04BD  3002               	movlw	2
  3075                           
  3076                           ;communication.c: 84: } else {
  3077  04BE  0008               	return
  3078  04BF                     i1l1196:	
  3079                           
  3080                           ;communication.c: 86: return slave_flag;
  3081  04BF  0871               	movf	slave_address_check@slave_flag,w
  3082  04C0  0008               	return
  3083  04C1                     __end_of_slave_address_check:	
  3084                           
  3085                           	psect	text15
  3086  002C                     __ptext15:	
  3087 ;; *************** function _Store_Datas *****************
  3088 ;; Defined at:
  3089 ;;		line 34 in file "Controller_Protocol.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  Buffer          1    wreg     PTR struct .
  3092 ;;		 -> Buffer0(13), 
  3093 ;;  received_dat    1    2[COMMON] unsigned char 
  3094 ;;  number_of_re    2    3[COMMON] int 
  3095 ;;  bus_number      2    5[COMMON] int 
  3096 ;;  EUSART_ERROR    2    7[COMMON] PTR FTN()unsigned char 
  3097 ;;		 -> EUSART_ERROR_from_master(1), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  Buffer          1    9[COMMON] PTR struct .
  3100 ;;		 -> Buffer0(13), 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      unsigned char 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3110 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;Total ram usage:       14 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    1
  3117 ;; This function calls:
  3118 ;;		_EUSART_ERROR_from_master
  3119 ;; This function is called by:
  3120 ;;		_Reception_from_master
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _Store_Datas
  3126  002C                     _Store_Datas:	
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _Store_Datas: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3130                           ;Store_Datas@Buffer stored from wreg
  3131  002C  00F9               	movwf	Store_Datas@Buffer
  3132                           
  3133                           ;Controller_Protocol.c: 35: if (EUSART_ERROR() == 1) {
  3134  002D  0878               	movf	Store_Datas@EUSART_ERROR+1,w
  3135  002E  008A               	movwf	10
  3136  002F  0877               	movf	Store_Datas@EUSART_ERROR,w
  3137  0030  000A               	callw
  3138  0031  3180               	pagesel	$
  3139  0032  3A01               	xorlw	1
  3140  0033  1D03               	skipz
  3141  0034  2860               	goto	i1l1136
  3142                           
  3143                           ;Controller_Protocol.c: 36: StP[bus_number].S_flag = 0;
  3144  0035  0875               	movf	Store_Datas@bus_number,w
  3145  0036  0020               	movlb	0	; select bank0
  3146  0037  00C8               	movwf	??_Store_Datas
  3147  0038  3001               	movlw	1
  3148  0039                     u124_25:	
  3149  0039  35C8               	lslf	??_Store_Datas,f
  3150  003A  3EFF               	addlw	-1
  3151  003B  1D03               	skipz
  3152  003C  2839               	goto	u124_25
  3153  003D  3548               	lslf	??_Store_Datas,w
  3154  003E  3E03               	addlw	3
  3155  003F  3E25               	addlw	(low (_StP| 0))& (0+255)
  3156  0040  0086               	movwf	6
  3157  0041  0187               	clrf	7
  3158  0042  0181               	clrf	1
  3159                           
  3160                           ;Controller_Protocol.c: 37: StP[bus_number].Buffer_count = 0;
  3161  0043  0875               	movf	Store_Datas@bus_number,w
  3162  0044  00C8               	movwf	??_Store_Datas
  3163  0045  3001               	movlw	1
  3164  0046                     u125_25:	
  3165  0046  35C8               	lslf	??_Store_Datas,f
  3166  0047  3EFF               	addlw	-1
  3167  0048  1D03               	skipz
  3168  0049  2846               	goto	u125_25
  3169  004A  3548               	lslf	??_Store_Datas,w
  3170  004B  3E25               	addlw	(low (_StP| 0))& (0+255)
  3171  004C  0086               	movwf	6
  3172  004D  0187               	clrf	7
  3173  004E  3000               	movlw	0
  3174  004F  3FC0               	movwi [0]fsr1
  3175  0050  3FC1               	movwi [1]fsr1
  3176                           
  3177                           ;Controller_Protocol.c: 38: StP[bus_number].Start_signal_has_come = 0;
  3178  0051  0875               	movf	Store_Datas@bus_number,w
  3179  0052  00C8               	movwf	??_Store_Datas
  3180  0053  3001               	movlw	1
  3181  0054                     u126_25:	
  3182  0054  35C8               	lslf	??_Store_Datas,f
  3183  0055  3EFF               	addlw	-1
  3184  0056  1D03               	skipz
  3185  0057  2854               	goto	u126_25
  3186  0058  3548               	lslf	??_Store_Datas,w
  3187  0059  3E02               	addlw	2
  3188  005A  3E25               	addlw	(low (_StP| 0))& (0+255)
  3189  005B  0086               	movwf	6
  3190  005C  0187               	clrf	7
  3191  005D  0181               	clrf	1
  3192                           
  3193                           ;Controller_Protocol.c: 39: return 1;
  3194  005E  3001               	movlw	1
  3195                           
  3196                           ;Controller_Protocol.c: 40: } else {
  3197  005F  0008               	return
  3198  0060                     i1l1136:	
  3199                           
  3200                           ;Controller_Protocol.c: 41: if (StP[bus_number].Start_signal_has_come == 0) {
  3201  0060  0875               	movf	Store_Datas@bus_number,w
  3202  0061  0020               	movlb	0	; select bank0
  3203  0062  00C8               	movwf	??_Store_Datas
  3204  0063  3001               	movlw	1
  3205  0064                     u127_25:	
  3206  0064  35C8               	lslf	??_Store_Datas,f
  3207  0065  3EFF               	addlw	-1
  3208  0066  1D03               	skipz
  3209  0067  2864               	goto	u127_25
  3210  0068  3548               	lslf	??_Store_Datas,w
  3211  0069  3E02               	addlw	2
  3212  006A  3E25               	addlw	(low (_StP| 0))& (0+255)
  3213  006B  0086               	movwf	6
  3214  006C  0187               	clrf	7
  3215  006D  0801               	movf	1,w
  3216  006E  1D03               	btfss	3,2
  3217  006F  28CD               	goto	i1l1152
  3218                           
  3219                           ;Controller_Protocol.c: 42: Buffer[StP[bus_number].S_flag].all_data = received_data;
  3220  0070  0872               	movf	Store_Datas@received_data,w
  3221  0071  00C8               	movwf	??_Store_Datas
  3222  0072  0875               	movf	Store_Datas@bus_number,w
  3223  0073  00C9               	movwf	??_Store_Datas+1
  3224  0074  3001               	movlw	1
  3225  0075                     u129_25:	
  3226  0075  35C9               	lslf	??_Store_Datas+1,f
  3227  0076  3EFF               	addlw	-1
  3228  0077  1D03               	skipz
  3229  0078  2875               	goto	u129_25
  3230  0079  3549               	lslf	??_Store_Datas+1,w
  3231  007A  3E03               	addlw	3
  3232  007B  3E25               	addlw	(low (_StP| 0))& (0+255)
  3233  007C  0086               	movwf	6
  3234  007D  0187               	clrf	7
  3235  007E  0801               	movf	1,w
  3236  007F  0779               	addwf	Store_Datas@Buffer,w
  3237  0080  00CA               	movwf	??_Store_Datas+2
  3238  0081  084A               	movf	??_Store_Datas+2,w
  3239  0082  0086               	movwf	6
  3240  0083  0187               	clrf	7
  3241  0084  0848               	movf	??_Store_Datas,w
  3242  0085  0081               	movwf	1
  3243                           
  3244                           ;Controller_Protocol.c: 43: if (StP[bus_number].S_flag == 1) {
  3245  0086  0875               	movf	Store_Datas@bus_number,w
  3246  0087  00C8               	movwf	??_Store_Datas
  3247  0088  3001               	movlw	1
  3248  0089                     u130_25:	
  3249  0089  35C8               	lslf	??_Store_Datas,f
  3250  008A  3EFF               	addlw	-1
  3251  008B  1D03               	skipz
  3252  008C  2889               	goto	u130_25
  3253  008D  3548               	lslf	??_Store_Datas,w
  3254  008E  3E03               	addlw	3
  3255  008F  3E25               	addlw	(low (_StP| 0))& (0+255)
  3256  0090  0086               	movwf	6
  3257  0091  0187               	clrf	7
  3258  0092  0301               	decf	1,w
  3259  0093  1D03               	btfss	3,2
  3260  0094  28B5               	goto	i1l1144
  3261                           
  3262                           ;Controller_Protocol.c: 44: if (Buffer[1].lower_data == 5) StP[bus_number].Start_signal_
      +                          has_come = 1;
  3263  0095  0A79               	incf	Store_Datas@Buffer,w
  3264  0096  0086               	movwf	6
  3265  0097  0187               	clrf	7
  3266  0098  0801               	movf	1,w
  3267  0099  390F               	andlw	15
  3268  009A  3A05               	xorlw	5
  3269  009B  1D03               	skipz
  3270  009C  28AB               	goto	i1l206
  3271  009D  0875               	movf	Store_Datas@bus_number,w
  3272  009E  00C8               	movwf	??_Store_Datas
  3273  009F  3001               	movlw	1
  3274  00A0                     u133_25:	
  3275  00A0  35C8               	lslf	??_Store_Datas,f
  3276  00A1  3EFF               	addlw	-1
  3277  00A2  1D03               	skipz
  3278  00A3  28A0               	goto	u133_25
  3279  00A4  3548               	lslf	??_Store_Datas,w
  3280  00A5  3E02               	addlw	2
  3281  00A6  3E25               	addlw	(low (_StP| 0))& (0+255)
  3282  00A7  0086               	movwf	6
  3283  00A8  0187               	clrf	7
  3284  00A9  0181               	clrf	1
  3285  00AA  0A81               	incf	1,f
  3286  00AB                     i1l206:	
  3287                           
  3288                           ;Controller_Protocol.c: 45: StP[bus_number].S_flag = 0;
  3289  00AB  0875               	movf	Store_Datas@bus_number,w
  3290  00AC  00C8               	movwf	??_Store_Datas
  3291  00AD  3001               	movlw	1
  3292  00AE                     u134_25:	
  3293  00AE  35C8               	lslf	??_Store_Datas,f
  3294  00AF  3EFF               	addlw	-1
  3295  00B0  1D03               	skipz
  3296  00B1  28AE               	goto	u134_25
  3297  00B2  3548               	lslf	??_Store_Datas,w
  3298  00B3  3E03               	addlw	3
  3299  00B4  29B2               	goto	L2
  3300  00B5                     i1l1144:	
  3301                           ;Controller_Protocol.c: 46: } else if (Buffer[0].all_data == 'S') {
  3302                           
  3303  00B5  0879               	movf	Store_Datas@Buffer,w
  3304  00B6  0086               	movwf	6
  3305  00B7  0187               	clrf	7
  3306  00B8  3053               	movlw	83
  3307  00B9  0601               	xorwf	1,w
  3308  00BA  1D03               	btfss	3,2
  3309  00BB  28CB               	goto	i1l1148
  3310                           
  3311                           ;Controller_Protocol.c: 47: StP[bus_number].S_flag = 1;
  3312  00BC  0875               	movf	Store_Datas@bus_number,w
  3313  00BD  00C8               	movwf	??_Store_Datas
  3314  00BE  3001               	movlw	1
  3315  00BF                     u136_25:	
  3316  00BF  35C8               	lslf	??_Store_Datas,f
  3317  00C0  3EFF               	addlw	-1
  3318  00C1  1D03               	skipz
  3319  00C2  28BF               	goto	u136_25
  3320  00C3  3548               	lslf	??_Store_Datas,w
  3321  00C4  3E03               	addlw	3
  3322  00C5  3E25               	addlw	(low (_StP| 0))& (0+255)
  3323  00C6  0086               	movwf	6
  3324  00C7  0187               	clrf	7
  3325  00C8  0181               	clrf	1
  3326  00C9  0A81               	incf	1,f
  3327                           
  3328                           ;Controller_Protocol.c: 48: }else return 1;
  3329  00CA  29B6               	goto	i1l1174
  3330  00CB                     i1l1148:	
  3331  00CB  3001               	movlw	1
  3332  00CC  0008               	return
  3333  00CD                     i1l1152:	
  3334                           ;Controller_Protocol.c: 49: } else {
  3335                           
  3336                           
  3337                           ;Controller_Protocol.c: 50: StP[bus_number].Buffer_count++;
  3338  00CD  0875               	movf	Store_Datas@bus_number,w
  3339  00CE  00C8               	movwf	??_Store_Datas
  3340  00CF  3001               	movlw	1
  3341  00D0                     u137_25:	
  3342  00D0  35C8               	lslf	??_Store_Datas,f
  3343  00D1  3EFF               	addlw	-1
  3344  00D2  1D03               	skipz
  3345  00D3  28D0               	goto	u137_25
  3346  00D4  3548               	lslf	??_Store_Datas,w
  3347  00D5  3E25               	addlw	(low (_StP| 0))& (0+255)
  3348  00D6  0086               	movwf	6
  3349  00D7  0187               	clrf	7
  3350  00D8  3001               	movlw	1
  3351  00D9  0781               	addwf	1,f
  3352  00DA  3141               	addfsr 1,1
  3353  00DB  1803               	skipnc
  3354  00DC  0A81               	incf	1,f
  3355                           
  3356                           ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count > number_of_receive_data - 1
      +                          ){
  3357  00DD  0875               	movf	Store_Datas@bus_number,w
  3358  00DE  00C8               	movwf	??_Store_Datas
  3359  00DF  3001               	movlw	1
  3360  00E0                     u138_25:	
  3361  00E0  35C8               	lslf	??_Store_Datas,f
  3362  00E1  3EFF               	addlw	-1
  3363  00E2  1D03               	skipz
  3364  00E3  28E0               	goto	u138_25
  3365  00E4  3548               	lslf	??_Store_Datas,w
  3366  00E5  3E25               	addlw	(low (_StP| 0))& (0+255)
  3367  00E6  0086               	movwf	6
  3368  00E7  0187               	clrf	7
  3369  00E8  3F40               	moviw [0]fsr1
  3370  00E9  00C9               	movwf	??_Store_Datas+1
  3371  00EA  3F41               	moviw [1]fsr1
  3372  00EB  00CA               	movwf	??_Store_Datas+2
  3373  00EC  0873               	movf	Store_Datas@number_of_receive_data,w
  3374  00ED  3EFF               	addlw	255
  3375  00EE  00CB               	movwf	??_Store_Datas+3
  3376  00EF  30FF               	movlw	255
  3377  00F0  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3378  00F1  00CC               	movwf	??_Store_Datas+4
  3379  00F2  084C               	movf	??_Store_Datas+4,w
  3380  00F3  3A80               	xorlw	128
  3381  00F4  00CD               	movwf	??_Store_Datas+5
  3382  00F5  084A               	movf	??_Store_Datas+2,w
  3383  00F6  3A80               	xorlw	128
  3384  00F7  024D               	subwf	??_Store_Datas+5,w
  3385  00F8  1D03               	skipz
  3386  00F9  28FC               	goto	u139_25
  3387  00FA  0849               	movf	??_Store_Datas+1,w
  3388  00FB  024B               	subwf	??_Store_Datas+3,w
  3389  00FC                     u139_25:	
  3390  00FC  1803               	skipnc
  3391  00FD  291D               	goto	i1l1160
  3392                           
  3393                           ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
  3394  00FE  0875               	movf	Store_Datas@bus_number,w
  3395  00FF  0020               	movlb	0	; select bank0
  3396  0100  00C8               	movwf	??_Store_Datas
  3397  0101  3001               	movlw	1
  3398  0102                     u140_25:	
  3399  0102  35C8               	lslf	??_Store_Datas,f
  3400  0103  3EFF               	addlw	-1
  3401  0104  1D03               	skipz
  3402  0105  2902               	goto	u140_25
  3403  0106  3548               	lslf	??_Store_Datas,w
  3404  0107  3E25               	addlw	(low (_StP| 0))& (0+255)
  3405  0108  0086               	movwf	6
  3406  0109  0187               	clrf	7
  3407  010A  3001               	movlw	1
  3408  010B  3FC0               	movwi [0]fsr1
  3409  010C  3000               	movlw	0
  3410  010D  3FC1               	movwi [1]fsr1
  3411                           
  3412                           ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
  3413  010E  0875               	movf	Store_Datas@bus_number,w
  3414  010F  00C8               	movwf	??_Store_Datas
  3415  0110  3001               	movlw	1
  3416  0111                     u141_25:	
  3417  0111  35C8               	lslf	??_Store_Datas,f
  3418  0112  3EFF               	addlw	-1
  3419  0113  1D03               	skipz
  3420  0114  2911               	goto	u141_25
  3421  0115  3548               	lslf	??_Store_Datas,w
  3422  0116  3E02               	addlw	2
  3423  0117  3E25               	addlw	(low (_StP| 0))& (0+255)
  3424  0118  0086               	movwf	6
  3425  0119  0187               	clrf	7
  3426  011A  0181               	clrf	1
  3427                           
  3428                           ;Controller_Protocol.c: 55: return 1;
  3429  011B  3001               	movlw	1
  3430  011C  0008               	return
  3431  011D                     i1l1160:	
  3432                           
  3433                           ;Controller_Protocol.c: 56: };Controller_Protocol.c: 58: Buffer[StP[bus_number].Buffer_c
      +                          ount].all_data = received_data;
  3434  011D  0872               	movf	Store_Datas@received_data,w
  3435  011E  0020               	movlb	0	; select bank0
  3436  011F  00C8               	movwf	??_Store_Datas
  3437  0120  0875               	movf	Store_Datas@bus_number,w
  3438  0121  00C9               	movwf	??_Store_Datas+1
  3439  0122  3001               	movlw	1
  3440  0123                     u142_25:	
  3441  0123  35C9               	lslf	??_Store_Datas+1,f
  3442  0124  3EFF               	addlw	-1
  3443  0125  1D03               	skipz
  3444  0126  2923               	goto	u142_25
  3445  0127  3549               	lslf	??_Store_Datas+1,w
  3446  0128  3E25               	addlw	(low (_StP| 0))& (0+255)
  3447  0129  0086               	movwf	6
  3448  012A  0187               	clrf	7
  3449  012B  0801               	movf	1,w
  3450  012C  0779               	addwf	Store_Datas@Buffer,w
  3451  012D  00CA               	movwf	??_Store_Datas+2
  3452  012E  084A               	movf	??_Store_Datas+2,w
  3453  012F  0086               	movwf	6
  3454  0130  0187               	clrf	7
  3455  0131  0848               	movf	??_Store_Datas,w
  3456  0132  0081               	movwf	1
  3457                           
  3458                           ;Controller_Protocol.c: 59: if (Buffer[StP[bus_number].Buffer_count].all_data == 'C') {
  3459  0133  0875               	movf	Store_Datas@bus_number,w
  3460  0134  00C8               	movwf	??_Store_Datas
  3461  0135  3001               	movlw	1
  3462  0136                     u143_25:	
  3463  0136  35C8               	lslf	??_Store_Datas,f
  3464  0137  3EFF               	addlw	-1
  3465  0138  1D03               	skipz
  3466  0139  2936               	goto	u143_25
  3467  013A  3548               	lslf	??_Store_Datas,w
  3468  013B  3E25               	addlw	(low (_StP| 0))& (0+255)
  3469  013C  0086               	movwf	6
  3470  013D  0187               	clrf	7
  3471  013E  0801               	movf	1,w
  3472  013F  0779               	addwf	Store_Datas@Buffer,w
  3473  0140  00C9               	movwf	??_Store_Datas+1
  3474  0141  0849               	movf	??_Store_Datas+1,w
  3475  0142  0086               	movwf	6
  3476  0143  0187               	clrf	7
  3477  0144  3043               	movlw	67
  3478  0145  0601               	xorwf	1,w
  3479  0146  1D03               	btfss	3,2
  3480  0147  297D               	goto	i1l1170
  3481                           
  3482                           ;Controller_Protocol.c: 61: if (Buffer[StP[bus_number].Buffer_count - 1].upper_data == 3
      +                          ) {
  3483  0148  0875               	movf	Store_Datas@bus_number,w
  3484  0149  00C8               	movwf	??_Store_Datas
  3485  014A  3001               	movlw	1
  3486  014B                     u145_25:	
  3487  014B  35C8               	lslf	??_Store_Datas,f
  3488  014C  3EFF               	addlw	-1
  3489  014D  1D03               	skipz
  3490  014E  294B               	goto	u145_25
  3491  014F  3548               	lslf	??_Store_Datas,w
  3492  0150  3E25               	addlw	(low (_StP| 0))& (0+255)
  3493  0151  0086               	movwf	6
  3494  0152  0187               	clrf	7
  3495  0153  0801               	movf	1,w
  3496  0154  3EFF               	addlw	-1
  3497  0155  0779               	addwf	Store_Datas@Buffer,w
  3498  0156  00C9               	movwf	??_Store_Datas+1
  3499  0157  0849               	movf	??_Store_Datas+1,w
  3500  0158  0086               	movwf	6
  3501  0159  0187               	clrf	7
  3502  015A  0E01               	swapf	1,w
  3503  015B  390F               	andlw	15
  3504  015C  3A03               	xorlw	3
  3505  015D  1D03               	skipz
  3506  015E  297D               	goto	i1l1170
  3507                           
  3508                           ;Controller_Protocol.c: 62: StP[bus_number].Buffer_count = 1;
  3509  015F  0875               	movf	Store_Datas@bus_number,w
  3510  0160  00C8               	movwf	??_Store_Datas
  3511  0161  3001               	movlw	1
  3512  0162                     u147_25:	
  3513  0162  35C8               	lslf	??_Store_Datas,f
  3514  0163  3EFF               	addlw	-1
  3515  0164  1D03               	skipz
  3516  0165  2962               	goto	u147_25
  3517  0166  3548               	lslf	??_Store_Datas,w
  3518  0167  3E25               	addlw	(low (_StP| 0))& (0+255)
  3519  0168  0086               	movwf	6
  3520  0169  0187               	clrf	7
  3521  016A  3001               	movlw	1
  3522  016B  3FC0               	movwi [0]fsr1
  3523  016C  3000               	movlw	0
  3524  016D  3FC1               	movwi [1]fsr1
  3525                           
  3526                           ;Controller_Protocol.c: 63: StP[bus_number].Start_signal_has_come = 0;
  3527  016E  0875               	movf	Store_Datas@bus_number,w
  3528  016F  00C8               	movwf	??_Store_Datas
  3529  0170  3001               	movlw	1
  3530  0171                     u148_25:	
  3531  0171  35C8               	lslf	??_Store_Datas,f
  3532  0172  3EFF               	addlw	-1
  3533  0173  1D03               	skipz
  3534  0174  2971               	goto	u148_25
  3535  0175  3548               	lslf	??_Store_Datas,w
  3536  0176  3E02               	addlw	2
  3537  0177  3E25               	addlw	(low (_StP| 0))& (0+255)
  3538  0178  0086               	movwf	6
  3539  0179  0187               	clrf	7
  3540  017A  0181               	clrf	1
  3541                           
  3542                           ;Controller_Protocol.c: 64: return 2;
  3543  017B  3002               	movlw	2
  3544  017C  0008               	return
  3545  017D                     i1l1170:	
  3546                           
  3547                           ;Controller_Protocol.c: 65: };Controller_Protocol.c: 66: };Controller_Protocol.c: 67: if
      +                           (StP[bus_number].Buffer_count == number_of_receive_data - 1) {
  3548  017D  0875               	movf	Store_Datas@bus_number,w
  3549  017E  00C8               	movwf	??_Store_Datas
  3550  017F  3001               	movlw	1
  3551  0180                     u149_25:	
  3552  0180  35C8               	lslf	??_Store_Datas,f
  3553  0181  3EFF               	addlw	-1
  3554  0182  1D03               	skipz
  3555  0183  2980               	goto	u149_25
  3556  0184  3548               	lslf	??_Store_Datas,w
  3557  0185  3E25               	addlw	(low (_StP| 0))& (0+255)
  3558  0186  0086               	movwf	6
  3559  0187  0187               	clrf	7
  3560  0188  3F40               	moviw [0]fsr1
  3561  0189  00C9               	movwf	??_Store_Datas+1
  3562  018A  3F41               	moviw [1]fsr1
  3563  018B  00CA               	movwf	??_Store_Datas+2
  3564  018C  0873               	movf	Store_Datas@number_of_receive_data,w
  3565  018D  3EFF               	addlw	255
  3566  018E  00CB               	movwf	??_Store_Datas+3
  3567  018F  30FF               	movlw	255
  3568  0190  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3569  0191  00CC               	movwf	??_Store_Datas+4
  3570  0192  084A               	movf	??_Store_Datas+2,w
  3571  0193  064C               	xorwf	??_Store_Datas+4,w
  3572  0194  1D03               	skipz
  3573  0195  2998               	goto	u150_25
  3574  0196  0849               	movf	??_Store_Datas+1,w
  3575  0197  064B               	xorwf	??_Store_Datas+3,w
  3576  0198                     u150_25:	
  3577  0198  1D03               	skipz
  3578  0199  29B6               	goto	i1l1174
  3579                           
  3580                           ;Controller_Protocol.c: 68: StP[bus_number].Buffer_count = 1;
  3581  019A  0875               	movf	Store_Datas@bus_number,w
  3582  019B  00C8               	movwf	??_Store_Datas
  3583  019C  3001               	movlw	1
  3584  019D                     u151_25:	
  3585  019D  35C8               	lslf	??_Store_Datas,f
  3586  019E  3EFF               	addlw	-1
  3587  019F  1D03               	skipz
  3588  01A0  299D               	goto	u151_25
  3589  01A1  3548               	lslf	??_Store_Datas,w
  3590  01A2  3E25               	addlw	(low (_StP| 0))& (0+255)
  3591  01A3  0086               	movwf	6
  3592  01A4  0187               	clrf	7
  3593  01A5  3001               	movlw	1
  3594  01A6  3FC0               	movwi [0]fsr1
  3595  01A7  3000               	movlw	0
  3596  01A8  3FC1               	movwi [1]fsr1
  3597                           
  3598                           ;Controller_Protocol.c: 69: StP[bus_number].Start_signal_has_come = 0;
  3599  01A9  0875               	movf	Store_Datas@bus_number,w
  3600  01AA  00C8               	movwf	??_Store_Datas
  3601  01AB  3001               	movlw	1
  3602  01AC                     u152_25:	
  3603  01AC  35C8               	lslf	??_Store_Datas,f
  3604  01AD  3EFF               	addlw	-1
  3605  01AE  1D03               	skipz
  3606  01AF  29AC               	goto	u152_25
  3607  01B0  3548               	lslf	??_Store_Datas,w
  3608  01B1  3E02               	addlw	2
  3609  01B2                     L2:	
  3610  01B2  3E25               	addlw	(low (_StP| 0))& (0+255)
  3611  01B3  0086               	movwf	6
  3612  01B4  0187               	clrf	7
  3613  01B5  0181               	clrf	1
  3614  01B6                     i1l1174:	
  3615                           
  3616                           ;Controller_Protocol.c: 70: };Controller_Protocol.c: 71: };Controller_Protocol.c: 73: re
      +                          turn 0;
  3617  01B6  3000               	movlw	0
  3618  01B7  0008               	return
  3619  01B8                     __end_of_Store_Datas:	
  3620                           
  3621                           	psect	text16
  3622  04F2                     __ptext16:	
  3623 ;; *************** function _EUSART_ERROR_from_master *****************
  3624 ;; Defined at:
  3625 ;;		line 24 in file "communication.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  waste_data      1    1[COMMON] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;Total ram usage:        2 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_Reception_from_master
  3649 ;;		_Store_Datas
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _EUSART_ERROR_from_master
  3655  04F2                     _EUSART_ERROR_from_master:	
  3656                           
  3657                           ;communication.c: 25: if ((RC1STAbits.FERR == 1) || (RC1STAbits.OERR == 1)) {
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _EUSART_ERROR_from_master: [wreg]
  3661  04F2  0023               	movlb	3	; select bank3
  3662  04F3  191D               	btfsc	29,2	;volatile
  3663  04F4  2CF7               	goto	i1l1040
  3664  04F5  1C9D               	btfss	29,1	;volatile
  3665  04F6  2CFF               	goto	i1l1048
  3666  04F7                     i1l1040:	
  3667                           
  3668                           ;communication.c: 27: uint8_t waste_data = RC1REG;
  3669  04F7  0819               	movf	25,w	;volatile
  3670  04F8  00F0               	movwf	??_EUSART_ERROR_from_master
  3671  04F9  0870               	movf	??_EUSART_ERROR_from_master,w
  3672  04FA  00F1               	movwf	EUSART_ERROR_from_master@waste_data
  3673                           
  3674                           ;communication.c: 29: RC1STAbits.CREN = 0;
  3675  04FB  121D               	bcf	29,4	;volatile
  3676                           
  3677                           ;communication.c: 30: RC1STAbits.CREN = 1;
  3678  04FC  161D               	bsf	29,4	;volatile
  3679                           
  3680                           ;communication.c: 31: return 1;
  3681  04FD  3001               	movlw	1
  3682  04FE  0008               	return
  3683  04FF                     i1l1048:	
  3684                           
  3685                           ;communication.c: 32: };communication.c: 33: return 0;
  3686  04FF  3000               	movlw	0
  3687  0500  0008               	return
  3688  0501                     __end_of_EUSART_ERROR_from_master:	
  3689  007E                     btemp	set	126	;btemp
  3690  007E                     int$flags	set	126
  3691  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     25      69
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Store_Datas@Buffer	PTR struct . size(1) Largest target is 13
		 -> Buffer0(BANK0[13]), 

    Store_Datas@EUSART_ERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_ERROR_from_master(), 

    Organize_Datas@Buffer	PTR struct . size(1) Largest target is 13
		 -> Buffer0(BANK0[13]), 

    Organize_Datas@RxData	PTR struct . size(1) Largest target is 10
		 -> RxData0(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas
    _Store_Datas->_EUSART_ERROR_from_master

Critical Paths under _main in BANK0

    _main->_Reception_from_master_main
    _SetData->_ChangeAddress
    _ChangeData->_Write_data
    _ChangeAddress->_Write_Address
    _Reception_from_master_main->_Organize_Datas

Critical Paths under _INTERRUPT_HANDLER in BANK0

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4    2578
                                             20 BANK0      5     1      4
                         _Initialize
                     _Organize_Datas
         _Reception_from_master_main
                            _SetData
 ---------------------------------------------------------------------------------
 (1) _SetData                                              0     0      0     370
                      _ChangeAddress
                         _ChangeData
 ---------------------------------------------------------------------------------
 (2) _ChangeData                                           0     0      0     176
                         _Write_data
 ---------------------------------------------------------------------------------
 (3) _Write_data                                           3     3      0     176
                                              8 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ChangeAddress                                        1     1      0     194
                                             13 BANK0      1     1      0
                      _Write_Address
 ---------------------------------------------------------------------------------
 (3) _Write_Address                                        5     3      2     194
                                              8 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Reception_from_master_main                           1     1      0    1104
                                             19 BANK0      1     1      0
                     _Organize_Datas
 ---------------------------------------------------------------------------------
 (2) _Organize_Datas                                      11     6      5    1104
                                              8 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
              _Oscillator_Initialize
                     _Pin_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Pin_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_HANDLER                                    0     0      0    1320
              _Reception_from_master
 ---------------------------------------------------------------------------------
 (5) _Reception_from_master                                5     5      0    1320
                                             10 COMMON     3     3      0
                                              6 BANK0      2     2      0
                        _Store_Datas
                _slave_address_check
 ---------------------------------------------------------------------------------
 (6) _slave_address_check                                  7     5      2     239
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (6) _Store_Datas                                         14     7      7     991
                                              2 COMMON     8     1      7
                                              0 BANK0      6     6      0
           _EUSART_ERROR_from_master *
 ---------------------------------------------------------------------------------
 (7) _EUSART_ERROR_from_master                             2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
     _Oscillator_Initialize
     _Pin_Initialize
     _UART_Initialize
   _Organize_Datas
   _Reception_from_master_main
     _Organize_Datas
   _SetData
     _ChangeAddress
       _Write_Address
     _ChangeData
       _Write_data

 _INTERRUPT_HANDLER (ROOT)
   _Reception_from_master
     _Store_Datas
       _EUSART_ERROR_from_master *
     _slave_address_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      53      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      53      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jun 05 15:31:36 2019

               Store_Datas@received_data 0072                              __CFG_CP$OFF 0000  
                                     _OP 0029                                      l119 0518  
                                    l191 01D8                                      l194 029F  
                                    l196 02F3                             __CFG_CPD$OFF 0000  
                                    u905 0359                                      u915 036C  
                                    u925 0380                                      u935 0393  
                                    u965 01BD                                      u885 0333  
                                    u975 01CD                                      u895 0347  
                                    u985 01F7                                      u995 020C  
                                    _SeP 0020                                      _StP 0025  
                  _Oscillator_Initialize 0513       EUSART_ERROR_from_master@waste_data 0071  
                                    wreg 0009                             _BAUD1CONbits 019F  
                           __CFG_LVP$OFF 0000                               _ChangeData 0452  
                                   l1210 04DA                                     l1062 02E1  
                                   l1070 0435                                     l1058 028D  
                                   l1242 047C                                     l1092 046F  
                                   l1084 045B                                     l1088 0465  
                                   l1248 0492                                     u1005 0223  
                                   u1015 0239                                     u1105 02D1  
                                   u1025 024F                                     u1115 02E4  
                                   u1035 0264                                     u1125 02F6  
                                   u1135 0307                                     u1055 027D  
                                   u1145 01DB                                     u1065 0290  
                                   u1155 01F1                                     u1075 02A2  
                                   u1085 02B8                                     u1175 044A  
                                   _PLLR 48E0                             __CFG_WRT$OFF 0000  
                                   _main 0479                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                 ?_Reception_from_master 0070                                     start 000E  
                        __end_of_SetData 0527                         ?_UART_Initialize 0070  
               Organize_Datas@bus_number 0053                   __size_of_Write_Address 003B  
                                  ?_main 005C                            __CFG_WDTE$OFF 0000  
                  Store_Datas@bus_number 0075                           __CFG_DEBUG$OFF 0000  
                                  i1l113 000C                                    i1l206 00AB  
                                  _TRISC 008E                                    _RXPPS 0E24  
                         __CFG_FCMEN$OFF 0000         slave_address_check@slave_address 0070  
                         _Organize_Datas 01B8                           __CFG_BOREN$OFF 0000  
                                  pclath 000A  Reception_from_master@Receive_data_count 002F  
                         __CFG_BORV$HIGH 0000                                    status 0003  
           Organize_Datas@number_of_data 0051                                    wtemp0 007E  
                         __CFG_CSWEN$OFF 0000                           __CFG_MCLRE$OFF 0000  
                        __initialization 0010              ?_Reception_from_master_main 0070  
                           __end_of_main 049D                               _Initialize 0501  
                 ?_Oscillator_Initialize 0070                                   ??_main 0060  
                 __end_of_Organize_Datas 0315                              ?_ChangeData 0070  
                                 _ANSELA 018C                                   _RC1REG 0199  
                                 i1l1040 04F7                                   i1l1230 03CD  
                                 i1l1048 04FF                                   i1l1160 011D  
                                 i1l1144 00B5                                   i1l1152 00CD  
                                 i1l1136 0060                                   i1l1170 017D  
                                 i1l1234 03E1                                   i1l1148 00CB  
                                 i1l1228 03CB                                   i1l1174 01B6  
                                 i1l1190 04BD                                   i1l1196 04BF  
                                 u130_25 0089                            _Write_Address 03EC  
                                 u140_25 0102                                   u124_25 0039  
                                 u141_25 0111                                   u133_25 00A0  
                                 u125_25 0046                                   u150_25 0198  
                                 u142_25 0123                                   u134_25 00AE  
                                 u126_25 0054                                   u151_25 019D  
                                 u143_25 0136                                   u127_25 0064  
                                 u152_25 01AC                                   u136_25 00BF  
                                 u145_25 014B                                   u137_25 00D0  
                                 u129_25 0075         __end_of_EUSART_ERROR_from_master 0501  
                                 u138_25 00E0                                   u147_25 0162  
                                 u139_25 00FC                                   u155_25 04AE  
                                 u148_25 0171                                   u149_25 0180  
                                 _OSCFRQ 091F                           __CFG_PWRTE$OFF 0000  
                              ??_SetData 0056             __size_of_slave_address_check 0024  
                 __size_of_ChangeAddress 002B                          ?_Organize_Datas 0050  
                         ?_Write_Address 0050                  __end_of__initialization 0028  
                        __CFG_FEXTOSC$HS 0000                           __pcstackCOMMON 0070  
                           __pidataBANK0 0527                               _Write_data 0315  
                    __size_of_ChangeData 0027                              ?_Initialize 0070  
    __size_of_Reception_from_master_main 0020                  ??_Reception_from_master 007A  
                             __pbssBANK0 0020                            ??_Store_Datas 0048  
                          _ChangeAddress 0427                  Store_Datas@EUSART_ERROR 0077  
               _EUSART_ERROR_from_master 04F2                               __pmaintext 0479  
                             __pintentry 0004                  __size_of_Pin_Initialize 0009  
                    __CFG_RSTOSC$HFINT32 0000                        Store_Datas@Buffer 0079  
                                _SP1BRGH 019C                                  _SP1BRGL 019B  
                                _OSCCON1 0919                          ??_Write_Address 0052  
                    __size_of_Initialize 0009                           ?_ChangeAddress 0070  
                                _Buffer0 0031                                  _RxData0 003E  
                                _SetData 0521                       _not_of_before_data 007D  
                    __end_of_Store_Datas 01B8                  ??_Oscillator_Initialize 0050  
                            ?_Write_data 0070                                  _address 0061  
                        __CFG_STVREN$OFF 0000                                  __ptext1 0521  
                                __ptext2 0452                                  __ptext3 0315  
                                __ptext4 0427                                  __ptext5 03EC  
                                __ptext6 04C1                                  __ptext7 01B8  
                                __ptext8 0501                                  __ptext9 04E1  
                      _INTERRUPT_HANDLER 0004                       ?_INTERRUPT_HANDLER 0070  
               __size_of_UART_Initialize 0011                             ??_ChangeData 0053  
                                clrloop0 051C                     end_of_initialization 0028  
                    _slave_address_check 049D                      ??_INTERRUPT_HANDLER 007D  
    Reception_from_master@error_complete 004F                     ?_slave_address_check 0070  
         slave_address_check@sample_data 0076                __end_of_INTERRUPT_HANDLER 000E  
                     __end_of_ChangeData 0479                     _slave_different_flag 0063  
                       ??_Organize_Datas 0055                                _TRISAbits 008C  
                        ??_ChangeAddress 0055                      __size_of_Write_data 0090  
                            _Store_Datas 002C                    ??_slave_address_check 0072  
                         _Pin_Initialize 050A                             ??_Initialize 0050  
      Store_Datas@number_of_receive_data 0073                      start_initialization 0010  
             ??_EUSART_ERROR_from_master 0070                        ??_UART_Initialize 0050  
         __size_of_Reception_from_master 0047            __end_of_Reception_from_master 03EC  
                     __end_of_Initialize 050A                         __CFG_LPBOREN$OFF 0000  
                   Write_Address@address 0050                   __end_of_Pin_Initialize 0513  
                            __pdataBANK0 0061               __size_of_INTERRUPT_HANDLER 000A  
                   Write_data@servo_data 0052                              __pbssCOMMON 007D  
                              ___latbits 0002                            __pcstackBANK0 0048  
                           _Receive_flag 0064                                 ?_SetData 0070  
                        ?_Pin_Initialize 0070             ??_Reception_from_master_main 005B  
                           ??_Write_data 0050       Reception_from_master@slave_address 004E  
                       __CFG_PPS1WAY$OFF 0000           __size_of_Oscillator_Initialize 0008  
          __end_of_Oscillator_Initialize 051B                    __end_of_Write_Address 0427  
                     __end_of_Write_data 03A5                                 _LATAbits 010C  
                               _LATCbits 010E                                clear_ram0 051B  
                               _PIE1bits 0091                                 _PIR1bits 0011  
                 Initialize_Parameters@i 002D                           _address_status 0030  
                           ?_Store_Datas 0072                         __size_of_SetData 0006  
          slave_address_check@data_count 0075                          _UART_Initialize 04E1  
                               __ptext10 050A                                 __ptext11 0513  
                               __ptext13 03A5                                 __ptext14 049D  
                               __ptext15 002C                                 __ptext16 04F2  
                  __end_of_ChangeAddress 0452                            __size_of_main 0024  
            __end_of_slave_address_check 04C1                     Organize_Datas@Buffer 0050  
     __end_of_Reception_from_master_main 04E1               _Reception_from_master_main 04C1  
                   Organize_Datas@RxData 005A                               _RC1STAbits 019D  
                               int$flags 007E                                 main@argc 005C  
                               main@argv 005E                               _INTCONbits 000B  
                               intlevel1 0000                  __size_of_Organize_Datas 015D  
                       ??_Pin_Initialize 0050                        __CFG_CLKOUTEN$OFF 0000  
                  _Reception_from_master 03A5        __size_of_EUSART_ERROR_from_master 000F  
              ?_EUSART_ERROR_from_master 0070                  __end_of_UART_Initialize 04F2  
          slave_address_check@slave_flag 0071                               _TX1STAbits 019E  
                   __size_of_Store_Datas 018C  
