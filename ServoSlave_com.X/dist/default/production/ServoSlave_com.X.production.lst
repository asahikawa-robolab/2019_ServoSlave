

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Sep 29 10:14:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1933 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020D                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029F                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031C                     	;# 
   194  031D                     	;# 
   195  031E                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0791                     	;# 
   206  0792                     	;# 
   207  0793                     	;# 
   208  0794                     	;# 
   209  0795                     	;# 
   210  0798                     	;# 
   211  0799                     	;# 
   212  07A0                     	;# 
   213  07A1                     	;# 
   214  07A3                     	;# 
   215  07A4                     	;# 
   216  07A6                     	;# 
   217  07A7                     	;# 
   218  07A9                     	;# 
   219  07AA                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0110                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020D                     	;# 
   318  0210                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029F                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031C                     	;# 
   358  031C                     	;# 
   359  031D                     	;# 
   360  031E                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  0791                     	;# 
   371  0792                     	;# 
   372  0793                     	;# 
   373  0794                     	;# 
   374  0795                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  07A0                     	;# 
   378  07A1                     	;# 
   379  07A3                     	;# 
   380  07A4                     	;# 
   381  07A6                     	;# 
   382  07A7                     	;# 
   383  07A9                     	;# 
   384  07AA                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  0110                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011D                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019C                     	;# 
   479  019D                     	;# 
   480  019E                     	;# 
   481  019F                     	;# 
   482  020D                     	;# 
   483  0210                     	;# 
   484  0211                     	;# 
   485  0212                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0291                     	;# 
   493  0291                     	;# 
   494  0292                     	;# 
   495  0293                     	;# 
   496  0294                     	;# 
   497  0295                     	;# 
   498  0295                     	;# 
   499  0296                     	;# 
   500  0298                     	;# 
   501  0298                     	;# 
   502  0299                     	;# 
   503  029A                     	;# 
   504  029B                     	;# 
   505  029C                     	;# 
   506  029C                     	;# 
   507  029D                     	;# 
   508  029E                     	;# 
   509  029F                     	;# 
   510  0311                     	;# 
   511  0311                     	;# 
   512  0312                     	;# 
   513  0313                     	;# 
   514  0314                     	;# 
   515  0315                     	;# 
   516  0315                     	;# 
   517  0316                     	;# 
   518  0318                     	;# 
   519  0318                     	;# 
   520  0319                     	;# 
   521  031A                     	;# 
   522  031C                     	;# 
   523  031C                     	;# 
   524  031D                     	;# 
   525  031E                     	;# 
   526  0394                     	;# 
   527  0395                     	;# 
   528  0396                     	;# 
   529  0415                     	;# 
   530  0416                     	;# 
   531  0417                     	;# 
   532  041C                     	;# 
   533  041D                     	;# 
   534  041E                     	;# 
   535  0791                     	;# 
   536  0792                     	;# 
   537  0793                     	;# 
   538  0794                     	;# 
   539  0795                     	;# 
   540  0798                     	;# 
   541  0799                     	;# 
   542  07A0                     	;# 
   543  07A1                     	;# 
   544  07A3                     	;# 
   545  07A4                     	;# 
   546  07A6                     	;# 
   547  07A7                     	;# 
   548  07A9                     	;# 
   549  07AA                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  0010                     	;# 
   577  0011                     	;# 
   578  0012                     	;# 
   579  0013                     	;# 
   580  0015                     	;# 
   581  0016                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  001E                     	;# 
   590  001F                     	;# 
   591  008C                     	;# 
   592  008D                     	;# 
   593  008E                     	;# 
   594  0090                     	;# 
   595  0091                     	;# 
   596  0092                     	;# 
   597  0093                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  0110                     	;# 
   613  0111                     	;# 
   614  0112                     	;# 
   615  0113                     	;# 
   616  0114                     	;# 
   617  0115                     	;# 
   618  0116                     	;# 
   619  0117                     	;# 
   620  0118                     	;# 
   621  0119                     	;# 
   622  011A                     	;# 
   623  011B                     	;# 
   624  011D                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  0191                     	;# 
   628  0191                     	;# 
   629  0192                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0194                     	;# 
   634  0195                     	;# 
   635  0196                     	;# 
   636  0199                     	;# 
   637  019A                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019D                     	;# 
   645  019E                     	;# 
   646  019F                     	;# 
   647  020D                     	;# 
   648  0210                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0213                     	;# 
   652  0214                     	;# 
   653  0215                     	;# 
   654  0215                     	;# 
   655  0216                     	;# 
   656  0217                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0298                     	;# 
   666  0298                     	;# 
   667  0299                     	;# 
   668  029A                     	;# 
   669  029B                     	;# 
   670  029C                     	;# 
   671  029C                     	;# 
   672  029D                     	;# 
   673  029E                     	;# 
   674  029F                     	;# 
   675  0311                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0314                     	;# 
   680  0315                     	;# 
   681  0315                     	;# 
   682  0316                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  031C                     	;# 
   688  031C                     	;# 
   689  031D                     	;# 
   690  031E                     	;# 
   691  0394                     	;# 
   692  0395                     	;# 
   693  0396                     	;# 
   694  0415                     	;# 
   695  0416                     	;# 
   696  0417                     	;# 
   697  041C                     	;# 
   698  041D                     	;# 
   699  041E                     	;# 
   700  0791                     	;# 
   701  0792                     	;# 
   702  0793                     	;# 
   703  0794                     	;# 
   704  0795                     	;# 
   705  0798                     	;# 
   706  0799                     	;# 
   707  07A0                     	;# 
   708  07A1                     	;# 
   709  07A3                     	;# 
   710  07A4                     	;# 
   711  07A6                     	;# 
   712  07A7                     	;# 
   713  07A9                     	;# 
   714  07AA                     	;# 
   715  0FE4                     	;# 
   716  0FE5                     	;# 
   717  0FE6                     	;# 
   718  0FE7                     	;# 
   719  0FE8                     	;# 
   720  0FE9                     	;# 
   721  0FEA                     	;# 
   722  0FEB                     	;# 
   723  0FED                     	;# 
   724  0FEE                     	;# 
   725  0FEF                     	;# 
   726                           
   727                           	psect	idataBANK0
   728  050F                     __pidataBANK0:	
   729                           
   730                           ;initializer for ChangeAddress@Addresses
   731  050F  3400               	retlw	0
   732  0510  3401               	retlw	1
   733  0511  3400               	retlw	0
   734  0512  3402               	retlw	2
   735  0513  3400               	retlw	0
   736  0514  3403               	retlw	3
   737  0515  3400               	retlw	0
   738  0516  3404               	retlw	4
   739                           
   740                           ;initializer for _slave_different_flag
   741  0517  3402               	retlw	2
   742                           
   743                           ;initializer for _Receive_flag
   744  0518  3401               	retlw	1
   745  000B                     _INTCONbits	set	11
   746  0011                     _PIR1bits	set	17
   747  0091                     _PIE1bits	set	145
   748  008D                     _TRISBbits	set	141
   749  008C                     _TRISAbits	set	140
   750  008E                     _TRISCbits	set	142
   751  0099                     _OSCCON	set	153
   752  010C                     _LATAbits	set	268
   753  010E                     _LATCbits	set	270
   754  010D                     _LATBbits	set	269
   755  019F                     _BAUDCONbits	set	415
   756  019E                     _TXSTAbits	set	414
   757  019B                     _SPBRGL	set	411
   758  019C                     _SPBRGH	set	412
   759  018D                     _ANSELB	set	397
   760  018C                     _ANSELA	set	396
   761  0199                     _RCREG	set	409
   762  019D                     _RCSTAbits	set	413
   763                           
   764                           ; #config settings
   765  0000                     
   766                           	psect	cinit
   767  0010                     start_initialization:	
   768  0010                     __initialization:	
   769                           
   770                           ; Initialize objects allocated to BANK0
   771  0010  300F               	movlw	low __pidataBANK0
   772  0011  0084               	movwf	4
   773  0012  3085               	movlw	(high __pidataBANK0)| (0+128)
   774  0013  0085               	movwf	5
   775  0014  3060               	movlw	low __pdataBANK0
   776  0015  0086               	movwf	6
   777  0016  3000               	movlw	high __pdataBANK0
   778  0017  0087               	movwf	7
   779  0018  300A               	movlw	10
   780  0019  3185  2519  3180   	fcall	init_ram
   781                           
   782                           ; Clear objects allocated to BANK0
   783  001C  3020               	movlw	low __pbssBANK0
   784  001D  0084               	movwf	4
   785  001E  3000               	movlw	high __pbssBANK0
   786  001F  0085               	movwf	5
   787  0020  302A               	movlw	42
   788  0021  3185  251F         	fcall	clear_ram0
   789  0023                     end_of_initialization:	
   790                           ;End of C runtime variable initialization code
   791                           
   792  0023                     __end_of__initialization:	
   793  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   794  0024  0020               	movlb	0
   795  0025  3183  2BA2         	ljmp	_main	;jump to C main() function
   796                           
   797                           	psect	bssBANK0
   798  0020                     __pbssBANK0:	
   799  0020                     _SeP:	
   800  0020                     	ds	5
   801  0025                     _StP:	
   802  0025                     	ds	4
   803  0029                     _OP:	
   804  0029                     	ds	4
   805  002D                     Initialize_Parameters@i:	
   806  002D                     	ds	2
   807  002F                     ChangeAddress@AddCnt:	
   808  002F                     	ds	2
   809  0031                     _not_of_before_data:	
   810  0031                     	ds	1
   811  0032                     Reception_from_master@Receive_data_count:	
   812  0032                     	ds	1
   813  0033                     _Buffer0:	
   814  0033                     	ds	13
   815  0040                     _RxData0:	
   816  0040                     	ds	10
   817                           
   818                           	psect	dataBANK0
   819  0060                     __pdataBANK0:	
   820  0060                     ChangeAddress@Addresses:	
   821  0060                     	ds	8
   822  0068                     _slave_different_flag:	
   823  0068                     	ds	1
   824  0069                     _Receive_flag:	
   825  0069                     	ds	1
   826                           
   827                           	psect	inittext
   828  0519                     init_ram:	
   829  0519  00FE               	movwf	126
   830  051A                     initloop:	
   831  051A  0012               	moviw fsr0++
   832  051B  001E               	movwi fsr1++
   833  051C  0BFE               	decfsz	126,f
   834  051D  2D1A               	goto	initloop
   835  051E  3400               	retlw	0
   836                           
   837                           	psect	clrtext
   838  051F                     clear_ram0:	
   839                           ;	Called with FSR0 containing the base address, and
   840                           ;	WREG with the size to clear
   841                           
   842  051F  0064               	clrwdt	;clear the watchdog before getting into this loop
   843  0520                     clrloop0:	
   844  0520  0180               	clrf	0	;clear RAM location pointed to by FSR
   845  0521  3101               	addfsr 0,1
   846  0522  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   847  0523  2D20               	goto	clrloop0	;have we reached the end yet?
   848  0524  3400               	retlw	0	;all done for this memory range, return
   849                           
   850                           	psect	cstackBANK1
   851  00A0                     __pcstackBANK1:	
   852  00A0                     ??_main:	
   853                           
   854                           ; 1 bytes @ 0x0
   855  00A0                     	ds	1
   856  00A1                     main@Address:	
   857                           
   858                           ; 2 bytes @ 0x1
   859  00A1                     	ds	2
   860                           
   861                           	psect	cstackCOMMON
   862  0070                     __pcstackCOMMON:	
   863  0070                     ?_Initialize:	
   864  0070                     ?_Reception_from_master_main:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_Reception_from_master:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_slave_address_check:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_Oscillator_Initialize:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_Pin_Initialize:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_UART_Initialize:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_INTERRUPT_HANDLER:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_EUSART_ERROR_from_master:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ??_EUSART_ERROR_from_master:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_Initialize_Parameters:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     slave_address_check@slave_address:	
   895                           ; 1 bytes @ 0x0
   896                           
   897                           
   898                           ; 1 bytes @ 0x0
   899  0070                     	ds	1
   900  0071                     ?_Store_Datas:	
   901  0071                     slave_address_check@slave_flag:	
   902                           ; 1 bytes @ 0x1
   903                           
   904  0071                     Store_Datas@received_data:	
   905                           ; 1 bytes @ 0x1
   906                           
   907                           
   908                           ; 1 bytes @ 0x1
   909  0071                     	ds	1
   910  0072                     ??_slave_address_check:	
   911  0072                     Store_Datas@number_of_receive_data:	
   912                           ; 1 bytes @ 0x2
   913                           
   914                           
   915                           ; 2 bytes @ 0x2
   916  0072                     	ds	2
   917  0074                     Store_Datas@bus_number:	
   918                           
   919                           ; 2 bytes @ 0x4
   920  0074                     	ds	1
   921  0075                     slave_address_check@data_count:	
   922                           
   923                           ; 1 bytes @ 0x5
   924  0075                     	ds	1
   925  0076                     slave_address_check@sample_data:	
   926  0076                     Store_Datas@EUSART_ERROR:	
   927                           ; 1 bytes @ 0x6
   928                           
   929                           
   930                           ; 2 bytes @ 0x6
   931  0076                     	ds	2
   932  0078                     ??_Store_Datas:	
   933                           
   934                           ; 1 bytes @ 0x8
   935  0078                     	ds	6
   936  007E                     ??_INTERRUPT_HANDLER:	
   937                           
   938                           	psect	cstackBANK0
   939  004A                     __pcstackBANK0:	
   940                           ; 1 bytes @ 0xE
   941                           
   942  004A                     Store_Datas@Buffer:	
   943                           
   944                           ; 1 bytes @ 0x0
   945  004A                     	ds	1
   946  004B                     ??_Reception_from_master:	
   947                           
   948                           ; 1 bytes @ 0x1
   949  004B                     	ds	3
   950  004E                     Reception_from_master@slave_address:	
   951                           
   952                           ; 1 bytes @ 0x4
   953  004E                     	ds	1
   954  004F                     Reception_from_master@error_complete:	
   955                           
   956                           ; 1 bytes @ 0x5
   957  004F                     	ds	1
   958  0050                     ?_Organize_Datas:	
   959  0050                     ?_WriteAddress:	
   960                           ; 1 bytes @ 0x6
   961                           
   962  0050                     ?_WriteData:	
   963                           ; 1 bytes @ 0x6
   964                           
   965  0050                     ??_Oscillator_Initialize:	
   966                           ; 1 bytes @ 0x6
   967                           
   968  0050                     ??_Pin_Initialize:	
   969                           ; 1 bytes @ 0x6
   970                           
   971  0050                     ??_UART_Initialize:	
   972                           ; 1 bytes @ 0x6
   973                           
   974  0050                     ?___bmul:	
   975                           ; 1 bytes @ 0x6
   976                           
   977  0050                     ?_ChangeAddress:	
   978                           ; 1 bytes @ 0x6
   979                           
   980  0050                     Organize_Datas@Buffer:	
   981                           ; 2 bytes @ 0x6
   982                           
   983  0050                     ___bmul@multiplicand:	
   984                           ; 1 bytes @ 0x6
   985                           
   986  0050                     WriteAddress@Address:	
   987                           ; 1 bytes @ 0x6
   988                           
   989  0050                     WriteData@Address:	
   990                           ; 2 bytes @ 0x6
   991                           
   992                           
   993                           ; 2 bytes @ 0x6
   994  0050                     	ds	1
   995  0051                     ??___bmul:	
   996  0051                     Organize_Datas@number_of_data:	
   997                           ; 1 bytes @ 0x7
   998                           
   999                           
  1000                           ; 2 bytes @ 0x7
  1001  0051                     	ds	1
  1002  0052                     ??_ChangeAddress:	
  1003  0052                     ??_WriteAddress:	
  1004                           ; 1 bytes @ 0x8
  1005                           
  1006  0052                     ??_WriteData:	
  1007                           ; 1 bytes @ 0x8
  1008                           
  1009  0052                     ___bmul@product:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x8
  1014  0052                     	ds	1
  1015  0053                     ___bmul@multiplier:	
  1016  0053                     Organize_Datas@bus_number:	
  1017                           ; 1 bytes @ 0x9
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x9
  1021  0053                     	ds	1
  1022  0054                     ??_Initialize_Parameters:	
  1023                           
  1024                           ; 1 bytes @ 0xA
  1025  0054                     	ds	1
  1026  0055                     ??_Initialize:	
  1027  0055                     ??_Organize_Datas:	
  1028                           ; 1 bytes @ 0xB
  1029                           
  1030                           
  1031                           ; 1 bytes @ 0xB
  1032  0055                     	ds	5
  1033  005A                     Organize_Datas@RxData:	
  1034                           
  1035                           ; 1 bytes @ 0x10
  1036  005A                     	ds	1
  1037  005B                     ??_Reception_from_master_main:	
  1038                           
  1039                           ; 1 bytes @ 0x11
  1040  005B                     	ds	1
  1041  005C                     ?_main:	
  1042  005C                     main@argc:	
  1043                           ; 2 bytes @ 0x12
  1044                           
  1045                           
  1046                           ; 2 bytes @ 0x12
  1047  005C                     	ds	2
  1048  005E                     main@argv:	
  1049                           
  1050                           ; 2 bytes @ 0x14
  1051  005E                     	ds	2
  1052                           
  1053                           	psect	maintext
  1054  03A2                     __pmaintext:	
  1055 ;;
  1056 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1057 ;;
  1058 ;; *************** function _main *****************
  1059 ;; Defined at:
  1060 ;;		line 25 in file "main.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  argc            2   18[BANK0 ] int 
  1063 ;;  argv            2   20[BANK0 ] PTR PTR unsigned char 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  Address         2    1[BANK1 ] int 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2   18[BANK0 ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : B1F/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1075 ;;      Params:         0       4       0       0
  1076 ;;      Locals:         0       0       2       0
  1077 ;;      Temps:          0       0       1       0
  1078 ;;      Totals:         0       4       3       0
  1079 ;;Total ram usage:        7 bytes
  1080 ;; Hardware stack levels required when called:    7
  1081 ;; This function calls:
  1082 ;;		_ChangeAddress
  1083 ;;		_Initialize
  1084 ;;		_Organize_Datas
  1085 ;;		_Reception_from_master_main
  1086 ;;		_WriteAddress
  1087 ;;		_WriteData
  1088 ;; This function is called by:
  1089 ;;		Startup code after reset
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _main
  1095  03A2                     _main:	
  1096                           
  1097                           ;main.c: 27: Initialize();
  1098                           
  1099                           ;incstack = 0
  1100                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1101  03A2  3184  24F7  3183   	fcall	_Initialize
  1102  03A5                     l1506:	
  1103                           ;main.c: 30: while (Receive_flag != 0);
  1104                           
  1105  03A5  0020               	movlb	0	; select bank0
  1106  03A6  0869               	movf	_Receive_flag,w
  1107  03A7  1D03               	btfss	3,2
  1108  03A8  2BA5               	goto	l1506
  1109                           
  1110                           ;main.c: 31: Organize_Datas(RxData0, Buffer0, 5, 0);
  1111  03A9  3033               	movlw	(low (_Buffer0| 0))& (0+255)
  1112  03AA  0021               	movlb	1	; select bank1
  1113  03AB  00A0               	movwf	??_main^(0+128)
  1114  03AC  0820               	movf	??_main^(0+128),w
  1115  03AD  0020               	movlb	0	; select bank0
  1116  03AE  00D0               	movwf	Organize_Datas@Buffer
  1117  03AF  3005               	movlw	5
  1118  03B0  00D1               	movwf	Organize_Datas@number_of_data
  1119  03B1  3000               	movlw	0
  1120  03B2  00D2               	movwf	Organize_Datas@number_of_data+1
  1121  03B3  3000               	movlw	0
  1122  03B4  00D3               	movwf	Organize_Datas@bus_number
  1123  03B5  00D4               	movwf	Organize_Datas@bus_number+1
  1124  03B6  3040               	movlw	(low (_RxData0| 0))& (0+255)
  1125  03B7  3181  219F  3183   	fcall	_Organize_Datas
  1126                           
  1127                           ;main.c: 32: Receive_flag = 1;
  1128  03BA  0020               	movlb	0	; select bank0
  1129  03BB  01E9               	clrf	_Receive_flag
  1130  03BC  0AE9               	incf	_Receive_flag,f
  1131  03BD                     l38:	
  1132                           ;main.c: 35: int Address;;main.c: 37: while (1)
  1133                           
  1134                           
  1135                           ;main.c: 38: {;main.c: 40: Reception_from_master_main();
  1136  03BD  3184  24A6  3183   	fcall	_Reception_from_master_main
  1137                           
  1138                           ;main.c: 43: Address = ChangeAddress();
  1139  03C0  3184  2488  3183   	fcall	_ChangeAddress
  1140  03C3  0851               	movf	?_ChangeAddress+1,w
  1141  03C4  0021               	movlb	1	; select bank1
  1142  03C5  00A2               	movwf	(main@Address+1)^(0+128)
  1143  03C6  0020               	movlb	0	; select bank0
  1144  03C7  0850               	movf	?_ChangeAddress,w
  1145  03C8  0021               	movlb	1	; select bank1
  1146  03C9  00A1               	movwf	main@Address^(0+128)
  1147                           
  1148                           ;main.c: 44: WriteAddress(Address);
  1149  03CA  0822               	movf	(main@Address+1)^(0+128),w
  1150  03CB  0020               	movlb	0	; select bank0
  1151  03CC  00D1               	movwf	WriteAddress@Address+1
  1152  03CD  0021               	movlb	1	; select bank1
  1153  03CE  0821               	movf	main@Address^(0+128),w
  1154  03CF  0020               	movlb	0	; select bank0
  1155  03D0  00D0               	movwf	WriteAddress@Address
  1156  03D1  3184  2432  3183   	fcall	_WriteAddress
  1157                           
  1158                           ;main.c: 47: if (Address != 0)
  1159  03D4  0021               	movlb	1	; select bank1
  1160  03D5  0821               	movf	main@Address^(0+128),w
  1161  03D6  0422               	iorwf	(main@Address+1)^(0+128),w
  1162  03D7  1903               	btfsc	3,2
  1163  03D8  2BE3               	goto	l1518
  1164                           
  1165                           ;main.c: 48: {;main.c: 49: WriteData(Address);
  1166  03D9  0822               	movf	(main@Address+1)^(0+128),w
  1167  03DA  0020               	movlb	0	; select bank0
  1168  03DB  00D1               	movwf	WriteData@Address+1
  1169  03DC  0021               	movlb	1	; select bank1
  1170  03DD  0821               	movf	main@Address^(0+128),w
  1171  03DE  0020               	movlb	0	; select bank0
  1172  03DF  00D0               	movwf	WriteData@Address
  1173  03E0  3182  22F0  3183   	fcall	_WriteData
  1174  03E3                     l1518:	
  1175                           
  1176                           ;main.c: 50: };main.c: 51: _delay((unsigned long)((1)*(32000000/4000.0)));
  1177  03E3  300B               	movlw	11
  1178  03E4  0021               	movlb	1	; select bank1
  1179  03E5  00A0               	movwf	??_main^(0+128)
  1180  03E6  3062               	movlw	98
  1181  03E7                     u2307:	
  1182  03E7  0B89               	decfsz	9,f
  1183  03E8  2BE7               	goto	u2307
  1184  03E9  0BA0               	decfsz	??_main^(0+128),f
  1185  03EA  2BE7               	goto	u2307
  1186  03EB  0000               	nop
  1187  03EC  2BBD               	goto	l38
  1188  03ED                     __end_of_main:	
  1189                           
  1190                           	psect	text1
  1191  02F0                     __ptext1:	
  1192 ;; *************** function _WriteData *****************
  1193 ;; Defined at:
  1194 ;;		line 87 in file "main.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  Address         2    6[BANK0 ] int 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 1F/0
  1205 ;;		On exit  : 1F/2
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1208 ;;      Params:         0       2       0       0
  1209 ;;      Locals:         0       0       0       0
  1210 ;;      Temps:          0       0       0       0
  1211 ;;      Totals:         0       2       0       0
  1212 ;;Total ram usage:        2 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    4
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _WriteData
  1224  02F0                     _WriteData:	
  1225                           
  1226                           ;main.c: 89: LATAbits.LATA0 = RxData0[Address].data0;
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _WriteData: [wreg+fsr1l+fsr1h+status,2+status,0]
  1230  02F0  3550               	lslf	WriteData@Address,w
  1231  02F1  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1232  02F2  0086               	movwf	6
  1233  02F3  0187               	clrf	7
  1234  02F4  1C01               	btfss	1,0
  1235  02F5  2AF9               	goto	u2120
  1236  02F6  0022               	movlb	2	; select bank2
  1237  02F7  140C               	bsf	12,0	;volatile
  1238  02F8  2AFB               	goto	u2134
  1239  02F9                     u2120:	
  1240  02F9  0022               	movlb	2	; select bank2
  1241  02FA  100C               	bcf	12,0	;volatile
  1242  02FB                     u2134:	
  1243                           
  1244                           ;main.c: 90: LATAbits.LATA1 = RxData0[Address].data1;
  1245  02FB  0020               	movlb	0	; select bank0
  1246  02FC  3550               	lslf	WriteData@Address,w
  1247  02FD  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1248  02FE  0086               	movwf	6
  1249  02FF  0187               	clrf	7
  1250  0300  1C81               	btfss	1,1
  1251  0301  2B05               	goto	u2140
  1252  0302  0022               	movlb	2	; select bank2
  1253  0303  148C               	bsf	12,1	;volatile
  1254  0304  2B07               	goto	u2154
  1255  0305                     u2140:	
  1256  0305  0022               	movlb	2	; select bank2
  1257  0306  108C               	bcf	12,1	;volatile
  1258  0307                     u2154:	
  1259                           
  1260                           ;main.c: 91: LATAbits.LATA2 = RxData0[Address].data2;
  1261  0307  0020               	movlb	0	; select bank0
  1262  0308  3550               	lslf	WriteData@Address,w
  1263  0309  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1264  030A  0086               	movwf	6
  1265  030B  0187               	clrf	7
  1266  030C  1D01               	btfss	1,2
  1267  030D  2B11               	goto	u2160
  1268  030E  0022               	movlb	2	; select bank2
  1269  030F  150C               	bsf	12,2	;volatile
  1270  0310  2B13               	goto	u2174
  1271  0311                     u2160:	
  1272  0311  0022               	movlb	2	; select bank2
  1273  0312  110C               	bcf	12,2	;volatile
  1274  0313                     u2174:	
  1275                           
  1276                           ;main.c: 92: LATAbits.LATA3 = RxData0[Address].data3;
  1277  0313  0020               	movlb	0	; select bank0
  1278  0314  3550               	lslf	WriteData@Address,w
  1279  0315  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1280  0316  0086               	movwf	6
  1281  0317  0187               	clrf	7
  1282  0318  1D81               	btfss	1,3
  1283  0319  2B1D               	goto	u2180
  1284  031A  0022               	movlb	2	; select bank2
  1285  031B  158C               	bsf	12,3	;volatile
  1286  031C  2B1F               	goto	u2194
  1287  031D                     u2180:	
  1288  031D  0022               	movlb	2	; select bank2
  1289  031E  118C               	bcf	12,3	;volatile
  1290  031F                     u2194:	
  1291                           
  1292                           ;main.c: 93: LATBbits.LATB5 = RxData0[Address].data4;
  1293  031F  0020               	movlb	0	; select bank0
  1294  0320  3550               	lslf	WriteData@Address,w
  1295  0321  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1296  0322  0086               	movwf	6
  1297  0323  0187               	clrf	7
  1298  0324  1E01               	btfss	1,4
  1299  0325  2B29               	goto	u2200
  1300  0326  0022               	movlb	2	; select bank2
  1301  0327  168D               	bsf	13,5	;volatile
  1302  0328  2B2B               	goto	u2214
  1303  0329                     u2200:	
  1304  0329  0022               	movlb	2	; select bank2
  1305  032A  128D               	bcf	13,5	;volatile
  1306  032B                     u2214:	
  1307                           
  1308                           ;main.c: 94: LATBbits.LATB4 = RxData0[Address].data5;
  1309  032B  0020               	movlb	0	; select bank0
  1310  032C  3550               	lslf	WriteData@Address,w
  1311  032D  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1312  032E  0086               	movwf	6
  1313  032F  0187               	clrf	7
  1314  0330  1E81               	btfss	1,5
  1315  0331  2B35               	goto	u2220
  1316  0332  0022               	movlb	2	; select bank2
  1317  0333  160D               	bsf	13,4	;volatile
  1318  0334  2B37               	goto	u2234
  1319  0335                     u2220:	
  1320  0335  0022               	movlb	2	; select bank2
  1321  0336  120D               	bcf	13,4	;volatile
  1322  0337                     u2234:	
  1323                           
  1324                           ;main.c: 95: LATBbits.LATB2 = RxData0[Address].data6;
  1325  0337  0020               	movlb	0	; select bank0
  1326  0338  3550               	lslf	WriteData@Address,w
  1327  0339  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1328  033A  0086               	movwf	6
  1329  033B  0187               	clrf	7
  1330  033C  1F01               	btfss	1,6
  1331  033D  2B41               	goto	u2240
  1332  033E  0022               	movlb	2	; select bank2
  1333  033F  150D               	bsf	13,2	;volatile
  1334  0340  2B43               	goto	u2254
  1335  0341                     u2240:	
  1336  0341  0022               	movlb	2	; select bank2
  1337  0342  110D               	bcf	13,2	;volatile
  1338  0343                     u2254:	
  1339                           
  1340                           ;main.c: 96: LATBbits.LATB3 = RxData0[Address].data7;
  1341  0343  0020               	movlb	0	; select bank0
  1342  0344  3550               	lslf	WriteData@Address,w
  1343  0345  3E40               	addlw	(low (_RxData0| 0))& (0+255)
  1344  0346  0086               	movwf	6
  1345  0347  0187               	clrf	7
  1346  0348  1F81               	btfss	1,7
  1347  0349  2B4D               	goto	u2260
  1348  034A  0022               	movlb	2	; select bank2
  1349  034B  158D               	bsf	13,3	;volatile
  1350  034C  0008               	return
  1351  034D                     u2260:	
  1352  034D  0022               	movlb	2	; select bank2
  1353  034E  118D               	bcf	13,3	;volatile
  1354  034F  0008               	return
  1355  0350                     __end_of_WriteData:	
  1356                           
  1357                           	psect	text2
  1358  0432                     __ptext2:	
  1359 ;; *************** function _WriteAddress *****************
  1360 ;; Defined at:
  1361 ;;		line 75 in file "main.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  Address         2    6[BANK0 ] int 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 1F/0
  1372 ;;		On exit  : 1F/2
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1375 ;;      Params:         0       2       0       0
  1376 ;;      Locals:         0       0       0       0
  1377 ;;      Temps:          0       2       0       0
  1378 ;;      Totals:         0       4       0       0
  1379 ;;Total ram usage:        4 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    4
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _WriteAddress
  1391  0432                     _WriteAddress:	
  1392                           
  1393                           ;main.c: 77: LATBbits.LATB1 = Address & 0b001;
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _WriteAddress: [wreg+status,2+status,0]
  1397  0432  0850               	movf	WriteAddress@Address,w
  1398  0433  3901               	andlw	1
  1399  0434  00D2               	movwf	??_WriteAddress
  1400  0435  0DD2               	rlf	??_WriteAddress,f
  1401  0436  0022               	movlb	2	; select bank2
  1402  0437  080D               	movf	13,w	;volatile
  1403  0438  0020               	movlb	0	; select bank0
  1404  0439  0652               	xorwf	??_WriteAddress,w
  1405  043A  39FD               	andlw	-3
  1406  043B  0652               	xorwf	??_WriteAddress,w
  1407  043C  0022               	movlb	2	; select bank2
  1408  043D  008D               	movwf	13	;volatile
  1409                           
  1410                           ;main.c: 78: LATBbits.LATB0 = (Address >> 1) & 0b001;
  1411  043E  0020               	movlb	0	; select bank0
  1412  043F  0850               	movf	WriteAddress@Address,w
  1413  0440  00D2               	movwf	??_WriteAddress
  1414  0441  3001               	movlw	1
  1415  0442                     u2105:	
  1416  0442  36D2               	lsrf	??_WriteAddress,f
  1417  0443  0B89               	decfsz	9,f
  1418  0444  2C42               	goto	u2105
  1419  0445  3001               	movlw	1
  1420  0446  0552               	andwf	??_WriteAddress,w
  1421  0447  00D3               	movwf	??_WriteAddress+1
  1422  0448  0022               	movlb	2	; select bank2
  1423  0449  080D               	movf	13,w	;volatile
  1424  044A  0020               	movlb	0	; select bank0
  1425  044B  0653               	xorwf	??_WriteAddress+1,w
  1426  044C  39FE               	andlw	-2
  1427  044D  0653               	xorwf	??_WriteAddress+1,w
  1428  044E  0022               	movlb	2	; select bank2
  1429  044F  008D               	movwf	13	;volatile
  1430                           
  1431                           ;main.c: 79: LATCbits.LATC5 = (Address >> 2) & 0b001;
  1432  0450  0020               	movlb	0	; select bank0
  1433  0451  0850               	movf	WriteAddress@Address,w
  1434  0452  00D2               	movwf	??_WriteAddress
  1435  0453  3002               	movlw	2
  1436  0454                     u2115:	
  1437  0454  36D2               	lsrf	??_WriteAddress,f
  1438  0455  0B89               	decfsz	9,f
  1439  0456  2C54               	goto	u2115
  1440  0457  0852               	movf	??_WriteAddress,w
  1441  0458  3901               	andlw	1
  1442  0459  00D3               	movwf	??_WriteAddress+1
  1443  045A  0ED3               	swapf	??_WriteAddress+1,f
  1444  045B  0DD3               	rlf	??_WriteAddress+1,f
  1445  045C  0022               	movlb	2	; select bank2
  1446  045D  080E               	movf	14,w	;volatile
  1447  045E  0020               	movlb	0	; select bank0
  1448  045F  0653               	xorwf	??_WriteAddress+1,w
  1449  0460  39DF               	andlw	-33
  1450  0461  0653               	xorwf	??_WriteAddress+1,w
  1451  0462  0022               	movlb	2	; select bank2
  1452  0463  008E               	movwf	14	;volatile
  1453  0464  0008               	return
  1454  0465                     __end_of_WriteAddress:	
  1455                           
  1456                           	psect	text3
  1457  04A6                     __ptext3:	
  1458 ;; *************** function _Reception_from_master_main *****************
  1459 ;; Defined at:
  1460 ;;		line 90 in file "communication.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;		None
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 1F/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1474 ;;      Params:         0       0       0       0
  1475 ;;      Locals:         0       0       0       0
  1476 ;;      Temps:          0       1       0       0
  1477 ;;      Totals:         0       1       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    5
  1481 ;; This function calls:
  1482 ;;		_Organize_Datas
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _Reception_from_master_main
  1490  04A6                     _Reception_from_master_main:	
  1491                           
  1492                           ;communication.c: 91: if (Receive_flag == 0) {
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _Reception_from_master_main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  1496  04A6  0020               	movlb	0	; select bank0
  1497  04A7  0869               	movf	_Receive_flag,w
  1498  04A8  1D03               	btfss	3,2
  1499  04A9  0008               	return
  1500                           
  1501                           ;communication.c: 93: if (slave_different_flag == 1) {
  1502  04AA  0368               	decf	_slave_different_flag,w
  1503  04AB  1D03               	btfss	3,2
  1504  04AC  2CBB               	goto	l1486
  1505                           
  1506                           ;communication.c: 94: Organize_Datas(RxData0, Buffer0, 5, 0);
  1507  04AD  3033               	movlw	(low (_Buffer0| 0))& (0+255)
  1508  04AE  00DB               	movwf	??_Reception_from_master_main
  1509  04AF  085B               	movf	??_Reception_from_master_main,w
  1510  04B0  00D0               	movwf	Organize_Datas@Buffer
  1511  04B1  3005               	movlw	5
  1512  04B2  00D1               	movwf	Organize_Datas@number_of_data
  1513  04B3  3000               	movlw	0
  1514  04B4  00D2               	movwf	Organize_Datas@number_of_data+1
  1515  04B5  3000               	movlw	0
  1516  04B6  00D3               	movwf	Organize_Datas@bus_number
  1517  04B7  00D4               	movwf	Organize_Datas@bus_number+1
  1518  04B8  3040               	movlw	(low (_RxData0| 0))& (0+255)
  1519  04B9  3181  219F         	fcall	_Organize_Datas
  1520  04BB                     l1486:	
  1521                           
  1522                           ;communication.c: 95: slave_different_flag = 2;
  1523  04BB  3002               	movlw	2
  1524  04BC  0020               	movlb	0	; select bank0
  1525  04BD  00DB               	movwf	??_Reception_from_master_main
  1526  04BE  085B               	movf	??_Reception_from_master_main,w
  1527  04BF  00E8               	movwf	_slave_different_flag
  1528                           
  1529                           ;communication.c: 98: };communication.c: 99: Receive_flag = 1;
  1530                           
  1531                           ;communication.c: 96: } else {
  1532  04C0  01E9               	clrf	_Receive_flag
  1533  04C1  0AE9               	incf	_Receive_flag,f
  1534                           
  1535                           ;communication.c: 100: } else;
  1536  04C2  0008               	return
  1537  04C3                     __end_of_Reception_from_master_main:	
  1538                           
  1539                           	psect	text4
  1540  019F                     __ptext4:	
  1541 ;; *************** function _Organize_Datas *****************
  1542 ;; Defined at:
  1543 ;;		line 20 in file "Controller_Protocol.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  RxData          1    wreg     PTR struct .
  1546 ;;		 -> RxData0(10), 
  1547 ;;  Buffer          1    6[BANK0 ] PTR struct .
  1548 ;;		 -> Buffer0(13), 
  1549 ;;  number_of_da    2    7[BANK0 ] int 
  1550 ;;  bus_number      2    9[BANK0 ] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  RxData          1   16[BANK0 ] PTR struct .
  1553 ;;		 -> RxData0(10), 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      void 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 1F/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1563 ;;      Params:         0       5       0       0
  1564 ;;      Locals:         0       1       0       0
  1565 ;;      Temps:          0       5       0       0
  1566 ;;      Totals:         0      11       0       0
  1567 ;;Total ram usage:       11 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    4
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;;		_Reception_from_master_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _Organize_Datas
  1580  019F                     _Organize_Datas:	
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in _Organize_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  1584                           ;Organize_Datas@RxData stored from wreg
  1585  019F  00DA               	movwf	Organize_Datas@RxData
  1586                           
  1587                           ;Controller_Protocol.c: 22: OP[bus_number].count = 1;
  1588  01A0  0853               	movf	Organize_Datas@bus_number,w
  1589  01A1  00D5               	movwf	??_Organize_Datas
  1590  01A2  3001               	movlw	1
  1591  01A3                     u1835:	
  1592  01A3  35D5               	lslf	??_Organize_Datas,f
  1593  01A4  3EFF               	addlw	-1
  1594  01A5  1D03               	skipz
  1595  01A6  29A3               	goto	u1835
  1596  01A7  3555               	lslf	??_Organize_Datas,w
  1597  01A8  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1598  01A9  0086               	movwf	6
  1599  01AA  0187               	clrf	7
  1600  01AB  3001               	movlw	1
  1601  01AC  3FC0               	movwi [0]fsr1
  1602  01AD  3000               	movlw	0
  1603  01AE  3FC1               	movwi [1]fsr1
  1604                           
  1605                           ;Controller_Protocol.c: 23: for (OP[bus_number].num = 0; OP[bus_number].num < number_of_
      +                          data; OP[bus_number].num++) {
  1606  01AF  0853               	movf	Organize_Datas@bus_number,w
  1607  01B0  00D5               	movwf	??_Organize_Datas
  1608  01B1  3001               	movlw	1
  1609  01B2                     u1845:	
  1610  01B2  35D5               	lslf	??_Organize_Datas,f
  1611  01B3  3EFF               	addlw	-1
  1612  01B4  1D03               	skipz
  1613  01B5  29B2               	goto	u1845
  1614  01B6  3555               	lslf	??_Organize_Datas,w
  1615  01B7  3E29               	addlw	(low (_OP| 0))& (0+255)
  1616  01B8  0086               	movwf	6
  1617  01B9  0187               	clrf	7
  1618  01BA  3000               	movlw	0
  1619  01BB  3FC0               	movwi [0]fsr1
  1620  01BC  3FC1               	movwi [1]fsr1
  1621  01BD                     l126:	
  1622  01BD  0853               	movf	Organize_Datas@bus_number,w
  1623  01BE  00D5               	movwf	??_Organize_Datas
  1624  01BF  3001               	movlw	1
  1625  01C0                     u2015:	
  1626  01C0  35D5               	lslf	??_Organize_Datas,f
  1627  01C1  3EFF               	addlw	-1
  1628  01C2  1D03               	skipz
  1629  01C3  29C0               	goto	u2015
  1630  01C4  3555               	lslf	??_Organize_Datas,w
  1631  01C5  3E29               	addlw	(low (_OP| 0))& (0+255)
  1632  01C6  0086               	movwf	6
  1633  01C7  0187               	clrf	7
  1634  01C8  3F40               	moviw [0]fsr1
  1635  01C9  00D6               	movwf	??_Organize_Datas+1
  1636  01CA  3F41               	moviw [1]fsr1
  1637  01CB  00D7               	movwf	??_Organize_Datas+2
  1638  01CC  0857               	movf	??_Organize_Datas+2,w
  1639  01CD  3A80               	xorlw	128
  1640  01CE  00D8               	movwf	??_Organize_Datas+3
  1641  01CF  0852               	movf	Organize_Datas@number_of_data+1,w
  1642  01D0  3A80               	xorlw	128
  1643  01D1  0258               	subwf	??_Organize_Datas+3,w
  1644  01D2  1D03               	skipz
  1645  01D3  29D6               	goto	u2025
  1646  01D4  0851               	movf	Organize_Datas@number_of_data,w
  1647  01D5  0256               	subwf	??_Organize_Datas+1,w
  1648  01D6                     u2025:	
  1649  01D6  1803               	btfsc	3,0
  1650  01D7  0008               	return
  1651                           
  1652                           ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number
      +                          ].count].upper_data;
  1653  01D8  0020               	movlb	0	; select bank0
  1654  01D9  0853               	movf	Organize_Datas@bus_number,w
  1655  01DA  00D5               	movwf	??_Organize_Datas
  1656  01DB  3001               	movlw	1
  1657  01DC                     u1855:	
  1658  01DC  35D5               	lslf	??_Organize_Datas,f
  1659  01DD  3EFF               	addlw	-1
  1660  01DE  1D03               	skipz
  1661  01DF  29DC               	goto	u1855
  1662  01E0  3555               	lslf	??_Organize_Datas,w
  1663  01E1  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1664  01E2  0086               	movwf	6
  1665  01E3  0187               	clrf	7
  1666  01E4  0801               	movf	1,w
  1667  01E5  0750               	addwf	Organize_Datas@Buffer,w
  1668  01E6  00D6               	movwf	??_Organize_Datas+1
  1669  01E7  0856               	movf	??_Organize_Datas+1,w
  1670  01E8  0086               	movwf	6
  1671  01E9  0187               	clrf	7
  1672  01EA  0E01               	swapf	1,w
  1673  01EB  390F               	andlw	15
  1674  01EC  00D7               	movwf	??_Organize_Datas+2
  1675  01ED  0853               	movf	Organize_Datas@bus_number,w
  1676  01EE  00D8               	movwf	??_Organize_Datas+3
  1677  01EF  3001               	movlw	1
  1678  01F0                     u1865:	
  1679  01F0  35D8               	lslf	??_Organize_Datas+3,f
  1680  01F1  3EFF               	addlw	-1
  1681  01F2  1D03               	skipz
  1682  01F3  29F0               	goto	u1865
  1683  01F4  3558               	lslf	??_Organize_Datas+3,w
  1684  01F5  3E29               	addlw	(low (_OP| 0))& (0+255)
  1685  01F6  0086               	movwf	6
  1686  01F7  0187               	clrf	7
  1687  01F8  3501               	lslf	1,w
  1688  01F9  075A               	addwf	Organize_Datas@RxData,w
  1689  01FA  00D9               	movwf	??_Organize_Datas+4
  1690  01FB  0859               	movf	??_Organize_Datas+4,w
  1691  01FC  0086               	movwf	6
  1692  01FD  0187               	clrf	7
  1693  01FE  0ED7               	swapf	??_Organize_Datas+2,f
  1694  01FF  0801               	movf	1,w
  1695  0200  0657               	xorwf	??_Organize_Datas+2,w
  1696  0201  390F               	andlw	-241
  1697  0202  0657               	xorwf	??_Organize_Datas+2,w
  1698  0203  0081               	movwf	1
  1699                           
  1700                           ;Controller_Protocol.c: 25: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number
      +                          ].count + 1].upper_data;
  1701  0204  0853               	movf	Organize_Datas@bus_number,w
  1702  0205  00D5               	movwf	??_Organize_Datas
  1703  0206  3001               	movlw	1
  1704  0207                     u1875:	
  1705  0207  35D5               	lslf	??_Organize_Datas,f
  1706  0208  3EFF               	addlw	-1
  1707  0209  1D03               	skipz
  1708  020A  2A07               	goto	u1875
  1709  020B  3555               	lslf	??_Organize_Datas,w
  1710  020C  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1711  020D  0086               	movwf	6
  1712  020E  0187               	clrf	7
  1713  020F  0801               	movf	1,w
  1714  0210  0750               	addwf	Organize_Datas@Buffer,w
  1715  0211  00D6               	movwf	??_Organize_Datas+1
  1716  0212  0A56               	incf	??_Organize_Datas+1,w
  1717  0213  0086               	movwf	6
  1718  0214  0187               	clrf	7
  1719  0215  0E01               	swapf	1,w
  1720  0216  390F               	andlw	15
  1721  0217  00D7               	movwf	??_Organize_Datas+2
  1722  0218  0853               	movf	Organize_Datas@bus_number,w
  1723  0219  00D8               	movwf	??_Organize_Datas+3
  1724  021A  3001               	movlw	1
  1725  021B                     u1885:	
  1726  021B  35D8               	lslf	??_Organize_Datas+3,f
  1727  021C  3EFF               	addlw	-1
  1728  021D  1D03               	skipz
  1729  021E  2A1B               	goto	u1885
  1730  021F  3558               	lslf	??_Organize_Datas+3,w
  1731  0220  3E29               	addlw	(low (_OP| 0))& (0+255)
  1732  0221  0086               	movwf	6
  1733  0222  0187               	clrf	7
  1734  0223  3501               	lslf	1,w
  1735  0224  075A               	addwf	Organize_Datas@RxData,w
  1736  0225  00D9               	movwf	??_Organize_Datas+4
  1737  0226  0859               	movf	??_Organize_Datas+4,w
  1738  0227  0086               	movwf	6
  1739  0228  0187               	clrf	7
  1740  0229  0801               	movf	1,w
  1741  022A  0657               	xorwf	??_Organize_Datas+2,w
  1742  022B  39F0               	andlw	-16
  1743  022C  0657               	xorwf	??_Organize_Datas+2,w
  1744  022D  0081               	movwf	1
  1745                           
  1746                           ;Controller_Protocol.c: 26: if ((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus
      +                          _number].count + 1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
  1747  022E  0853               	movf	Organize_Datas@bus_number,w
  1748  022F  00D5               	movwf	??_Organize_Datas
  1749  0230  3001               	movlw	1
  1750  0231                     u1895:	
  1751  0231  35D5               	lslf	??_Organize_Datas,f
  1752  0232  3EFF               	addlw	-1
  1753  0233  1D03               	skipz
  1754  0234  2A31               	goto	u1895
  1755  0235  3555               	lslf	??_Organize_Datas,w
  1756  0236  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1757  0237  0086               	movwf	6
  1758  0238  0187               	clrf	7
  1759  0239  0801               	movf	1,w
  1760  023A  0750               	addwf	Organize_Datas@Buffer,w
  1761  023B  00D6               	movwf	??_Organize_Datas+1
  1762  023C  0856               	movf	??_Organize_Datas+1,w
  1763  023D  0086               	movwf	6
  1764  023E  0187               	clrf	7
  1765  023F  0E01               	swapf	1,w
  1766  0240  390F               	andlw	15
  1767  0241  00D7               	movwf	??_Organize_Datas+2
  1768  0242  0853               	movf	Organize_Datas@bus_number,w
  1769  0243  00D8               	movwf	??_Organize_Datas+3
  1770  0244  3001               	movlw	1
  1771  0245                     u1905:	
  1772  0245  35D8               	lslf	??_Organize_Datas+3,f
  1773  0246  3EFF               	addlw	-1
  1774  0247  1D03               	skipz
  1775  0248  2A45               	goto	u1905
  1776  0249  3558               	lslf	??_Organize_Datas+3,w
  1777  024A  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1778  024B  0086               	movwf	6
  1779  024C  0187               	clrf	7
  1780  024D  0801               	movf	1,w
  1781  024E  0750               	addwf	Organize_Datas@Buffer,w
  1782  024F  00D9               	movwf	??_Organize_Datas+4
  1783  0250  0A59               	incf	??_Organize_Datas+4,w
  1784  0251  0086               	movwf	6
  1785  0252  0187               	clrf	7
  1786  0253  0801               	movf	1,w
  1787  0254  390F               	andlw	15
  1788  0255  0457               	iorwf	??_Organize_Datas+2,w
  1789  0256  3A0F               	xorlw	15
  1790  0257  1D03               	skipz
  1791  0258  2A6C               	goto	l1386
  1792  0259  0853               	movf	Organize_Datas@bus_number,w
  1793  025A  00D5               	movwf	??_Organize_Datas
  1794  025B  3001               	movlw	1
  1795  025C                     u1925:	
  1796  025C  35D5               	lslf	??_Organize_Datas,f
  1797  025D  3EFF               	addlw	-1
  1798  025E  1D03               	skipz
  1799  025F  2A5C               	goto	u1925
  1800  0260  3555               	lslf	??_Organize_Datas,w
  1801  0261  3E29               	addlw	(low (_OP| 0))& (0+255)
  1802  0262  0086               	movwf	6
  1803  0263  0187               	clrf	7
  1804  0264  3501               	lslf	1,w
  1805  0265  075A               	addwf	Organize_Datas@RxData,w
  1806  0266  00D6               	movwf	??_Organize_Datas+1
  1807  0267  0A56               	incf	??_Organize_Datas+1,w
  1808  0268  0086               	movwf	6
  1809  0269  0187               	clrf	7
  1810  026A  1001               	bcf	1,0
  1811  026B  2A7E               	goto	l129
  1812  026C                     l1386:	
  1813                           
  1814                           ;Controller_Protocol.c: 27: else RxData[OP[bus_number].num].UD_error = 1;
  1815  026C  0853               	movf	Organize_Datas@bus_number,w
  1816  026D  00D5               	movwf	??_Organize_Datas
  1817  026E  3001               	movlw	1
  1818  026F                     u1935:	
  1819  026F  35D5               	lslf	??_Organize_Datas,f
  1820  0270  3EFF               	addlw	-1
  1821  0271  1D03               	skipz
  1822  0272  2A6F               	goto	u1935
  1823  0273  3555               	lslf	??_Organize_Datas,w
  1824  0274  3E29               	addlw	(low (_OP| 0))& (0+255)
  1825  0275  0086               	movwf	6
  1826  0276  0187               	clrf	7
  1827  0277  3501               	lslf	1,w
  1828  0278  075A               	addwf	Organize_Datas@RxData,w
  1829  0279  00D6               	movwf	??_Organize_Datas+1
  1830  027A  0A56               	incf	??_Organize_Datas+1,w
  1831  027B  0086               	movwf	6
  1832  027C  0187               	clrf	7
  1833  027D  1401               	bsf	1,0
  1834  027E                     l129:	
  1835                           
  1836                           ;Controller_Protocol.c: 28: if ((Buffer[OP[bus_number].count + 1].upper_data | Buffer[OP
      +                          [bus_number].count + 2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
  1837  027E  0853               	movf	Organize_Datas@bus_number,w
  1838  027F  00D5               	movwf	??_Organize_Datas
  1839  0280  3001               	movlw	1
  1840  0281                     u1945:	
  1841  0281  35D5               	lslf	??_Organize_Datas,f
  1842  0282  3EFF               	addlw	-1
  1843  0283  1D03               	skipz
  1844  0284  2A81               	goto	u1945
  1845  0285  3555               	lslf	??_Organize_Datas,w
  1846  0286  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1847  0287  0086               	movwf	6
  1848  0288  0187               	clrf	7
  1849  0289  0801               	movf	1,w
  1850  028A  0750               	addwf	Organize_Datas@Buffer,w
  1851  028B  00D6               	movwf	??_Organize_Datas+1
  1852  028C  0A56               	incf	??_Organize_Datas+1,w
  1853  028D  0086               	movwf	6
  1854  028E  0187               	clrf	7
  1855  028F  0E01               	swapf	1,w
  1856  0290  390F               	andlw	15
  1857  0291  00D7               	movwf	??_Organize_Datas+2
  1858  0292  0853               	movf	Organize_Datas@bus_number,w
  1859  0293  00D8               	movwf	??_Organize_Datas+3
  1860  0294  3001               	movlw	1
  1861  0295                     u1955:	
  1862  0295  35D8               	lslf	??_Organize_Datas+3,f
  1863  0296  3EFF               	addlw	-1
  1864  0297  1D03               	skipz
  1865  0298  2A95               	goto	u1955
  1866  0299  3558               	lslf	??_Organize_Datas+3,w
  1867  029A  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1868  029B  0086               	movwf	6
  1869  029C  0187               	clrf	7
  1870  029D  0801               	movf	1,w
  1871  029E  0750               	addwf	Organize_Datas@Buffer,w
  1872  029F  00D9               	movwf	??_Organize_Datas+4
  1873  02A0  0859               	movf	??_Organize_Datas+4,w
  1874  02A1  3E02               	addlw	2
  1875  02A2  0086               	movwf	6
  1876  02A3  0187               	clrf	7
  1877  02A4  0801               	movf	1,w
  1878  02A5  390F               	andlw	15
  1879  02A6  0457               	iorwf	??_Organize_Datas+2,w
  1880  02A7  3A0F               	xorlw	15
  1881  02A8  1D03               	skipz
  1882  02A9  2ABD               	goto	l1390
  1883  02AA  0853               	movf	Organize_Datas@bus_number,w
  1884  02AB  00D5               	movwf	??_Organize_Datas
  1885  02AC  3001               	movlw	1
  1886  02AD                     u1975:	
  1887  02AD  35D5               	lslf	??_Organize_Datas,f
  1888  02AE  3EFF               	addlw	-1
  1889  02AF  1D03               	skipz
  1890  02B0  2AAD               	goto	u1975
  1891  02B1  3555               	lslf	??_Organize_Datas,w
  1892  02B2  3E29               	addlw	(low (_OP| 0))& (0+255)
  1893  02B3  0086               	movwf	6
  1894  02B4  0187               	clrf	7
  1895  02B5  3501               	lslf	1,w
  1896  02B6  075A               	addwf	Organize_Datas@RxData,w
  1897  02B7  00D6               	movwf	??_Organize_Datas+1
  1898  02B8  0A56               	incf	??_Organize_Datas+1,w
  1899  02B9  0086               	movwf	6
  1900  02BA  0187               	clrf	7
  1901  02BB  1081               	bcf	1,1
  1902  02BC  2ACF               	goto	l131
  1903  02BD                     l1390:	
  1904                           
  1905                           ;Controller_Protocol.c: 29: else RxData[OP[bus_number].num].LD_error = 1;
  1906  02BD  0853               	movf	Organize_Datas@bus_number,w
  1907  02BE  00D5               	movwf	??_Organize_Datas
  1908  02BF  3001               	movlw	1
  1909  02C0                     u1985:	
  1910  02C0  35D5               	lslf	??_Organize_Datas,f
  1911  02C1  3EFF               	addlw	-1
  1912  02C2  1D03               	skipz
  1913  02C3  2AC0               	goto	u1985
  1914  02C4  3555               	lslf	??_Organize_Datas,w
  1915  02C5  3E29               	addlw	(low (_OP| 0))& (0+255)
  1916  02C6  0086               	movwf	6
  1917  02C7  0187               	clrf	7
  1918  02C8  3501               	lslf	1,w
  1919  02C9  075A               	addwf	Organize_Datas@RxData,w
  1920  02CA  00D6               	movwf	??_Organize_Datas+1
  1921  02CB  0A56               	incf	??_Organize_Datas+1,w
  1922  02CC  0086               	movwf	6
  1923  02CD  0187               	clrf	7
  1924  02CE  1481               	bsf	1,1
  1925  02CF                     l131:	
  1926                           
  1927                           ;Controller_Protocol.c: 30: OP[bus_number].count += 2;
  1928  02CF  0853               	movf	Organize_Datas@bus_number,w
  1929  02D0  00D5               	movwf	??_Organize_Datas
  1930  02D1  3001               	movlw	1
  1931  02D2                     u1995:	
  1932  02D2  35D5               	lslf	??_Organize_Datas,f
  1933  02D3  3EFF               	addlw	-1
  1934  02D4  1D03               	skipz
  1935  02D5  2AD2               	goto	u1995
  1936  02D6  3555               	lslf	??_Organize_Datas,w
  1937  02D7  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  1938  02D8  0086               	movwf	6
  1939  02D9  0187               	clrf	7
  1940  02DA  3002               	movlw	2
  1941  02DB  0781               	addwf	1,f
  1942  02DC  3141               	addfsr 1,1
  1943  02DD  1803               	skipnc
  1944  02DE  0A81               	incf	1,f
  1945  02DF  0853               	movf	Organize_Datas@bus_number,w
  1946  02E0  00D5               	movwf	??_Organize_Datas
  1947  02E1  3001               	movlw	1
  1948  02E2                     u2005:	
  1949  02E2  35D5               	lslf	??_Organize_Datas,f
  1950  02E3  3EFF               	addlw	-1
  1951  02E4  1D03               	skipz
  1952  02E5  2AE2               	goto	u2005
  1953  02E6  3555               	lslf	??_Organize_Datas,w
  1954  02E7  3E29               	addlw	(low (_OP| 0))& (0+255)
  1955  02E8  0086               	movwf	6
  1956  02E9  0187               	clrf	7
  1957  02EA  3001               	movlw	1
  1958  02EB  0781               	addwf	1,f
  1959  02EC  3141               	addfsr 1,1
  1960  02ED  1803               	skipnc
  1961  02EE  0A81               	incf	1,f
  1962  02EF  29BD               	goto	l126
  1963  02F0                     __end_of_Organize_Datas:	
  1964                           
  1965                           	psect	text5
  1966  04F7                     __ptext5:	
  1967 ;; *************** function _Initialize *****************
  1968 ;; Defined at:
  1969 ;;		line 5 in file "Init.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : B1F/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1983 ;;      Params:         0       0       0       0
  1984 ;;      Locals:         0       0       0       0
  1985 ;;      Temps:          0       0       0       0
  1986 ;;      Totals:         0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    6
  1990 ;; This function calls:
  1991 ;;		_Initialize_Parameters
  1992 ;;		_Oscillator_Initialize
  1993 ;;		_Pin_Initialize
  1994 ;;		_UART_Initialize
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _Initialize
  2002  04F7                     _Initialize:	
  2003                           
  2004                           ;Init.c: 7: Oscillator_Initialize();
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2008  04F7  3185  2525  3184   	fcall	_Oscillator_Initialize
  2009                           
  2010                           ;Init.c: 8: Pin_Initialize();
  2011  04FA  3184  24C3  3184   	fcall	_Pin_Initialize
  2012                           
  2013                           ;Init.c: 9: UART_Initialize();
  2014  04FD  3184  24D5  3184   	fcall	_UART_Initialize
  2015                           
  2016                           ;Init.c: 10: Initialize_Parameters();
  2017  0500  3183  2350         	fcall	_Initialize_Parameters
  2018  0502  0008               	return
  2019  0503                     __end_of_Initialize:	
  2020                           
  2021                           	psect	text6
  2022  04D5                     __ptext6:	
  2023 ;; *************** function _UART_Initialize *****************
  2024 ;; Defined at:
  2025 ;;		line 41 in file "Init.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2
  2034 ;; Tracked objects:
  2035 ;;		On entry : B1F/1
  2036 ;;		On exit  : B1F/3
  2037 ;;		Unchanged: B00/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2039 ;;      Params:         0       0       0       0
  2040 ;;      Locals:         0       0       0       0
  2041 ;;      Temps:          0       0       0       0
  2042 ;;      Totals:         0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    4
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_Initialize
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _UART_Initialize
  2055  04D5                     _UART_Initialize:	
  2056                           
  2057                           ;Init.c: 44: PIE1bits.RCIE = 0;
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in _UART_Initialize: [wreg+status,2]
  2061  04D5  1291               	bcf	17,5	;volatile
  2062                           
  2063                           ;Init.c: 47: SPBRGH = 0x00;
  2064  04D6  0023               	movlb	3	; select bank3
  2065  04D7  019C               	clrf	28	;volatile
  2066                           
  2067                           ;Init.c: 48: SPBRGL = 0x8A;
  2068  04D8  308A               	movlw	138
  2069  04D9  009B               	movwf	27	;volatile
  2070                           
  2071                           ;Init.c: 49: TXSTAbits.BRGH = 1;
  2072  04DA  151E               	bsf	30,2	;volatile
  2073                           
  2074                           ;Init.c: 50: BAUDCONbits.BRG16 = 1;
  2075  04DB  159F               	bsf	31,3	;volatile
  2076                           
  2077                           ;Init.c: 53: RCSTAbits.SPEN = 1;
  2078  04DC  179D               	bsf	29,7	;volatile
  2079                           
  2080                           ;Init.c: 54: RCSTAbits.CREN = 1;
  2081  04DD  161D               	bsf	29,4	;volatile
  2082                           
  2083                           ;Init.c: 55: TXSTAbits.SYNC = 0;
  2084  04DE  121E               	bcf	30,4	;volatile
  2085                           
  2086                           ;Init.c: 58: INTCONbits.GIE = 1;
  2087  04DF  178B               	bsf	11,7	;volatile
  2088                           
  2089                           ;Init.c: 59: INTCONbits.PEIE = 1;
  2090  04E0  170B               	bsf	11,6	;volatile
  2091                           
  2092                           ;Init.c: 60: PIE1bits.RCIE = 1;
  2093  04E1  0021               	movlb	1	; select bank1
  2094  04E2  1691               	bsf	17,5	;volatile
  2095                           
  2096                           ;Init.c: 63: RCSTAbits.CREN = 1;
  2097  04E3  0023               	movlb	3	; select bank3
  2098  04E4  161D               	bsf	29,4	;volatile
  2099  04E5  0008               	return
  2100  04E6                     __end_of_UART_Initialize:	
  2101                           
  2102                           	psect	text7
  2103  04C3                     __ptext7:	
  2104 ;; *************** function _Pin_Initialize *****************
  2105 ;; Defined at:
  2106 ;;		line 18 in file "Init.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		status,2
  2115 ;; Tracked objects:
  2116 ;;		On entry : B1F/1
  2117 ;;		On exit  : B1F/1
  2118 ;;		Unchanged: B00/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2120 ;;      Params:         0       0       0       0
  2121 ;;      Locals:         0       0       0       0
  2122 ;;      Temps:          0       0       0       0
  2123 ;;      Totals:         0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    4
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_Initialize
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _Pin_Initialize
  2136  04C3                     _Pin_Initialize:	
  2137                           
  2138                           ;Init.c: 20: ANSELA = 0x00;
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _Pin_Initialize: [status,2]
  2142  04C3  0023               	movlb	3	; select bank3
  2143  04C4  018C               	clrf	12	;volatile
  2144                           
  2145                           ;Init.c: 21: ANSELB = 0x00;
  2146  04C5  018D               	clrf	13	;volatile
  2147                           
  2148                           ;Init.c: 23: TRISCbits.TRISC7 = 1;
  2149  04C6  0021               	movlb	1	; select bank1
  2150  04C7  178E               	bsf	14,7	;volatile
  2151                           
  2152                           ;Init.c: 25: TRISAbits.TRISA0 = 0;
  2153  04C8  100C               	bcf	12,0	;volatile
  2154                           
  2155                           ;Init.c: 26: TRISAbits.TRISA1 = 0;
  2156  04C9  108C               	bcf	12,1	;volatile
  2157                           
  2158                           ;Init.c: 27: TRISAbits.TRISA2 = 0;
  2159  04CA  110C               	bcf	12,2	;volatile
  2160                           
  2161                           ;Init.c: 28: TRISAbits.TRISA3 = 0;
  2162  04CB  118C               	bcf	12,3	;volatile
  2163                           
  2164                           ;Init.c: 29: TRISBbits.TRISB5 = 0;
  2165  04CC  128D               	bcf	13,5	;volatile
  2166                           
  2167                           ;Init.c: 30: TRISBbits.TRISB4 = 0;
  2168  04CD  120D               	bcf	13,4	;volatile
  2169                           
  2170                           ;Init.c: 31: TRISBbits.TRISB2 = 0;
  2171  04CE  110D               	bcf	13,2	;volatile
  2172                           
  2173                           ;Init.c: 32: TRISBbits.TRISB3 = 0;
  2174  04CF  118D               	bcf	13,3	;volatile
  2175                           
  2176                           ;Init.c: 34: TRISBbits.TRISB1 = 0;
  2177  04D0  108D               	bcf	13,1	;volatile
  2178                           
  2179                           ;Init.c: 35: TRISBbits.TRISB0 = 0;
  2180  04D1  100D               	bcf	13,0	;volatile
  2181                           
  2182                           ;Init.c: 36: TRISCbits.TRISC5 = 0;
  2183  04D2  128E               	bcf	14,5	;volatile
  2184                           
  2185                           ;Init.c: 38: TRISCbits.TRISC4 = 0;
  2186  04D3  120E               	bcf	14,4	;volatile
  2187  04D4  0008               	return
  2188  04D5                     __end_of_Pin_Initialize:	
  2189                           
  2190                           	psect	text8
  2191  0525                     __ptext8:	
  2192 ;; *************** function _Oscillator_Initialize *****************
  2193 ;; Defined at:
  2194 ;;		line 13 in file "Init.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg
  2203 ;; Tracked objects:
  2204 ;;		On entry : B1F/0
  2205 ;;		On exit  : B1F/1
  2206 ;;		Unchanged: B00/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2208 ;;      Params:         0       0       0       0
  2209 ;;      Locals:         0       0       0       0
  2210 ;;      Temps:          0       0       0       0
  2211 ;;      Totals:         0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    4
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_Initialize
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _Oscillator_Initialize
  2224  0525                     _Oscillator_Initialize:	
  2225                           
  2226                           ;Init.c: 15: OSCCON = 0xF0;
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in _Oscillator_Initialize: [wreg]
  2230  0525  30F0               	movlw	240
  2231  0526  0021               	movlb	1	; select bank1
  2232  0527  0099               	movwf	25	;volatile
  2233  0528  0008               	return
  2234  0529                     __end_of_Oscillator_Initialize:	
  2235                           
  2236                           	psect	text9
  2237  0350                     __ptext9:	
  2238 ;; *************** function _Initialize_Parameters *****************
  2239 ;; Defined at:
  2240 ;;		line 116 in file "Controller_Protocol.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : B1F/3
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2254 ;;      Params:         0       0       0       0
  2255 ;;      Locals:         0       0       0       0
  2256 ;;      Temps:          0       1       0       0
  2257 ;;      Totals:         0       1       0       0
  2258 ;;Total ram usage:        1 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    5
  2261 ;; This function calls:
  2262 ;;		___bmul
  2263 ;; This function is called by:
  2264 ;;		_Initialize
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _Initialize_Parameters
  2270  0350                     _Initialize_Parameters:	
  2271                           
  2272                           ;Controller_Protocol.c: 117: static int i;;Controller_Protocol.c: 119: for (i = 0; i < 1
      +                          ; i++)OP[i].count = 1;
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _Initialize_Parameters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2276  0350  0020               	movlb	0	; select bank0
  2277  0351  01AD               	clrf	Initialize_Parameters@i
  2278  0352  01AE               	clrf	Initialize_Parameters@i+1
  2279  0353                     l1398:	
  2280  0353  0020               	movlb	0	; select bank0
  2281  0354  082D               	movf	Initialize_Parameters@i,w
  2282  0355  00D4               	movwf	??_Initialize_Parameters
  2283  0356  3001               	movlw	1
  2284  0357                     u2035:	
  2285  0357  35D4               	lslf	??_Initialize_Parameters,f
  2286  0358  3EFF               	addlw	-1
  2287  0359  1D03               	skipz
  2288  035A  2B57               	goto	u2035
  2289  035B  3554               	lslf	??_Initialize_Parameters,w
  2290  035C  3E2B               	addlw	(low ((_OP| 0+2)))& (0+255)
  2291  035D  0086               	movwf	6
  2292  035E  0187               	clrf	7
  2293  035F  3001               	movlw	1
  2294  0360  3FC0               	movwi [0]fsr1
  2295  0361  3000               	movlw	0
  2296  0362  3FC1               	movwi [1]fsr1
  2297  0363  3001               	movlw	1
  2298  0364  07AD               	addwf	Initialize_Parameters@i,f
  2299  0365  3000               	movlw	0
  2300  0366  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2301  0367  082E               	movf	Initialize_Parameters@i+1,w
  2302  0368  3A80               	xorlw	128
  2303  0369  00D4               	movwf	??_Initialize_Parameters
  2304  036A  3080               	movlw	128
  2305  036B  0254               	subwf	??_Initialize_Parameters,w
  2306  036C  1D03               	skipz
  2307  036D  2B70               	goto	u2045
  2308  036E  3001               	movlw	1
  2309  036F  022D               	subwf	Initialize_Parameters@i,w
  2310  0370                     u2045:	
  2311  0370  1C03               	skipc
  2312  0371  2B53               	goto	l1398
  2313                           
  2314                           ;Controller_Protocol.c: 120: for (i = 0; i < 1; i++) {
  2315  0372  0020               	movlb	0	; select bank0
  2316  0373  01AD               	clrf	Initialize_Parameters@i
  2317  0374  01AE               	clrf	Initialize_Parameters@i+1
  2318  0375                     l1410:	
  2319                           
  2320                           ;Controller_Protocol.c: 121: StP[i].Buffer_count = 1;
  2321  0375  0020               	movlb	0	; select bank0
  2322  0376  082D               	movf	Initialize_Parameters@i,w
  2323  0377  00D4               	movwf	??_Initialize_Parameters
  2324  0378  3001               	movlw	1
  2325  0379                     u2055:	
  2326  0379  35D4               	lslf	??_Initialize_Parameters,f
  2327  037A  3EFF               	addlw	-1
  2328  037B  1D03               	skipz
  2329  037C  2B79               	goto	u2055
  2330  037D  3554               	lslf	??_Initialize_Parameters,w
  2331  037E  3E25               	addlw	(low (_StP| 0))& (0+255)
  2332  037F  0086               	movwf	6
  2333  0380  0187               	clrf	7
  2334  0381  3001               	movlw	1
  2335  0382  3FC0               	movwi [0]fsr1
  2336  0383  3000               	movlw	0
  2337  0384  3FC1               	movwi [1]fsr1
  2338                           
  2339                           ;Controller_Protocol.c: 122: SeP[i].byte_data_complete = 1;
  2340  0385  3005               	movlw	5
  2341  0386  00D4               	movwf	??_Initialize_Parameters
  2342  0387  0854               	movf	??_Initialize_Parameters,w
  2343  0388  00D0               	movwf	___bmul@multiplicand
  2344  0389  082D               	movf	Initialize_Parameters@i,w
  2345  038A  3184  24E6  3183   	fcall	___bmul
  2346  038D  3E24               	addlw	(low ((_SeP| 0+4)))& (0+255)
  2347  038E  0086               	movwf	6
  2348  038F  0187               	clrf	7
  2349  0390  0181               	clrf	1
  2350  0391  0A81               	incf	1,f
  2351  0392  3001               	movlw	1
  2352  0393  07AD               	addwf	Initialize_Parameters@i,f
  2353  0394  3000               	movlw	0
  2354  0395  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2355  0396  082E               	movf	Initialize_Parameters@i+1,w
  2356  0397  3A80               	xorlw	128
  2357  0398  00D4               	movwf	??_Initialize_Parameters
  2358  0399  3080               	movlw	128
  2359  039A  0254               	subwf	??_Initialize_Parameters,w
  2360  039B  1D03               	skipz
  2361  039C  2B9F               	goto	u2065
  2362  039D  3001               	movlw	1
  2363  039E  022D               	subwf	Initialize_Parameters@i,w
  2364  039F                     u2065:	
  2365  039F  1803               	btfsc	3,0
  2366  03A0  0008               	return
  2367  03A1  2B75               	goto	l1410
  2368  03A2                     __end_of_Initialize_Parameters:	
  2369                           
  2370                           	psect	text10
  2371  04E6                     __ptext10:	
  2372 ;; *************** function ___bmul *****************
  2373 ;; Defined at:
  2374 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  multiplier      1    wreg     unsigned char 
  2377 ;;  multiplicand    1    6[BANK0 ] unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  multiplier      1    9[BANK0 ] unsigned char 
  2380 ;;  product         1    8[BANK0 ] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      unsigned char 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 1F/0
  2387 ;;		On exit  : 1F/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2390 ;;      Params:         0       1       0       0
  2391 ;;      Locals:         0       2       0       0
  2392 ;;      Temps:          0       1       0       0
  2393 ;;      Totals:         0       4       0       0
  2394 ;;Total ram usage:        4 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    4
  2397 ;; This function calls:
  2398 ;;		Nothing
  2399 ;; This function is called by:
  2400 ;;		_Initialize_Parameters
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           
  2405                           ;psect for function ___bmul
  2406  04E6                     ___bmul:	
  2407                           
  2408                           ;incstack = 0
  2409                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2410                           ;___bmul@multiplier stored from wreg
  2411  04E6  00D3               	movwf	___bmul@multiplier
  2412  04E7  01D2               	clrf	___bmul@product
  2413  04E8                     l1368:	
  2414  04E8  1C53               	btfss	___bmul@multiplier,0
  2415  04E9  2CEE               	goto	l1372
  2416  04EA  0850               	movf	___bmul@multiplicand,w
  2417  04EB  00D1               	movwf	??___bmul
  2418  04EC  0851               	movf	??___bmul,w
  2419  04ED  07D2               	addwf	___bmul@product,f
  2420  04EE                     l1372:	
  2421  04EE  1003               	clrc
  2422  04EF  0DD0               	rlf	___bmul@multiplicand,f
  2423  04F0  1003               	clrc
  2424  04F1  0CD3               	rrf	___bmul@multiplier,f
  2425  04F2  0853               	movf	___bmul@multiplier,w
  2426  04F3  1D03               	btfss	3,2
  2427  04F4  2CE8               	goto	l1368
  2428  04F5  0852               	movf	___bmul@product,w
  2429  04F6  0008               	return
  2430  04F7                     __end_of___bmul:	
  2431                           
  2432                           	psect	text11
  2433  0488                     __ptext11:	
  2434 ;; *************** function _ChangeAddress *****************
  2435 ;; Defined at:
  2436 ;;		line 56 in file "main.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2    6[BANK0 ] int 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 1F/0
  2447 ;;		On exit  : 1F/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2450 ;;      Params:         0       2       0       0
  2451 ;;      Locals:         0       0       0       0
  2452 ;;      Temps:          0       2       0       0
  2453 ;;      Totals:         0       4       0       0
  2454 ;;Total ram usage:        4 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    4
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _ChangeAddress
  2466  0488                     _ChangeAddress:	
  2467                           
  2468                           ;main.c: 58: static uint8_t Addresses[8] = {0, 1, 0, 2, 0, 3, 0, 4};;main.c: 59: static 
      +                          int AddCnt = 0;;main.c: 61: AddCnt++;
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _ChangeAddress: [wreg+fsr1l+fsr1h+status,2+status,0]
  2472  0488  3001               	movlw	1
  2473  0489  07AF               	addwf	ChangeAddress@AddCnt,f
  2474  048A  3000               	movlw	0
  2475  048B  3DB0               	addwfc	ChangeAddress@AddCnt+1,f
  2476                           
  2477                           ;main.c: 62: if (AddCnt >= 8)
  2478  048C  0830               	movf	ChangeAddress@AddCnt+1,w
  2479  048D  3A80               	xorlw	128
  2480  048E  00D2               	movwf	??_ChangeAddress
  2481  048F  3080               	movlw	128
  2482  0490  0252               	subwf	??_ChangeAddress,w
  2483  0491  3008               	movlw	8
  2484  0492  1903               	btfsc	3,2
  2485  0493  022F               	subwf	ChangeAddress@AddCnt,w
  2486  0494  1C03               	skipc
  2487  0495  2C99               	goto	l1496
  2488                           
  2489                           ;main.c: 63: {;main.c: 64: AddCnt = 0;
  2490  0496  0020               	movlb	0	; select bank0
  2491  0497  01AF               	clrf	ChangeAddress@AddCnt
  2492  0498  01B0               	clrf	ChangeAddress@AddCnt+1
  2493  0499                     l1496:	
  2494                           
  2495                           ;main.c: 65: };main.c: 67: return Addresses[AddCnt];
  2496  0499  0020               	movlb	0	; select bank0
  2497  049A  082F               	movf	ChangeAddress@AddCnt,w
  2498  049B  3E60               	addlw	(low (ChangeAddress@Addresses| 0))& (0+255)
  2499  049C  0086               	movwf	6
  2500  049D  0187               	clrf	7
  2501  049E  0801               	movf	1,w
  2502  049F  00D2               	movwf	??_ChangeAddress
  2503  04A0  01D3               	clrf	??_ChangeAddress+1
  2504  04A1  0852               	movf	??_ChangeAddress,w
  2505  04A2  00D0               	movwf	?_ChangeAddress
  2506  04A3  0853               	movf	??_ChangeAddress+1,w
  2507  04A4  00D1               	movwf	?_ChangeAddress+1
  2508  04A5  0008               	return
  2509  04A6                     __end_of_ChangeAddress:	
  2510                           
  2511                           	psect	intentry
  2512  0004                     __pintentry:	
  2513 ;; *************** function _INTERRUPT_HANDLER *****************
  2514 ;; Defined at:
  2515 ;;		line 99 in file "main.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 1F/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2529 ;;      Params:         0       0       0       0
  2530 ;;      Locals:         0       0       0       0
  2531 ;;      Temps:          0       0       0       0
  2532 ;;      Totals:         0       0       0       0
  2533 ;;Total ram usage:        0 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		_Reception_from_master
  2538 ;; This function is called by:
  2539 ;;		Interrupt level 1
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543  0004                     _INTERRUPT_HANDLER:	
  2544                           
  2545                           ;incstack = 0
  2546  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2547                           
  2548                           ; Regs used in _INTERRUPT_HANDLER: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2549  0005  3180               	pagesel	$
  2550                           
  2551                           ;main.c: 101: if (PIR1bits.RCIF)
  2552  0006  0020               	movlb	0	; select bank0
  2553  0007  1E91               	btfss	17,5	;volatile
  2554  0008  280C               	goto	i1l63
  2555                           
  2556                           ;main.c: 102: {;main.c: 103: Reception_from_master(0x00);
  2557  0009  3000               	movlw	0
  2558  000A  3183  23ED         	fcall	_Reception_from_master
  2559  000C                     i1l63:	
  2560                           ;main.c: 104: }
  2561                           
  2562  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2563  000D  0009               	retfie
  2564  000E                     __end_of_INTERRUPT_HANDLER:	
  2565                           
  2566                           	psect	text13
  2567  03ED                     __ptext13:	
  2568 ;; *************** function _Reception_from_master *****************
  2569 ;; Defined at:
  2570 ;;		line 36 in file "communication.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  slave_addres    1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  slave_addres    1    4[BANK0 ] unsigned char 
  2575 ;;  error_comple    1    5[BANK0 ] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 1F/0
  2582 ;;		On exit  : 1F/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2585 ;;      Params:         0       0       0       0
  2586 ;;      Locals:         0       2       0       0
  2587 ;;      Temps:          0       3       0       0
  2588 ;;      Totals:         0       5       0       0
  2589 ;;Total ram usage:        5 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    2
  2592 ;; This function calls:
  2593 ;;		_Store_Datas
  2594 ;;		_slave_address_check
  2595 ;; This function is called by:
  2596 ;;		_INTERRUPT_HANDLER
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _Reception_from_master
  2602  03ED                     _Reception_from_master:	
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in _Reception_from_master: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2606                           ;Reception_from_master@slave_address stored from wreg
  2607  03ED  00CE               	movwf	Reception_from_master@slave_address
  2608                           
  2609                           ;communication.c: 53: error_complete = Store_Datas(Buffer0, RCREG, 5 * 2 + 3, 0, EUSART_
      +                          ERROR_from_master);
  2610  03EE  0023               	movlb	3	; select bank3
  2611  03EF  0819               	movf	25,w	;volatile
  2612  03F0  0020               	movlb	0	; select bank0
  2613  03F1  00CB               	movwf	??_Reception_from_master
  2614  03F2  084B               	movf	??_Reception_from_master,w
  2615  03F3  00F1               	movwf	Store_Datas@received_data
  2616  03F4  300D               	movlw	13
  2617  03F5  00F2               	movwf	Store_Datas@number_of_receive_data
  2618  03F6  3000               	movlw	0
  2619  03F7  00F3               	movwf	Store_Datas@number_of_receive_data+1
  2620  03F8  3000               	movlw	0
  2621  03F9  00F4               	movwf	Store_Datas@bus_number
  2622  03FA  00F5               	movwf	Store_Datas@bus_number+1
  2623  03FB  3003               	movlw	low _EUSART_ERROR_from_master
  2624  03FC  00F6               	movwf	Store_Datas@EUSART_ERROR
  2625  03FD  3005               	movlw	high _EUSART_ERROR_from_master
  2626  03FE  00F7               	movwf	Store_Datas@EUSART_ERROR+1
  2627  03FF  3033               	movlw	(low (_Buffer0| 0))& (0+255)
  2628  0400  3180  2027  3183   	fcall	_Store_Datas
  2629  0403  0020               	movlb	0	; select bank0
  2630  0404  00CC               	movwf	??_Reception_from_master+1
  2631  0405  084C               	movf	??_Reception_from_master+1,w
  2632  0406  00CF               	movwf	Reception_from_master@error_complete
  2633                           
  2634                           ;communication.c: 56: if (error_complete == 1) {
  2635  0407  034F               	decf	Reception_from_master@error_complete,w
  2636  0408  1D03               	btfss	3,2
  2637  0409  2C0C               	goto	i1l1330
  2638  040A                     i1l1328:	
  2639                           
  2640                           ;communication.c: 57: Receive_data_count = 0;
  2641  040A  01B2               	clrf	Reception_from_master@Receive_data_count
  2642                           
  2643                           ;communication.c: 58: } else if ((error_complete == 2) && (Receive_data_count != (5 * 2 
      +                          + 3 - 1))) {
  2644  040B  2C27               	goto	i1l1340
  2645  040C                     i1l1330:	
  2646  040C  3002               	movlw	2
  2647  040D  064F               	xorwf	Reception_from_master@error_complete,w
  2648  040E  1D03               	btfss	3,2
  2649  040F  2C14               	goto	i1l1336
  2650  0410  300C               	movlw	12
  2651  0411  0632               	xorwf	Reception_from_master@Receive_data_count,w
  2652  0412  1D03               	btfss	3,2
  2653  0413  2C0A               	goto	i1l1328
  2654  0414                     i1l1336:	
  2655                           
  2656                           ;communication.c: 61: slave_different_flag = slave_address_check(Receive_data_count, sla
      +                          ve_address, slave_different_flag);
  2657  0414  084E               	movf	Reception_from_master@slave_address,w
  2658  0415  00CB               	movwf	??_Reception_from_master
  2659  0416  084B               	movf	??_Reception_from_master,w
  2660  0417  00F0               	movwf	slave_address_check@slave_address
  2661  0418  0868               	movf	_slave_different_flag,w
  2662  0419  00CC               	movwf	??_Reception_from_master+1
  2663  041A  084C               	movf	??_Reception_from_master+1,w
  2664  041B  00F1               	movwf	slave_address_check@slave_flag
  2665  041C  0832               	movf	Reception_from_master@Receive_data_count,w
  2666  041D  3184  2465  3183   	fcall	_slave_address_check
  2667  0420  00CD               	movwf	??_Reception_from_master+2
  2668  0421  084D               	movf	??_Reception_from_master+2,w
  2669  0422  00E8               	movwf	_slave_different_flag
  2670                           
  2671                           ;communication.c: 62: Receive_data_count++;
  2672  0423  3001               	movlw	1
  2673  0424  00CB               	movwf	??_Reception_from_master
  2674  0425  084B               	movf	??_Reception_from_master,w
  2675  0426  07B2               	addwf	Reception_from_master@Receive_data_count,f
  2676  0427                     i1l1340:	
  2677                           
  2678                           ;communication.c: 63: };communication.c: 65: if ((error_complete == 2) && (Receive_data_
      +                          count == 5 * 2 + 3)) {
  2679  0427  3002               	movlw	2
  2680  0428  064F               	xorwf	Reception_from_master@error_complete,w
  2681  0429  1D03               	btfss	3,2
  2682  042A  0008               	return
  2683  042B  300D               	movlw	13
  2684  042C  0632               	xorwf	Reception_from_master@Receive_data_count,w
  2685  042D  1D03               	btfss	3,2
  2686  042E  0008               	return
  2687                           
  2688                           ;communication.c: 66: Receive_flag = 0;
  2689  042F  01E9               	clrf	_Receive_flag
  2690                           
  2691                           ;communication.c: 67: Receive_data_count = 0;
  2692  0430  01B2               	clrf	Reception_from_master@Receive_data_count
  2693  0431  0008               	return
  2694  0432                     __end_of_Reception_from_master:	
  2695                           
  2696                           	psect	text14
  2697  0465                     __ptext14:	
  2698 ;; *************** function _slave_address_check *****************
  2699 ;; Defined at:
  2700 ;;		line 74 in file "communication.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  data_count      1    wreg     unsigned char 
  2703 ;;  slave_addres    1    0[COMMON] unsigned char 
  2704 ;;  slave_flag      1    1[COMMON] unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  data_count      1    5[COMMON] unsigned char 
  2707 ;;  sample_data     1    6[COMMON] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      unsigned char 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 1F/0
  2714 ;;		On exit  : 1F/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2717 ;;      Params:         2       0       0       0
  2718 ;;      Locals:         2       0       0       0
  2719 ;;      Temps:          3       0       0       0
  2720 ;;      Totals:         7       0       0       0
  2721 ;;Total ram usage:        7 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_Reception_from_master
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function _slave_address_check
  2732  0465                     _slave_address_check:	
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _slave_address_check: [wreg+status,2+status,0]
  2736                           ;slave_address_check@data_count stored from wreg
  2737  0465  00F5               	movwf	slave_address_check@data_count
  2738                           
  2739                           ;communication.c: 75: if (slave_flag == 2) {
  2740  0466  3002               	movlw	2
  2741  0467  0671               	xorwf	slave_address_check@slave_flag,w
  2742  0468  1D03               	btfss	3,2
  2743  0469  2C86               	goto	i1l1206
  2744                           
  2745                           ;communication.c: 76: if (data_count == 4) {
  2746  046A  3004               	movlw	4
  2747  046B  0675               	xorwf	slave_address_check@data_count,w
  2748  046C  1D03               	btfss	3,2
  2749  046D  2C84               	goto	i1l1200
  2750                           
  2751                           ;communication.c: 77: uint8_t sample_data = (Buffer0[1].upper_data << 4) | Buffer0[2].up
      +                          per_data;
  2752  046E  0E35               	swapf	_Buffer0+2,w
  2753  046F  390F               	andlw	15
  2754  0470  00F2               	movwf	??_slave_address_check
  2755  0471  0E34               	swapf	_Buffer0+1,w
  2756  0472  390F               	andlw	15
  2757  0473  00F3               	movwf	??_slave_address_check+1
  2758  0474  3003               	movlw	3
  2759  0475                     u146_25:	
  2760  0475  35F3               	lslf	??_slave_address_check+1,f
  2761  0476  3EFF               	addlw	-1
  2762  0477  1D03               	skipz
  2763  0478  2C75               	goto	u146_25
  2764  0479  3573               	lslf	??_slave_address_check+1,w
  2765  047A  0472               	iorwf	??_slave_address_check,w
  2766  047B  00F4               	movwf	??_slave_address_check+2
  2767  047C  0874               	movf	??_slave_address_check+2,w
  2768  047D  00F6               	movwf	slave_address_check@sample_data
  2769                           
  2770                           ;communication.c: 79: if (sample_data == slave_address) {
  2771  047E  0876               	movf	slave_address_check@sample_data,w
  2772  047F  0670               	xorwf	slave_address_check@slave_address,w
  2773  0480  1D03               	skipz
  2774  0481  2C84               	goto	i1l1200
  2775                           
  2776                           ;communication.c: 80: return 1;
  2777  0482  3001               	movlw	1
  2778  0483  0008               	return
  2779  0484                     i1l1200:	
  2780                           
  2781                           ;communication.c: 81: };communication.c: 82: };communication.c: 83: return 2;
  2782  0484  3002               	movlw	2
  2783  0485  0008               	return
  2784  0486                     i1l1206:	
  2785                           
  2786                           ;communication.c: 86: return slave_flag;
  2787  0486  0871               	movf	slave_address_check@slave_flag,w
  2788  0487  0008               	return
  2789  0488                     __end_of_slave_address_check:	
  2790                           
  2791                           	psect	text15
  2792  0027                     __ptext15:	
  2793 ;; *************** function _Store_Datas *****************
  2794 ;; Defined at:
  2795 ;;		line 34 in file "Controller_Protocol.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  Buffer          1    wreg     PTR struct .
  2798 ;;		 -> Buffer0(13), 
  2799 ;;  received_dat    1    1[COMMON] unsigned char 
  2800 ;;  number_of_re    2    2[COMMON] int 
  2801 ;;  bus_number      2    4[COMMON] int 
  2802 ;;  EUSART_ERROR    2    6[COMMON] PTR FTN()unsigned char 
  2803 ;;		 -> EUSART_ERROR_from_master(1), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  Buffer          1    0[BANK0 ] PTR struct .
  2806 ;;		 -> Buffer0(13), 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      unsigned char 
  2809 ;; Registers used:
  2810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 1F/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2816 ;;      Params:         7       0       0       0
  2817 ;;      Locals:         0       1       0       0
  2818 ;;      Temps:          6       0       0       0
  2819 ;;      Totals:        13       1       0       0
  2820 ;;Total ram usage:       14 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		_EUSART_ERROR_from_master
  2825 ;; This function is called by:
  2826 ;;		_Reception_from_master
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function _Store_Datas
  2832  0027                     _Store_Datas:	
  2833                           
  2834                           ;incstack = 0
  2835                           ; Regs used in _Store_Datas: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2836                           ;Store_Datas@Buffer stored from wreg
  2837  0027  00CA               	movwf	Store_Datas@Buffer
  2838                           
  2839                           ;Controller_Protocol.c: 35: if (EUSART_ERROR() == 1) {
  2840  0028  0877               	movf	Store_Datas@EUSART_ERROR+1,w
  2841  0029  008A               	movwf	10
  2842  002A  0876               	movf	Store_Datas@EUSART_ERROR,w
  2843  002B  000A               	callw
  2844  002C  3180               	pagesel	$
  2845  002D  3A01               	xorlw	1
  2846  002E  1D03               	skipz
  2847  002F  2858               	goto	i1l1146
  2848                           
  2849                           ;Controller_Protocol.c: 36: StP[bus_number].S_flag = 0;
  2850  0030  0874               	movf	Store_Datas@bus_number,w
  2851  0031  00F8               	movwf	??_Store_Datas
  2852  0032  3001               	movlw	1
  2853  0033                     u115_25:	
  2854  0033  35F8               	lslf	??_Store_Datas,f
  2855  0034  3EFF               	addlw	-1
  2856  0035  1D03               	skipz
  2857  0036  2833               	goto	u115_25
  2858  0037  3578               	lslf	??_Store_Datas,w
  2859  0038  3E28               	addlw	(low ((_StP| 0+3)))& (0+255)
  2860  0039  0086               	movwf	6
  2861  003A  0187               	clrf	7
  2862  003B  0181               	clrf	1
  2863                           
  2864                           ;Controller_Protocol.c: 37: StP[bus_number].Buffer_count = 0;
  2865  003C  0874               	movf	Store_Datas@bus_number,w
  2866  003D  00F8               	movwf	??_Store_Datas
  2867  003E  3001               	movlw	1
  2868  003F                     u116_25:	
  2869  003F  35F8               	lslf	??_Store_Datas,f
  2870  0040  3EFF               	addlw	-1
  2871  0041  1D03               	skipz
  2872  0042  283F               	goto	u116_25
  2873  0043  3578               	lslf	??_Store_Datas,w
  2874  0044  3E25               	addlw	(low (_StP| 0))& (0+255)
  2875  0045  0086               	movwf	6
  2876  0046  0187               	clrf	7
  2877  0047  3000               	movlw	0
  2878  0048  3FC0               	movwi [0]fsr1
  2879  0049  3FC1               	movwi [1]fsr1
  2880                           
  2881                           ;Controller_Protocol.c: 38: StP[bus_number].Start_signal_has_come = 0;
  2882  004A  0874               	movf	Store_Datas@bus_number,w
  2883  004B  00F8               	movwf	??_Store_Datas
  2884  004C  3001               	movlw	1
  2885  004D                     u117_25:	
  2886  004D  35F8               	lslf	??_Store_Datas,f
  2887  004E  3EFF               	addlw	-1
  2888  004F  1D03               	skipz
  2889  0050  284D               	goto	u117_25
  2890  0051                     L2:	
  2891  0051  3578               	lslf	??_Store_Datas,w
  2892  0052  3E27               	addlw	(low ((_StP| 0+2)))& (0+255)
  2893  0053  0086               	movwf	6
  2894  0054  0187               	clrf	7
  2895  0055  0181               	clrf	1
  2896  0056                     i1l1140:	
  2897                           
  2898                           ;Controller_Protocol.c: 39: return 1;
  2899  0056  3001               	movlw	1
  2900  0057  0008               	return
  2901  0058                     i1l1146:	
  2902                           
  2903                           ;Controller_Protocol.c: 41: if (StP[bus_number].Start_signal_has_come == 0) {
  2904  0058  0874               	movf	Store_Datas@bus_number,w
  2905  0059  00F8               	movwf	??_Store_Datas
  2906  005A  3001               	movlw	1
  2907  005B                     u118_25:	
  2908  005B  35F8               	lslf	??_Store_Datas,f
  2909  005C  3EFF               	addlw	-1
  2910  005D  1D03               	skipz
  2911  005E  285B               	goto	u118_25
  2912  005F  3578               	lslf	??_Store_Datas,w
  2913  0060  3E27               	addlw	(low ((_StP| 0+2)))& (0+255)
  2914  0061  0086               	movwf	6
  2915  0062  0187               	clrf	7
  2916  0063  0801               	movf	1,w
  2917  0064  1D03               	btfss	3,2
  2918  0065  28BE               	goto	i1l1162
  2919                           
  2920                           ;Controller_Protocol.c: 42: Buffer[StP[bus_number].S_flag].all_data = received_data;
  2921  0066  0871               	movf	Store_Datas@received_data,w
  2922  0067  00F8               	movwf	??_Store_Datas
  2923  0068  0874               	movf	Store_Datas@bus_number,w
  2924  0069  00F9               	movwf	??_Store_Datas+1
  2925  006A  3001               	movlw	1
  2926  006B                     u120_25:	
  2927  006B  35F9               	lslf	??_Store_Datas+1,f
  2928  006C  3EFF               	addlw	-1
  2929  006D  1D03               	skipz
  2930  006E  286B               	goto	u120_25
  2931  006F  3579               	lslf	??_Store_Datas+1,w
  2932  0070  3E28               	addlw	(low ((_StP| 0+3)))& (0+255)
  2933  0071  0086               	movwf	6
  2934  0072  0187               	clrf	7
  2935  0073  0801               	movf	1,w
  2936  0074  0020               	movlb	0	; select bank0
  2937  0075  074A               	addwf	Store_Datas@Buffer,w
  2938  0076  00FA               	movwf	??_Store_Datas+2
  2939  0077  087A               	movf	??_Store_Datas+2,w
  2940  0078  0086               	movwf	6
  2941  0079  0187               	clrf	7
  2942  007A  0878               	movf	??_Store_Datas,w
  2943  007B  0081               	movwf	1
  2944                           
  2945                           ;Controller_Protocol.c: 43: if (StP[bus_number].S_flag == 1) {
  2946  007C  0874               	movf	Store_Datas@bus_number,w
  2947  007D  00F8               	movwf	??_Store_Datas
  2948  007E  3001               	movlw	1
  2949  007F                     u121_25:	
  2950  007F  35F8               	lslf	??_Store_Datas,f
  2951  0080  3EFF               	addlw	-1
  2952  0081  1D03               	skipz
  2953  0082  287F               	goto	u121_25
  2954  0083  3578               	lslf	??_Store_Datas,w
  2955  0084  3E28               	addlw	(low ((_StP| 0+3)))& (0+255)
  2956  0085  0086               	movwf	6
  2957  0086  0187               	clrf	7
  2958  0087  0301               	decf	1,w
  2959  0088  1D03               	btfss	3,2
  2960  0089  28A9               	goto	i1l1154
  2961                           
  2962                           ;Controller_Protocol.c: 44: if (Buffer[1].lower_data == 5) StP[bus_number].Start_signal_
      +                          has_come = 1;
  2963  008A  0A4A               	incf	Store_Datas@Buffer,w
  2964  008B  0086               	movwf	6
  2965  008C  0187               	clrf	7
  2966  008D  0801               	movf	1,w
  2967  008E  390F               	andlw	15
  2968  008F  3A05               	xorlw	5
  2969  0090  1D03               	skipz
  2970  0091  289F               	goto	i1l141
  2971  0092  0874               	movf	Store_Datas@bus_number,w
  2972  0093  00F8               	movwf	??_Store_Datas
  2973  0094  3001               	movlw	1
  2974  0095                     u124_25:	
  2975  0095  35F8               	lslf	??_Store_Datas,f
  2976  0096  3EFF               	addlw	-1
  2977  0097  1D03               	skipz
  2978  0098  2895               	goto	u124_25
  2979  0099  3578               	lslf	??_Store_Datas,w
  2980  009A  3E27               	addlw	(low ((_StP| 0+2)))& (0+255)
  2981  009B  0086               	movwf	6
  2982  009C  0187               	clrf	7
  2983  009D  0181               	clrf	1
  2984  009E  0A81               	incf	1,f
  2985  009F                     i1l141:	
  2986                           
  2987                           ;Controller_Protocol.c: 45: StP[bus_number].S_flag = 0;
  2988  009F  0874               	movf	Store_Datas@bus_number,w
  2989  00A0  00F8               	movwf	??_Store_Datas
  2990  00A1  3001               	movlw	1
  2991  00A2                     u125_25:	
  2992  00A2  35F8               	lslf	??_Store_Datas,f
  2993  00A3  3EFF               	addlw	-1
  2994  00A4  1D03               	skipz
  2995  00A5  28A2               	goto	u125_25
  2996  00A6  3578               	lslf	??_Store_Datas,w
  2997  00A7  3E28               	addlw	(low ((_StP| 0+3)))& (0+255)
  2998  00A8  299A               	goto	L1
  2999  00A9                     i1l1154:	
  3000                           ;Controller_Protocol.c: 46: } else if (Buffer[0].all_data == 'S') {
  3001                           
  3002  00A9  084A               	movf	Store_Datas@Buffer,w
  3003  00AA  0086               	movwf	6
  3004  00AB  0187               	clrf	7
  3005  00AC  3053               	movlw	83
  3006  00AD  0601               	xorwf	1,w
  3007  00AE  1D03               	btfss	3,2
  3008  00AF  2856               	goto	i1l1140
  3009                           
  3010                           ;Controller_Protocol.c: 47: StP[bus_number].S_flag = 1;
  3011  00B0  0874               	movf	Store_Datas@bus_number,w
  3012  00B1  00F8               	movwf	??_Store_Datas
  3013  00B2  3001               	movlw	1
  3014  00B3                     u127_25:	
  3015  00B3  35F8               	lslf	??_Store_Datas,f
  3016  00B4  3EFF               	addlw	-1
  3017  00B5  1D03               	skipz
  3018  00B6  28B3               	goto	u127_25
  3019  00B7  3578               	lslf	??_Store_Datas,w
  3020  00B8  3E28               	addlw	(low ((_StP| 0+3)))& (0+255)
  3021  00B9  0086               	movwf	6
  3022  00BA  0187               	clrf	7
  3023  00BB  0181               	clrf	1
  3024  00BC  0A81               	incf	1,f
  3025                           
  3026                           ;Controller_Protocol.c: 48: }else return 1;
  3027  00BD  299D               	goto	i1l1184
  3028  00BE                     i1l1162:	
  3029                           
  3030                           ;Controller_Protocol.c: 50: StP[bus_number].Buffer_count++;
  3031  00BE  0874               	movf	Store_Datas@bus_number,w
  3032  00BF  00F8               	movwf	??_Store_Datas
  3033  00C0  3001               	movlw	1
  3034  00C1                     u128_25:	
  3035  00C1  35F8               	lslf	??_Store_Datas,f
  3036  00C2  3EFF               	addlw	-1
  3037  00C3  1D03               	skipz
  3038  00C4  28C1               	goto	u128_25
  3039  00C5  3578               	lslf	??_Store_Datas,w
  3040  00C6  3E25               	addlw	(low (_StP| 0))& (0+255)
  3041  00C7  0086               	movwf	6
  3042  00C8  0187               	clrf	7
  3043  00C9  3001               	movlw	1
  3044  00CA  0781               	addwf	1,f
  3045  00CB  3141               	addfsr 1,1
  3046  00CC  1803               	skipnc
  3047  00CD  0A81               	incf	1,f
  3048                           
  3049                           ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count > number_of_receive_data - 1
      +                          ){
  3050  00CE  0874               	movf	Store_Datas@bus_number,w
  3051  00CF  00F8               	movwf	??_Store_Datas
  3052  00D0  3001               	movlw	1
  3053  00D1                     u129_25:	
  3054  00D1  35F8               	lslf	??_Store_Datas,f
  3055  00D2  3EFF               	addlw	-1
  3056  00D3  1D03               	skipz
  3057  00D4  28D1               	goto	u129_25
  3058  00D5  3578               	lslf	??_Store_Datas,w
  3059  00D6  3E25               	addlw	(low (_StP| 0))& (0+255)
  3060  00D7  0086               	movwf	6
  3061  00D8  0187               	clrf	7
  3062  00D9  3F40               	moviw [0]fsr1
  3063  00DA  00F9               	movwf	??_Store_Datas+1
  3064  00DB  3F41               	moviw [1]fsr1
  3065  00DC  00FA               	movwf	??_Store_Datas+2
  3066  00DD  0872               	movf	Store_Datas@number_of_receive_data,w
  3067  00DE  3EFF               	addlw	255
  3068  00DF  00FB               	movwf	??_Store_Datas+3
  3069  00E0  30FF               	movlw	255
  3070  00E1  3D73               	addwfc	Store_Datas@number_of_receive_data+1,w
  3071  00E2  00FC               	movwf	??_Store_Datas+4
  3072  00E3  087C               	movf	??_Store_Datas+4,w
  3073  00E4  3A80               	xorlw	128
  3074  00E5  00FD               	movwf	??_Store_Datas+5
  3075  00E6  087A               	movf	??_Store_Datas+2,w
  3076  00E7  3A80               	xorlw	128
  3077  00E8  027D               	subwf	??_Store_Datas+5,w
  3078  00E9  1D03               	skipz
  3079  00EA  28ED               	goto	u130_25
  3080  00EB  0879               	movf	??_Store_Datas+1,w
  3081  00EC  027B               	subwf	??_Store_Datas+3,w
  3082  00ED                     u130_25:	
  3083  00ED  1803               	skipnc
  3084  00EE  2906               	goto	i1l1170
  3085                           
  3086                           ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
  3087  00EF  0874               	movf	Store_Datas@bus_number,w
  3088  00F0  00F8               	movwf	??_Store_Datas
  3089  00F1  3001               	movlw	1
  3090  00F2                     u131_25:	
  3091  00F2  35F8               	lslf	??_Store_Datas,f
  3092  00F3  3EFF               	addlw	-1
  3093  00F4  1D03               	skipz
  3094  00F5  28F2               	goto	u131_25
  3095  00F6  3578               	lslf	??_Store_Datas,w
  3096  00F7  3E25               	addlw	(low (_StP| 0))& (0+255)
  3097  00F8  0086               	movwf	6
  3098  00F9  0187               	clrf	7
  3099  00FA  3001               	movlw	1
  3100  00FB  3FC0               	movwi [0]fsr1
  3101  00FC  3000               	movlw	0
  3102  00FD  3FC1               	movwi [1]fsr1
  3103                           
  3104                           ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
  3105  00FE  0874               	movf	Store_Datas@bus_number,w
  3106  00FF  00F8               	movwf	??_Store_Datas
  3107  0100  3001               	movlw	1
  3108  0101                     u132_25:	
  3109  0101  35F8               	lslf	??_Store_Datas,f
  3110  0102  3EFF               	addlw	-1
  3111  0103  1D03               	skipz
  3112  0104  2901               	goto	u132_25
  3113  0105  2851               	goto	L2
  3114  0106                     i1l1170:	
  3115                           
  3116                           ;Controller_Protocol.c: 56: };Controller_Protocol.c: 58: Buffer[StP[bus_number].Buffer_c
      +                          ount].all_data = received_data;
  3117  0106  0871               	movf	Store_Datas@received_data,w
  3118  0107  00F8               	movwf	??_Store_Datas
  3119  0108  0874               	movf	Store_Datas@bus_number,w
  3120  0109  00F9               	movwf	??_Store_Datas+1
  3121  010A  3001               	movlw	1
  3122  010B                     u133_25:	
  3123  010B  35F9               	lslf	??_Store_Datas+1,f
  3124  010C  3EFF               	addlw	-1
  3125  010D  1D03               	skipz
  3126  010E  290B               	goto	u133_25
  3127  010F  3579               	lslf	??_Store_Datas+1,w
  3128  0110  3E25               	addlw	(low (_StP| 0))& (0+255)
  3129  0111  0086               	movwf	6
  3130  0112  0187               	clrf	7
  3131  0113  0801               	movf	1,w
  3132  0114  0020               	movlb	0	; select bank0
  3133  0115  074A               	addwf	Store_Datas@Buffer,w
  3134  0116  00FA               	movwf	??_Store_Datas+2
  3135  0117  087A               	movf	??_Store_Datas+2,w
  3136  0118  0086               	movwf	6
  3137  0119  0187               	clrf	7
  3138  011A  0878               	movf	??_Store_Datas,w
  3139  011B  0081               	movwf	1
  3140                           
  3141                           ;Controller_Protocol.c: 59: if (Buffer[StP[bus_number].Buffer_count].all_data == 'C') {
  3142  011C  0874               	movf	Store_Datas@bus_number,w
  3143  011D  00F8               	movwf	??_Store_Datas
  3144  011E  3001               	movlw	1
  3145  011F                     u134_25:	
  3146  011F  35F8               	lslf	??_Store_Datas,f
  3147  0120  3EFF               	addlw	-1
  3148  0121  1D03               	skipz
  3149  0122  291F               	goto	u134_25
  3150  0123  3578               	lslf	??_Store_Datas,w
  3151  0124  3E25               	addlw	(low (_StP| 0))& (0+255)
  3152  0125  0086               	movwf	6
  3153  0126  0187               	clrf	7
  3154  0127  0801               	movf	1,w
  3155  0128  074A               	addwf	Store_Datas@Buffer,w
  3156  0129  00F9               	movwf	??_Store_Datas+1
  3157  012A  0879               	movf	??_Store_Datas+1,w
  3158  012B  0086               	movwf	6
  3159  012C  0187               	clrf	7
  3160  012D  3043               	movlw	67
  3161  012E  0601               	xorwf	1,w
  3162  012F  1D03               	btfss	3,2
  3163  0130  2965               	goto	i1l1180
  3164                           
  3165                           ;Controller_Protocol.c: 61: if (Buffer[StP[bus_number].Buffer_count - 1].upper_data == 3
      +                          ) {
  3166  0131  0874               	movf	Store_Datas@bus_number,w
  3167  0132  00F8               	movwf	??_Store_Datas
  3168  0133  3001               	movlw	1
  3169  0134                     u136_25:	
  3170  0134  35F8               	lslf	??_Store_Datas,f
  3171  0135  3EFF               	addlw	-1
  3172  0136  1D03               	skipz
  3173  0137  2934               	goto	u136_25
  3174  0138  3578               	lslf	??_Store_Datas,w
  3175  0139  3E25               	addlw	(low (_StP| 0))& (0+255)
  3176  013A  0086               	movwf	6
  3177  013B  0187               	clrf	7
  3178  013C  0801               	movf	1,w
  3179  013D  074A               	addwf	Store_Datas@Buffer,w
  3180  013E  00F9               	movwf	??_Store_Datas+1
  3181  013F  0879               	movf	??_Store_Datas+1,w
  3182  0140  3EFF               	addlw	-1
  3183  0141  0086               	movwf	6
  3184  0142  0187               	clrf	7
  3185  0143  0E01               	swapf	1,w
  3186  0144  390F               	andlw	15
  3187  0145  3A03               	xorlw	3
  3188  0146  1D03               	skipz
  3189  0147  2965               	goto	i1l1180
  3190                           
  3191                           ;Controller_Protocol.c: 62: StP[bus_number].Buffer_count = 1;
  3192  0148  0874               	movf	Store_Datas@bus_number,w
  3193  0149  00F8               	movwf	??_Store_Datas
  3194  014A  3001               	movlw	1
  3195  014B                     u138_25:	
  3196  014B  35F8               	lslf	??_Store_Datas,f
  3197  014C  3EFF               	addlw	-1
  3198  014D  1D03               	skipz
  3199  014E  294B               	goto	u138_25
  3200  014F  3578               	lslf	??_Store_Datas,w
  3201  0150  3E25               	addlw	(low (_StP| 0))& (0+255)
  3202  0151  0086               	movwf	6
  3203  0152  0187               	clrf	7
  3204  0153  3001               	movlw	1
  3205  0154  3FC0               	movwi [0]fsr1
  3206  0155  3000               	movlw	0
  3207  0156  3FC1               	movwi [1]fsr1
  3208                           
  3209                           ;Controller_Protocol.c: 63: StP[bus_number].Start_signal_has_come = 0;
  3210  0157  0874               	movf	Store_Datas@bus_number,w
  3211  0158  00F8               	movwf	??_Store_Datas
  3212  0159  3001               	movlw	1
  3213  015A                     u139_25:	
  3214  015A  35F8               	lslf	??_Store_Datas,f
  3215  015B  3EFF               	addlw	-1
  3216  015C  1D03               	skipz
  3217  015D  295A               	goto	u139_25
  3218  015E  3578               	lslf	??_Store_Datas,w
  3219  015F  3E27               	addlw	(low ((_StP| 0+2)))& (0+255)
  3220  0160  0086               	movwf	6
  3221  0161  0187               	clrf	7
  3222  0162  0181               	clrf	1
  3223                           
  3224                           ;Controller_Protocol.c: 64: return 2;
  3225  0163  3002               	movlw	2
  3226  0164  0008               	return
  3227  0165                     i1l1180:	
  3228                           
  3229                           ;Controller_Protocol.c: 65: };Controller_Protocol.c: 66: };Controller_Protocol.c: 67: if
      +                           (StP[bus_number].Buffer_count == number_of_receive_data - 1) {
  3230  0165  0874               	movf	Store_Datas@bus_number,w
  3231  0166  00F8               	movwf	??_Store_Datas
  3232  0167  3001               	movlw	1
  3233  0168                     u140_25:	
  3234  0168  35F8               	lslf	??_Store_Datas,f
  3235  0169  3EFF               	addlw	-1
  3236  016A  1D03               	skipz
  3237  016B  2968               	goto	u140_25
  3238  016C  3578               	lslf	??_Store_Datas,w
  3239  016D  3E25               	addlw	(low (_StP| 0))& (0+255)
  3240  016E  0086               	movwf	6
  3241  016F  0187               	clrf	7
  3242  0170  3F40               	moviw [0]fsr1
  3243  0171  00F9               	movwf	??_Store_Datas+1
  3244  0172  3F41               	moviw [1]fsr1
  3245  0173  00FA               	movwf	??_Store_Datas+2
  3246  0174  0872               	movf	Store_Datas@number_of_receive_data,w
  3247  0175  3EFF               	addlw	255
  3248  0176  00FB               	movwf	??_Store_Datas+3
  3249  0177  30FF               	movlw	255
  3250  0178  3D73               	addwfc	Store_Datas@number_of_receive_data+1,w
  3251  0179  00FC               	movwf	??_Store_Datas+4
  3252  017A  087A               	movf	??_Store_Datas+2,w
  3253  017B  067C               	xorwf	??_Store_Datas+4,w
  3254  017C  1D03               	skipz
  3255  017D  2980               	goto	u141_25
  3256  017E  0879               	movf	??_Store_Datas+1,w
  3257  017F  067B               	xorwf	??_Store_Datas+3,w
  3258  0180                     u141_25:	
  3259  0180  1D03               	skipz
  3260  0181  299D               	goto	i1l1184
  3261                           
  3262                           ;Controller_Protocol.c: 68: StP[bus_number].Buffer_count = 1;
  3263  0182  0874               	movf	Store_Datas@bus_number,w
  3264  0183  00F8               	movwf	??_Store_Datas
  3265  0184  3001               	movlw	1
  3266  0185                     u142_25:	
  3267  0185  35F8               	lslf	??_Store_Datas,f
  3268  0186  3EFF               	addlw	-1
  3269  0187  1D03               	skipz
  3270  0188  2985               	goto	u142_25
  3271  0189  3578               	lslf	??_Store_Datas,w
  3272  018A  3E25               	addlw	(low (_StP| 0))& (0+255)
  3273  018B  0086               	movwf	6
  3274  018C  0187               	clrf	7
  3275  018D  3001               	movlw	1
  3276  018E  3FC0               	movwi [0]fsr1
  3277  018F  3000               	movlw	0
  3278  0190  3FC1               	movwi [1]fsr1
  3279                           
  3280                           ;Controller_Protocol.c: 69: StP[bus_number].Start_signal_has_come = 0;
  3281  0191  0874               	movf	Store_Datas@bus_number,w
  3282  0192  00F8               	movwf	??_Store_Datas
  3283  0193  3001               	movlw	1
  3284  0194                     u143_25:	
  3285  0194  35F8               	lslf	??_Store_Datas,f
  3286  0195  3EFF               	addlw	-1
  3287  0196  1D03               	skipz
  3288  0197  2994               	goto	u143_25
  3289  0198  3578               	lslf	??_Store_Datas,w
  3290  0199  3E27               	addlw	(low ((_StP| 0+2)))& (0+255)
  3291  019A                     L1:	
  3292  019A  0086               	movwf	6
  3293  019B  0187               	clrf	7
  3294  019C  0181               	clrf	1
  3295  019D                     i1l1184:	
  3296                           
  3297                           ;Controller_Protocol.c: 70: };Controller_Protocol.c: 71: };Controller_Protocol.c: 73: re
      +                          turn 0;
  3298  019D  3000               	movlw	0
  3299  019E  0008               	return
  3300  019F                     __end_of_Store_Datas:	
  3301                           
  3302                           	psect	text16
  3303  0503                     __ptext16:	
  3304 ;; *************** function _EUSART_ERROR_from_master *****************
  3305 ;; Defined at:
  3306 ;;		line 24 in file "communication.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  waste_data      1    0        unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      unsigned char 
  3313 ;; Registers used:
  3314 ;;		wreg
  3315 ;; Tracked objects:
  3316 ;;		On entry : 1F/0
  3317 ;;		On exit  : 1F/3
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3320 ;;      Params:         0       0       0       0
  3321 ;;      Locals:         1       0       0       0
  3322 ;;      Temps:          0       0       0       0
  3323 ;;      Totals:         1       0       0       0
  3324 ;;Total ram usage:        1 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_Reception_from_master
  3330 ;;		_Store_Datas
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _EUSART_ERROR_from_master
  3336  0503                     _EUSART_ERROR_from_master:	
  3337                           
  3338                           ;communication.c: 25: if ((RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1)) {
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _EUSART_ERROR_from_master: [wreg]
  3342  0503  0023               	movlb	3	; select bank3
  3343  0504  191D               	btfsc	29,2	;volatile
  3344  0505  2D08               	goto	i1l1098
  3345  0506  1C9D               	btfss	29,1	;volatile
  3346  0507  2D0D               	goto	i1l1106
  3347  0508                     i1l1098:	
  3348  0508  0819               	movf	25,w	;volatile
  3349                           
  3350                           ;communication.c: 29: RCSTAbits.CREN = 0;
  3351  0509  121D               	bcf	29,4	;volatile
  3352                           
  3353                           ;communication.c: 30: RCSTAbits.CREN = 1;
  3354  050A  161D               	bsf	29,4	;volatile
  3355                           
  3356                           ;communication.c: 31: return 1;
  3357  050B  3001               	movlw	1
  3358  050C  0008               	return
  3359  050D                     i1l1106:	
  3360                           
  3361                           ;communication.c: 32: };communication.c: 33: return 0;
  3362  050D  3000               	movlw	0
  3363  050E  0008               	return
  3364  050F                     __end_of_EUSART_ERROR_from_master:	
  3365  007E                     btemp	set	126	;btemp
  3366  007E                     int$flags	set	126
  3367  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         42
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     22      74
    BANK1            80      3       3
    BANK2            80      0       0

Pointer List with Targets:

    Store_Datas@Buffer	PTR struct . size(1) Largest target is 13
		 -> Buffer0(BANK0[13]), 

    Store_Datas@EUSART_ERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_ERROR_from_master(), 

    Organize_Datas@Buffer	PTR struct . size(1) Largest target is 13
		 -> Buffer0(BANK0[13]), 

    Organize_Datas@RxData	PTR struct . size(1) Largest target is 10
		 -> RxData0(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _Reception_from_master->_Store_Datas
    _Store_Datas->_EUSART_ERROR_from_master

Critical Paths under _main in BANK0

    _main->_Reception_from_master_main
    _Reception_from_master_main->_Organize_Datas
    _Initialize->_Initialize_Parameters
    _Initialize_Parameters->___bmul

Critical Paths under _INTERRUPT_HANDLER in BANK0

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    3858
                                             18 BANK0      4     0      4
                                              0 BANK1      3     3      0
                      _ChangeAddress
                         _Initialize
                     _Organize_Datas
         _Reception_from_master_main
                       _WriteAddress
                          _WriteData
 ---------------------------------------------------------------------------------
 (1) _WriteData                                            2     0      2     325
                                              6 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _WriteAddress                                         4     2      2     170
                                              6 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Reception_from_master_main                           1     1      0    1458
                                             17 BANK0      1     1      0
                     _Organize_Datas
 ---------------------------------------------------------------------------------
 (2) _Organize_Datas                                      11     6      5    1458
                                              6 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0     351
              _Initialize_Parameters
              _Oscillator_Initialize
                     _Pin_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Pin_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Initialize_Parameters                                1     1      0     351
                                             10 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     351
                                              6 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _ChangeAddress                                        4     2      2       0
                                              6 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_HANDLER                                    0     0      0    1320
              _Reception_from_master
 ---------------------------------------------------------------------------------
 (5) _Reception_from_master                                5     5      0    1320
                                              1 BANK0      5     5      0
                        _Store_Datas
                _slave_address_check
 ---------------------------------------------------------------------------------
 (6) _slave_address_check                                  7     5      2     239
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (6) _Store_Datas                                         14     7      7     991
                                              1 COMMON    13     6      7
                                              0 BANK0      1     1      0
           _EUSART_ERROR_from_master *
 ---------------------------------------------------------------------------------
 (7) _EUSART_ERROR_from_master                             1     1      0       1
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ChangeAddress
   _Initialize
     _Initialize_Parameters
       ___bmul
     _Oscillator_Initialize
     _Pin_Initialize
     _UART_Initialize
   _Organize_Datas
   _Reception_from_master_main
     _Organize_Datas
   _WriteAddress
   _WriteData

 _INTERRUPT_HANDLER (ROOT)
   _Reception_from_master
     _Store_Datas
       _EUSART_ERROR_from_master *
     _slave_address_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      3       3       8        3.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5B      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Sep 29 10:14:34 2019

                         ___bmul@product 0052                 Store_Datas@received_data 0071  
                            __CFG_CP$OFF 0000                                       l38 03BD  
                                     _OP 0029                                      l131 02CF  
                                    l126 01BD                                      l129 027E  
                           __CFG_CPD$OFF 0000                                      _SeP 0020  
                                    _StP 0025                    _Oscillator_Initialize 0525  
                  __size_of_WriteAddress 0033                             __CFG_BORV$HI 0000  
                                    wreg 0009                             __CFG_LVP$OFF 0000  
                                   l1410 0375                                     l1506 03A5  
                                   l1372 04EE                                     l1390 02BD  
                                   l1518 03E3                                     l1368 04E8  
                                   l1386 026C                                     l1398 0353  
                                   l1486 04BB                                     l1496 0499  
                                   u2005 02E2                                     u2015 01C0  
                                   u2200 0329                                     u2120 02F9  
                                   u2025 01D6                                     u2105 0442  
                                   u2035 0357                                     u2115 0454  
                                   u2220 0335                                     u2140 0305  
                                   u2045 0370                                     u2214 032B  
                                   u2134 02FB                                     u2055 0379  
                                   u2240 0341                                     u2160 0311  
                                   u2065 039F                                     u2234 0337  
                                   u2154 0307                                     u2307 03E7  
                                   u2260 034D                                     u2180 031D  
                                   u2254 0343                                     u2174 0313  
                                   u2194 031F                                     u1905 0245  
                                   u1835 01A3                                     u1925 025C  
                                   u1845 01B2                                     u1935 026F  
                                   u1855 01DC                                     u1945 0281  
                                   u1865 01F0                                     u1955 0295  
                                   u1875 0207                                     u1885 021B  
                                   u1975 02AD                                     u1895 0231  
                                   u1985 02C0                                     u1995 02D2  
                                   i1l63 000C                             __CFG_WRT$OFF 0000  
                                   _main 03A2                                     fsr0h 0005  
                                   fsr1h 0007                                     indf0 0000  
                                   fsr0l 0004                                     indf1 0001  
                                   fsr1l 0006                                     btemp 007E  
                 ?_Reception_from_master 0070                                     start 000E  
                          __CFG_IESO$OFF 0000                        ___bmul@multiplier 0053  
                       ?_UART_Initialize 0070                             _WriteAddress 0432  
               Organize_Datas@bus_number 0053                            __CFG_PLLEN$ON 0000  
                                  ?_main 005C                            __CFG_WDTE$OFF 0000  
                  Store_Datas@bus_number 0074                                    i1l141 009F  
                                  _RCREG 0199                           __CFG_FCMEN$OFF 0000  
       slave_address_check@slave_address 0070                           _Organize_Datas 019F  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
Reception_from_master@Receive_data_count 0032                    _Initialize_Parameters 0350  
                                  status 0003             Organize_Datas@number_of_data 0051  
                                  wtemp0 007E                           __CFG_MCLRE$OFF 0000  
                        __initialization 0010              ?_Reception_from_master_main 0070  
                           __end_of_main 03ED                               _Initialize 04F7  
                 ?_Oscillator_Initialize 0070                                   ??_main 00A0  
                 __end_of_Organize_Datas 02F0                                   _ANSELA 018C  
                                 _ANSELB 018D                                   i1l1200 0484  
                                 i1l1106 050D                                   i1l1140 0056  
                                 i1l1206 0486                                   i1l1170 0106  
                                 i1l1154 00A9                                   i1l1162 00BE  
                                 i1l1146 0058                                   i1l1330 040C  
                                 i1l1180 0165                                   i1l1340 0427  
                                 i1l1184 019D                                   i1l1336 0414  
                                 i1l1328 040A                                   i1l1098 0508  
                                 u120_25 006B                                   u121_25 007F  
                                 u130_25 00ED                                   u131_25 00F2  
                                 u115_25 0033                                   u140_25 0168  
                                 u132_25 0101                                   u124_25 0095  
                                 u116_25 003F                                   u141_25 0180  
                                 u133_25 010B                                   u125_25 00A2  
                                 u117_25 004D                                   u142_25 0185  
                                 u134_25 011F                                   u118_25 005B  
                                 u143_25 0194                                   u127_25 00B3  
                                 u136_25 0134                                   u128_25 00C1  
                                 u129_25 00D1         __end_of_EUSART_ERROR_from_master 050F  
                                 u138_25 014B                                   u146_25 0475  
                                 u139_25 015A                      WriteAddress@Address 0050  
                                 _OSCCON 0099                                   _SPBRGH 019C  
                                 _SPBRGL 019B                           __CFG_PWRTE$OFF 0000  
                                 ___bmul 04E6             __size_of_slave_address_check 0023  
                 __size_of_ChangeAddress 001E                          ?_Organize_Datas 0050  
                 ?_Initialize_Parameters 0070                  __end_of__initialization 0023  
                     __size_of_WriteData 0060                      ___bmul@multiplicand 0050  
                         __pcstackCOMMON 0070                             __pidataBANK0 050F  
                            ?_Initialize 0070      __size_of_Reception_from_master_main 001D  
                ??_Reception_from_master 004B                               __pbssBANK0 0020  
                          ??_Store_Datas 0078                          __CFG_VCAPEN$OFF 0000  
                          _ChangeAddress 0488                  Store_Datas@EUSART_ERROR 0076  
               _EUSART_ERROR_from_master 0503                               __pmaintext 03A2  
                                ?___bmul 0050                               __pintentry 0004  
                __size_of_Pin_Initialize 0012                        __end_of_WriteData 0350  
                      Store_Datas@Buffer 004A                      __size_of_Initialize 000C  
                         ?_ChangeAddress 0050                                  _Buffer0 0033  
                                _RxData0 0040                       _not_of_before_data 0031  
                    __end_of_Store_Datas 019F                          __size_of___bmul 0011  
                ??_Oscillator_Initialize 0050                          __CFG_STVREN$OFF 0000  
                                __ptext1 02F0                                  __ptext2 0432  
                                __ptext3 04A6                                  __ptext4 019F  
                                __ptext5 04F7                                  __ptext6 04D5  
                                __ptext7 04C3                                  __ptext8 0525  
                                __ptext9 0350                        _INTERRUPT_HANDLER 0004  
                     ?_INTERRUPT_HANDLER 0070                 __size_of_UART_Initialize 0011  
                                clrloop0 0520                     end_of_initialization 0023  
                    _slave_address_check 0465                      ??_INTERRUPT_HANDLER 007E  
                                init_ram 0519                                  initloop 051A  
    Reception_from_master@error_complete 004F                                _RCSTAbits 019D  
                   ?_slave_address_check 0070           slave_address_check@sample_data 0076  
              __end_of_INTERRUPT_HANDLER 000E                      ChangeAddress@AddCnt 002F  
                   _slave_different_flag 0068                         ??_Organize_Datas 0055  
                       __CFG_FOSC$INTOSC 0000                  ??_Initialize_Parameters 0054  
                              _TRISAbits 008C                                _TRISBbits 008D  
                              _TRISCbits 008E                          ??_ChangeAddress 0052  
                            _Store_Datas 0027                                _TXSTAbits 019E  
                  ??_slave_address_check 0072                           _Pin_Initialize 04C3  
                         __end_of___bmul 04F7                             ??_Initialize 0055  
                            _BAUDCONbits 019F        Store_Datas@number_of_receive_data 0072  
                    start_initialization 0010               ??_EUSART_ERROR_from_master 0070  
                      ??_UART_Initialize 0050           __size_of_Reception_from_master 0045  
          __end_of_Reception_from_master 0432                       __end_of_Initialize 0503  
                 __end_of_Pin_Initialize 04D5                                 ??___bmul 0051  
                          ?_WriteAddress 0050                              __pdataBANK0 0060  
             __size_of_INTERRUPT_HANDLER 000A                                ___latbits 0001  
                          __pcstackBANK0 004A                            __pcstackBANK1 00A0  
                              _WriteData 02F0                             _Receive_flag 0069  
                       WriteData@Address 0050                          ?_Pin_Initialize 0070  
           ??_Reception_from_master_main 005B                           ??_WriteAddress 0052  
     Reception_from_master@slave_address 004E           __size_of_Oscillator_Initialize 0004  
          __end_of_Oscillator_Initialize 0529                               ?_WriteData 0050  
                               _LATAbits 010C                                 _LATBbits 010D  
                               _LATCbits 010E                                clear_ram0 051F  
                               _PIE1bits 0091                                 _PIR1bits 0011  
                 Initialize_Parameters@i 002D           __size_of_Initialize_Parameters 0052  
          __end_of_Initialize_Parameters 03A2                             ?_Store_Datas 0071  
          slave_address_check@data_count 0075                          _UART_Initialize 04D5  
                            ??_WriteData 0052                                 __ptext10 04E6  
                               __ptext11 0488                                 __ptext13 03ED  
                               __ptext14 0465                                 __ptext15 0027  
                               __ptext16 0503                     __end_of_WriteAddress 0465  
                  __end_of_ChangeAddress 04A6                            __size_of_main 004B  
            __end_of_slave_address_check 0488                     Organize_Datas@Buffer 0050  
     __end_of_Reception_from_master_main 04C3               _Reception_from_master_main 04A6  
                   Organize_Datas@RxData 005A                                 int$flags 007E  
                 ChangeAddress@Addresses 0060                                 main@argc 005C  
                               main@argv 005E                               _INTCONbits 000B  
                               intlevel1 0000                  __size_of_Organize_Datas 0151  
                       ??_Pin_Initialize 0050                        __CFG_CLKOUTEN$OFF 0000  
                  _Reception_from_master 03ED        __size_of_EUSART_ERROR_from_master 000C  
              ?_EUSART_ERROR_from_master 0070                  __end_of_UART_Initialize 04E6  
          slave_address_check@slave_flag 0071                     __size_of_Store_Datas 0178  
                            main@Address 00A1  
