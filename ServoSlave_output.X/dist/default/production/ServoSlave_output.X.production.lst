

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 08 17:02:26 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1933 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  0110                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011D                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0191                     	;# 
   145  0191                     	;# 
   146  0192                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0194                     	;# 
   151  0195                     	;# 
   152  0196                     	;# 
   153  0199                     	;# 
   154  019A                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020D                     	;# 
   165  0210                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0295                     	;# 
   180  0295                     	;# 
   181  0296                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029B                     	;# 
   187  029C                     	;# 
   188  029C                     	;# 
   189  029D                     	;# 
   190  029E                     	;# 
   191  029F                     	;# 
   192  0311                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0314                     	;# 
   197  0315                     	;# 
   198  0315                     	;# 
   199  0316                     	;# 
   200  0318                     	;# 
   201  0318                     	;# 
   202  0319                     	;# 
   203  031A                     	;# 
   204  031C                     	;# 
   205  031C                     	;# 
   206  031D                     	;# 
   207  031E                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  0415                     	;# 
   212  0416                     	;# 
   213  0417                     	;# 
   214  041C                     	;# 
   215  041D                     	;# 
   216  041E                     	;# 
   217  0791                     	;# 
   218  0792                     	;# 
   219  0793                     	;# 
   220  0794                     	;# 
   221  0795                     	;# 
   222  0798                     	;# 
   223  0799                     	;# 
   224  07A0                     	;# 
   225  07A1                     	;# 
   226  07A3                     	;# 
   227  07A4                     	;# 
   228  07A6                     	;# 
   229  07A7                     	;# 
   230  07A9                     	;# 
   231  07AA                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE9                     	;# 
   238  0FEA                     	;# 
   239  0FEB                     	;# 
   240  0FED                     	;# 
   241  0FEE                     	;# 
   242  0FEF                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  0110                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0113                     	;# 
   298  0114                     	;# 
   299  0115                     	;# 
   300  0116                     	;# 
   301  0117                     	;# 
   302  0118                     	;# 
   303  0119                     	;# 
   304  011A                     	;# 
   305  011B                     	;# 
   306  011D                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0191                     	;# 
   310  0191                     	;# 
   311  0192                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0194                     	;# 
   316  0195                     	;# 
   317  0196                     	;# 
   318  0199                     	;# 
   319  019A                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019C                     	;# 
   326  019D                     	;# 
   327  019E                     	;# 
   328  019F                     	;# 
   329  020D                     	;# 
   330  0210                     	;# 
   331  0211                     	;# 
   332  0212                     	;# 
   333  0213                     	;# 
   334  0214                     	;# 
   335  0215                     	;# 
   336  0215                     	;# 
   337  0216                     	;# 
   338  0217                     	;# 
   339  0291                     	;# 
   340  0291                     	;# 
   341  0292                     	;# 
   342  0293                     	;# 
   343  0294                     	;# 
   344  0295                     	;# 
   345  0295                     	;# 
   346  0296                     	;# 
   347  0298                     	;# 
   348  0298                     	;# 
   349  0299                     	;# 
   350  029A                     	;# 
   351  029B                     	;# 
   352  029C                     	;# 
   353  029C                     	;# 
   354  029D                     	;# 
   355  029E                     	;# 
   356  029F                     	;# 
   357  0311                     	;# 
   358  0311                     	;# 
   359  0312                     	;# 
   360  0313                     	;# 
   361  0314                     	;# 
   362  0315                     	;# 
   363  0315                     	;# 
   364  0316                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  031C                     	;# 
   370  031C                     	;# 
   371  031D                     	;# 
   372  031E                     	;# 
   373  0394                     	;# 
   374  0395                     	;# 
   375  0396                     	;# 
   376  0415                     	;# 
   377  0416                     	;# 
   378  0417                     	;# 
   379  041C                     	;# 
   380  041D                     	;# 
   381  041E                     	;# 
   382  0791                     	;# 
   383  0792                     	;# 
   384  0793                     	;# 
   385  0794                     	;# 
   386  0795                     	;# 
   387  0798                     	;# 
   388  0799                     	;# 
   389  07A0                     	;# 
   390  07A1                     	;# 
   391  07A3                     	;# 
   392  07A4                     	;# 
   393  07A6                     	;# 
   394  07A7                     	;# 
   395  07A9                     	;# 
   396  07AA                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  000E                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001E                     	;# 
   437  001F                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  0090                     	;# 
   442  0091                     	;# 
   443  0092                     	;# 
   444  0093                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  010C                     	;# 
   457  010D                     	;# 
   458  010E                     	;# 
   459  0110                     	;# 
   460  0111                     	;# 
   461  0112                     	;# 
   462  0113                     	;# 
   463  0114                     	;# 
   464  0115                     	;# 
   465  0116                     	;# 
   466  0117                     	;# 
   467  0118                     	;# 
   468  0119                     	;# 
   469  011A                     	;# 
   470  011B                     	;# 
   471  011D                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  0191                     	;# 
   475  0191                     	;# 
   476  0192                     	;# 
   477  0193                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0194                     	;# 
   481  0195                     	;# 
   482  0196                     	;# 
   483  0199                     	;# 
   484  019A                     	;# 
   485  019B                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019C                     	;# 
   490  019C                     	;# 
   491  019D                     	;# 
   492  019E                     	;# 
   493  019F                     	;# 
   494  020D                     	;# 
   495  0210                     	;# 
   496  0211                     	;# 
   497  0212                     	;# 
   498  0213                     	;# 
   499  0214                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0291                     	;# 
   505  0291                     	;# 
   506  0292                     	;# 
   507  0293                     	;# 
   508  0294                     	;# 
   509  0295                     	;# 
   510  0295                     	;# 
   511  0296                     	;# 
   512  0298                     	;# 
   513  0298                     	;# 
   514  0299                     	;# 
   515  029A                     	;# 
   516  029B                     	;# 
   517  029C                     	;# 
   518  029C                     	;# 
   519  029D                     	;# 
   520  029E                     	;# 
   521  029F                     	;# 
   522  0311                     	;# 
   523  0311                     	;# 
   524  0312                     	;# 
   525  0313                     	;# 
   526  0314                     	;# 
   527  0315                     	;# 
   528  0315                     	;# 
   529  0316                     	;# 
   530  0318                     	;# 
   531  0318                     	;# 
   532  0319                     	;# 
   533  031A                     	;# 
   534  031C                     	;# 
   535  031C                     	;# 
   536  031D                     	;# 
   537  031E                     	;# 
   538  0394                     	;# 
   539  0395                     	;# 
   540  0396                     	;# 
   541  0415                     	;# 
   542  0416                     	;# 
   543  0417                     	;# 
   544  041C                     	;# 
   545  041D                     	;# 
   546  041E                     	;# 
   547  0791                     	;# 
   548  0792                     	;# 
   549  0793                     	;# 
   550  0794                     	;# 
   551  0795                     	;# 
   552  0798                     	;# 
   553  0799                     	;# 
   554  07A0                     	;# 
   555  07A1                     	;# 
   556  07A3                     	;# 
   557  07A4                     	;# 
   558  07A6                     	;# 
   559  07A7                     	;# 
   560  07A9                     	;# 
   561  07AA                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0015                     	;# 
   593  0016                     	;# 
   594  0016                     	;# 
   595  0017                     	;# 
   596  0018                     	;# 
   597  0019                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001C                     	;# 
   601  001E                     	;# 
   602  001F                     	;# 
   603  008C                     	;# 
   604  008D                     	;# 
   605  008E                     	;# 
   606  0090                     	;# 
   607  0091                     	;# 
   608  0092                     	;# 
   609  0093                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  0110                     	;# 
   625  0111                     	;# 
   626  0112                     	;# 
   627  0113                     	;# 
   628  0114                     	;# 
   629  0115                     	;# 
   630  0116                     	;# 
   631  0117                     	;# 
   632  0118                     	;# 
   633  0119                     	;# 
   634  011A                     	;# 
   635  011B                     	;# 
   636  011D                     	;# 
   637  018C                     	;# 
   638  018D                     	;# 
   639  0191                     	;# 
   640  0191                     	;# 
   641  0192                     	;# 
   642  0193                     	;# 
   643  0193                     	;# 
   644  0193                     	;# 
   645  0194                     	;# 
   646  0195                     	;# 
   647  0196                     	;# 
   648  0199                     	;# 
   649  019A                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019B                     	;# 
   654  019C                     	;# 
   655  019C                     	;# 
   656  019D                     	;# 
   657  019E                     	;# 
   658  019F                     	;# 
   659  020D                     	;# 
   660  0210                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0216                     	;# 
   668  0217                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0294                     	;# 
   674  0295                     	;# 
   675  0295                     	;# 
   676  0296                     	;# 
   677  0298                     	;# 
   678  0298                     	;# 
   679  0299                     	;# 
   680  029A                     	;# 
   681  029B                     	;# 
   682  029C                     	;# 
   683  029C                     	;# 
   684  029D                     	;# 
   685  029E                     	;# 
   686  029F                     	;# 
   687  0311                     	;# 
   688  0311                     	;# 
   689  0312                     	;# 
   690  0313                     	;# 
   691  0314                     	;# 
   692  0315                     	;# 
   693  0315                     	;# 
   694  0316                     	;# 
   695  0318                     	;# 
   696  0318                     	;# 
   697  0319                     	;# 
   698  031A                     	;# 
   699  031C                     	;# 
   700  031C                     	;# 
   701  031D                     	;# 
   702  031E                     	;# 
   703  0394                     	;# 
   704  0395                     	;# 
   705  0396                     	;# 
   706  0415                     	;# 
   707  0416                     	;# 
   708  0417                     	;# 
   709  041C                     	;# 
   710  041D                     	;# 
   711  041E                     	;# 
   712  0791                     	;# 
   713  0792                     	;# 
   714  0793                     	;# 
   715  0794                     	;# 
   716  0795                     	;# 
   717  0798                     	;# 
   718  0799                     	;# 
   719  07A0                     	;# 
   720  07A1                     	;# 
   721  07A3                     	;# 
   722  07A4                     	;# 
   723  07A6                     	;# 
   724  07A7                     	;# 
   725  07A9                     	;# 
   726  07AA                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000D                     	;# 
   752  000E                     	;# 
   753  0010                     	;# 
   754  0011                     	;# 
   755  0012                     	;# 
   756  0013                     	;# 
   757  0015                     	;# 
   758  0016                     	;# 
   759  0016                     	;# 
   760  0017                     	;# 
   761  0018                     	;# 
   762  0019                     	;# 
   763  001A                     	;# 
   764  001B                     	;# 
   765  001C                     	;# 
   766  001E                     	;# 
   767  001F                     	;# 
   768  008C                     	;# 
   769  008D                     	;# 
   770  008E                     	;# 
   771  0090                     	;# 
   772  0091                     	;# 
   773  0092                     	;# 
   774  0093                     	;# 
   775  0095                     	;# 
   776  0096                     	;# 
   777  0097                     	;# 
   778  0098                     	;# 
   779  0099                     	;# 
   780  009A                     	;# 
   781  009B                     	;# 
   782  009B                     	;# 
   783  009C                     	;# 
   784  009D                     	;# 
   785  009E                     	;# 
   786  010C                     	;# 
   787  010D                     	;# 
   788  010E                     	;# 
   789  0110                     	;# 
   790  0111                     	;# 
   791  0112                     	;# 
   792  0113                     	;# 
   793  0114                     	;# 
   794  0115                     	;# 
   795  0116                     	;# 
   796  0117                     	;# 
   797  0118                     	;# 
   798  0119                     	;# 
   799  011A                     	;# 
   800  011B                     	;# 
   801  011D                     	;# 
   802  018C                     	;# 
   803  018D                     	;# 
   804  0191                     	;# 
   805  0191                     	;# 
   806  0192                     	;# 
   807  0193                     	;# 
   808  0193                     	;# 
   809  0193                     	;# 
   810  0194                     	;# 
   811  0195                     	;# 
   812  0196                     	;# 
   813  0199                     	;# 
   814  019A                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019B                     	;# 
   819  019C                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019E                     	;# 
   823  019F                     	;# 
   824  020D                     	;# 
   825  0210                     	;# 
   826  0211                     	;# 
   827  0212                     	;# 
   828  0213                     	;# 
   829  0214                     	;# 
   830  0215                     	;# 
   831  0215                     	;# 
   832  0216                     	;# 
   833  0217                     	;# 
   834  0291                     	;# 
   835  0291                     	;# 
   836  0292                     	;# 
   837  0293                     	;# 
   838  0294                     	;# 
   839  0295                     	;# 
   840  0295                     	;# 
   841  0296                     	;# 
   842  0298                     	;# 
   843  0298                     	;# 
   844  0299                     	;# 
   845  029A                     	;# 
   846  029B                     	;# 
   847  029C                     	;# 
   848  029C                     	;# 
   849  029D                     	;# 
   850  029E                     	;# 
   851  029F                     	;# 
   852  0311                     	;# 
   853  0311                     	;# 
   854  0312                     	;# 
   855  0313                     	;# 
   856  0314                     	;# 
   857  0315                     	;# 
   858  0315                     	;# 
   859  0316                     	;# 
   860  0318                     	;# 
   861  0318                     	;# 
   862  0319                     	;# 
   863  031A                     	;# 
   864  031C                     	;# 
   865  031C                     	;# 
   866  031D                     	;# 
   867  031E                     	;# 
   868  0394                     	;# 
   869  0395                     	;# 
   870  0396                     	;# 
   871  0415                     	;# 
   872  0416                     	;# 
   873  0417                     	;# 
   874  041C                     	;# 
   875  041D                     	;# 
   876  041E                     	;# 
   877  0791                     	;# 
   878  0792                     	;# 
   879  0793                     	;# 
   880  0794                     	;# 
   881  0795                     	;# 
   882  0798                     	;# 
   883  0799                     	;# 
   884  07A0                     	;# 
   885  07A1                     	;# 
   886  07A3                     	;# 
   887  07A4                     	;# 
   888  07A6                     	;# 
   889  07A7                     	;# 
   890  07A9                     	;# 
   891  07AA                     	;# 
   892  0FE4                     	;# 
   893  0FE5                     	;# 
   894  0FE6                     	;# 
   895  0FE7                     	;# 
   896  0FE8                     	;# 
   897  0FE9                     	;# 
   898  0FEA                     	;# 
   899  0FEB                     	;# 
   900  0FED                     	;# 
   901  0FEE                     	;# 
   902  0FEF                     	;# 
   903                           
   904                           	psect	idataBANK1
   905  0003                     __pidataBANK1:	
   906                           
   907                           ;initializer for SetParameter@isFirst
   908  0003  3401               	retlw	1
   909                           
   910                           	psect	idataBANK2
   911  07DF                     __pidataBANK2:	
   912                           
   913                           ;initializer for __Parameters
   914  07DF  3498               	retlw	152
   915  07E0  3408               	retlw	8
   916  07E1  3458               	retlw	88
   917  07E2  3402               	retlw	2
   918  07E3  3498               	retlw	152
   919  07E4  3408               	retlw	8
   920  07E5  3458               	retlw	88
   921  07E6  3402               	retlw	2
   922  07E7  3498               	retlw	152
   923  07E8  3408               	retlw	8
   924  07E9  3458               	retlw	88
   925  07EA  3402               	retlw	2
   926  07EB  3498               	retlw	152
   927  07EC  3408               	retlw	8
   928  07ED  3458               	retlw	88
   929  07EE  3402               	retlw	2
   930  07EF  348A               	retlw	138
   931  07F0  3407               	retlw	7
   932  07F1  3484               	retlw	132
   933  07F2  3403               	retlw	3
   934  07F3  348A               	retlw	138
   935  07F4  3407               	retlw	7
   936  07F5  3484               	retlw	132
   937  07F6  3403               	retlw	3
   938  07F7  346C               	retlw	108
   939  07F8  3407               	retlw	7
   940  07F9  3420               	retlw	32
   941  07FA  3403               	retlw	3
   942  07FB  346C               	retlw	108
   943  07FC  3407               	retlw	7
   944  07FD  3420               	retlw	32
   945  07FE  3403               	retlw	3
   946                           
   947                           	psect	stringtext1
   948  07FF                     __pstringtext1:	
   949  07FF                     __CHs:	
   950  07FF  3401               	retlw	1
   951  0800  3402               	retlw	2
   952  0801  3404               	retlw	4
   953  0802  3408               	retlw	8
   954  0803                     __end_of__CHs:	
   955  0016                     _TMR1	set	22
   956  0018                     _T1CONbits	set	24
   957  0011                     _PIR1bits	set	17
   958  000B                     _INTCONbits	set	11
   959  000D                     _PORTB	set	13
   960  000C                     _PORTA	set	12
   961  000E                     _PORTCbits	set	14
   962  00C0                     _TMR1ON	set	192
   963  008C                     _TXIF	set	140
   964  0088                     _TMR1IF	set	136
   965  008E                     _TRISCbits	set	142
   966  008D                     _TRISB	set	141
   967  008C                     _TRISA	set	140
   968  0099                     _OSCCONbits	set	153
   969  0091                     _PIE1bits	set	145
   970  010E                     _LATCbits	set	270
   971  019A                     _TXREG	set	410
   972  018D                     _ANSELB	set	397
   973  018C                     _ANSELA	set	396
   974                           
   975                           ; #config settings
   976  0000                     
   977                           	psect	cinit
   978  0034                     start_initialization:	
   979  0034                     __initialization:	
   980                           
   981                           ; Initialize objects allocated to BANK1
   982  0034  0021               	movlb	1	; select bank1
   983  0035  3180  2003  3180   	fcall	__pidataBANK1	;fetch initializer
   984  0038  00E4               	movwf	__pdataBANK1& (0+127)
   985                           
   986                           ; Initialize objects allocated to BANK2
   987  0039  30DF               	movlw	low __pidataBANK2
   988  003A  0084               	movwf	4
   989  003B  3087               	movlw	(high __pidataBANK2)| (0+128)
   990  003C  0085               	movwf	5
   991  003D  3020               	movlw	low __pdataBANK2
   992  003E  0086               	movwf	6
   993  003F  3001               	movlw	high __pdataBANK2
   994  0040  0087               	movwf	7
   995  0041  3020               	movlw	32
   996  0042  318F  272E  3180   	fcall	init_ram
   997                           
   998                           ; Clear objects allocated to COMMON
   999  0045  01F6               	clrf	__pbssCOMMON& (0+127)
  1000  0046  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1001  0047  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1002  0048  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  1003                           
  1004                           ; Clear objects allocated to BANK1
  1005  0049  30A0               	movlw	low __pbssBANK1
  1006  004A  0084               	movwf	4
  1007  004B  3000               	movlw	high __pbssBANK1
  1008  004C  0085               	movwf	5
  1009  004D  3022               	movlw	34
  1010  004E  318F  2728  3180   	fcall	clear_ram0
  1011                           
  1012                           ; Clear objects allocated to BANK2
  1013  0051  3040               	movlw	low __pbssBANK2
  1014  0052  0084               	movwf	4
  1015  0053  3001               	movlw	high __pbssBANK2
  1016  0054  0085               	movwf	5
  1017  0055  3010               	movlw	16
  1018  0056  318F  2728         	fcall	clear_ram0
  1019  0058                     end_of_initialization:	
  1020                           ;End of C runtime variable initialization code
  1021                           
  1022  0058                     __end_of__initialization:	
  1023  0058  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1024  0059  0020               	movlb	0
  1025  005A  318F  2FD9         	ljmp	_main	;jump to C main() function
  1026                           
  1027                           	psect	bssCOMMON
  1028  0076                     __pbssCOMMON:	
  1029  0076                     Interrupt_TMR1@IntCnt:	
  1030  0076                     	ds	2
  1031  0078                     __IntNum:	
  1032  0078                     	ds	2
  1033                           
  1034                           	psect	bssBANK1
  1035  00A0                     __pbssBANK1:	
  1036  00A0                     __TMRCnt:	
  1037  00A0                     	ds	10
  1038  00AA                     ReceiveTargetAngle@pre_angle:	
  1039  00AA                     	ds	8
  1040  00B2                     __DebugTxData:	
  1041  00B2                     	ds	5
  1042  00B7                     ReceiveTargetAngle@F2792:	
  1043  00B7                     	ds	4
  1044  00BB                     __CHq:	
  1045  00BB                     	ds	4
  1046  00BF                     Interrupt_TX@cnt:	
  1047  00BF                     	ds	2
  1048  00C1                     __isBusy:	
  1049  00C1                     	ds	1
  1050                           
  1051                           	psect	dataBANK1
  1052  00E4                     __pdataBANK1:	
  1053  00E4                     SetParameter@isFirst:	
  1054  00E4                     	ds	1
  1055                           
  1056                           	psect	bssBANK2
  1057  0140                     __pbssBANK2:	
  1058  0140                     SetParameter@Parameter:	
  1059  0140                     	ds	16
  1060                           
  1061                           	psect	dataBANK2
  1062  0120                     __pdataBANK2:	
  1063  0120                     __Parameters:	
  1064  0120                     	ds	32
  1065                           
  1066                           	psect	inittext
  1067  0F2E                     init_ram:	
  1068  0F2E  00FE               	movwf	126
  1069  0F2F                     initloop:	
  1070  0F2F  0012               	moviw fsr0++
  1071  0F30  001E               	movwi fsr1++
  1072  0F31  0BFE               	decfsz	126,f
  1073  0F32  2F2F               	goto	initloop
  1074  0F33  3400               	retlw	0
  1075                           
  1076                           	psect	clrtext
  1077  0F28                     clear_ram0:	
  1078                           ;	Called with FSR0 containing the base address, and
  1079                           ;	WREG with the size to clear
  1080                           
  1081  0F28  0064               	clrwdt	;clear the watchdog before getting into this loop
  1082  0F29                     clrloop0:	
  1083  0F29  0180               	clrf	0	;clear RAM location pointed to by FSR
  1084  0F2A  3101               	addfsr 0,1
  1085  0F2B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1086  0F2C  2F29               	goto	clrloop0	;have we reached the end yet?
  1087  0F2D  3400               	retlw	0	;all done for this memory range, return
  1088                           
  1089                           	psect	cstackBANK1
  1090  00C2                     __pcstackBANK1:	
  1091  00C2                     ??_SetParameter:	
  1092                           
  1093                           ; 1 bytes @ 0x0
  1094  00C2                     	ds	9
  1095  00CB                     SetParameter@Mode:	
  1096                           
  1097                           ; 1 bytes @ 0x9
  1098  00CB                     	ds	1
  1099  00CC                     SetParameter@Servo:	
  1100                           
  1101                           ; 1 bytes @ 0xA
  1102  00CC                     	ds	1
  1103  00CD                     SetParameter@i:	
  1104                           
  1105                           ; 2 bytes @ 0xB
  1106  00CD                     	ds	2
  1107  00CF                     main@Servo:	
  1108                           
  1109                           ; 20 bytes @ 0xD
  1110  00CF                     	ds	20
  1111  00E3                     main@isFirst:	
  1112                           
  1113                           ; 1 bytes @ 0x21
  1114  00E3                     	ds	1
  1115                           
  1116                           	psect	cstackCOMMON
  1117  0070                     __pcstackCOMMON:	
  1118  0070                     ?_Init:	
  1119  0070                     ?_ReceiveTargetAngle:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ?_SetParameter:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_CalcNextCnt:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ?_Interrupt_TMR1:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_Interrupt_TX:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ??_Interrupt_TX:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_InitOsc:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_InitPin:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ?_InitTmr:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_INTERRUPT_HANDLER:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?i1_Output:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_main:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     i1Output@value:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0x0
  1160  0070                     	ds	1
  1161  0071                     ??i1_Output:	
  1162                           
  1163                           ; 1 bytes @ 0x1
  1164  0071                     	ds	1
  1165  0072                     i1Output@ch:	
  1166                           
  1167                           ; 1 bytes @ 0x2
  1168  0072                     	ds	1
  1169  0073                     ??_Interrupt_TMR1:	
  1170                           
  1171                           ; 1 bytes @ 0x3
  1172  0073                     	ds	1
  1173  0074                     ??_INTERRUPT_HANDLER:	
  1174                           
  1175                           ; 1 bytes @ 0x4
  1176  0074                     	ds	2
  1177                           
  1178                           	psect	cstackBANK0
  1179  0020                     __pcstackBANK0:	
  1180  0020                     ??_Init:	
  1181  0020                     ?_Output:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0020                     ??_InitOsc:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0020                     ??_InitPin:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0020                     ??_InitTmr:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0020                     ?___bmul:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0020                     ?___ftpack:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0020                     Output@value:	
  1200                           ; 3 bytes @ 0x0
  1201                           
  1202  0020                     ___bmul@multiplicand:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0020                     ___ftpack@arg:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208                           
  1209                           ; 3 bytes @ 0x0
  1210  0020                     	ds	1
  1211  0021                     ??_Output:	
  1212  0021                     ??___bmul:	
  1213                           ; 1 bytes @ 0x1
  1214                           
  1215                           
  1216                           ; 1 bytes @ 0x1
  1217  0021                     	ds	1
  1218  0022                     Output@ch:	
  1219  0022                     ___bmul@product:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x2
  1224  0022                     	ds	1
  1225  0023                     ___bmul@multiplier:	
  1226  0023                     ___ftpack@exp:	
  1227                           ; 1 bytes @ 0x3
  1228                           
  1229                           
  1230                           ; 1 bytes @ 0x3
  1231  0023                     	ds	1
  1232  0024                     ??_ReceiveTargetAngle:	
  1233  0024                     ?_Swap:	
  1234                           ; 1 bytes @ 0x4
  1235                           
  1236  0024                     ?_CalcTMRCnt:	
  1237                           ; 1 bytes @ 0x4
  1238                           
  1239  0024                     Swap@b:	
  1240                           ; 2 bytes @ 0x4
  1241                           
  1242  0024                     ___ftpack@sign:	
  1243                           ; 1 bytes @ 0x4
  1244                           
  1245  0024                     CalcTMRCnt@pulse_width:	
  1246                           ; 1 bytes @ 0x4
  1247                           
  1248                           
  1249                           ; 2 bytes @ 0x4
  1250  0024                     	ds	1
  1251  0025                     ??_Swap:	
  1252  0025                     ??___ftpack:	
  1253                           ; 1 bytes @ 0x5
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x5
  1257  0025                     	ds	1
  1258  0026                     ??_CalcTMRCnt:	
  1259  0026                     Swap@tmp:	
  1260                           ; 1 bytes @ 0x6
  1261                           
  1262                           
  1263                           ; 5 bytes @ 0x6
  1264  0026                     	ds	2
  1265  0028                     ?___awtoft:	
  1266  0028                     ?___lbtoft:	
  1267                           ; 3 bytes @ 0x8
  1268                           
  1269  0028                     CalcTMRCnt@cnt:	
  1270                           ; 3 bytes @ 0x8
  1271                           
  1272  0028                     ___awtoft@c:	
  1273                           ; 2 bytes @ 0x8
  1274                           
  1275                           
  1276                           ; 2 bytes @ 0x8
  1277  0028                     	ds	3
  1278  002B                     ??___awtoft:	
  1279  002B                     ??___lbtoft:	
  1280                           ; 1 bytes @ 0xB
  1281                           
  1282  002B                     Swap@a:	
  1283                           ; 1 bytes @ 0xB
  1284                           
  1285                           
  1286                           ; 1 bytes @ 0xB
  1287  002B                     	ds	1
  1288  002C                     ??_CalcNextCnt:	
  1289                           
  1290                           ; 1 bytes @ 0xC
  1291  002C                     	ds	1
  1292  002D                     ___awtoft@sign:	
  1293                           
  1294                           ; 1 bytes @ 0xD
  1295  002D                     	ds	1
  1296  002E                     ?___ftdiv:	
  1297  002E                     ___ftdiv@f2:	
  1298                           ; 3 bytes @ 0xE
  1299                           
  1300                           
  1301                           ; 3 bytes @ 0xE
  1302  002E                     	ds	1
  1303  002F                     ___lbtoft@c:	
  1304  002F                     ReceiveTargetAngle@angle_buf:	
  1305                           ; 1 bytes @ 0xF
  1306                           
  1307                           
  1308                           ; 8 bytes @ 0xF
  1309  002F                     	ds	2
  1310  0031                     ___ftdiv@f1:	
  1311                           
  1312                           ; 3 bytes @ 0x11
  1313  0031                     	ds	1
  1314  0032                     CalcNextCnt@Servo:	
  1315                           
  1316                           ; 1 bytes @ 0x12
  1317  0032                     	ds	1
  1318  0033                     CalcNextCnt@Tmp:	
  1319                           
  1320                           ; 20 bytes @ 0x13
  1321  0033                     	ds	1
  1322  0034                     ??___ftdiv:	
  1323                           
  1324                           ; 1 bytes @ 0x14
  1325  0034                     	ds	3
  1326  0037                     ReceiveTargetAngle@rx:	
  1327                           
  1328                           ; 4 bytes @ 0x17
  1329  0037                     	ds	1
  1330  0038                     ___ftdiv@cntr:	
  1331                           
  1332                           ; 1 bytes @ 0x18
  1333  0038                     	ds	1
  1334  0039                     ___ftdiv@f3:	
  1335                           
  1336                           ; 3 bytes @ 0x19
  1337  0039                     	ds	2
  1338  003B                     ReceiveTargetAngle@Servo:	
  1339                           
  1340                           ; 1 bytes @ 0x1B
  1341  003B                     	ds	1
  1342  003C                     ___ftdiv@exp:	
  1343  003C                     ReceiveTargetAngle@i:	
  1344                           ; 1 bytes @ 0x1C
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x1C
  1348  003C                     	ds	1
  1349  003D                     ___ftdiv@sign:	
  1350                           
  1351                           ; 1 bytes @ 0x1D
  1352  003D                     	ds	1
  1353  003E                     ?___ftmul:	
  1354  003E                     ___ftmul@f1:	
  1355                           ; 3 bytes @ 0x1E
  1356                           
  1357                           
  1358                           ; 3 bytes @ 0x1E
  1359  003E                     	ds	3
  1360  0041                     ___ftmul@f2:	
  1361                           
  1362                           ; 3 bytes @ 0x21
  1363  0041                     	ds	3
  1364  0044                     ??___ftmul:	
  1365                           
  1366                           ; 1 bytes @ 0x24
  1367  0044                     	ds	3
  1368  0047                     CalcNextCnt@j:	
  1369                           
  1370                           ; 2 bytes @ 0x27
  1371  0047                     	ds	1
  1372  0048                     ___ftmul@exp:	
  1373                           
  1374                           ; 1 bytes @ 0x28
  1375  0048                     	ds	1
  1376  0049                     CalcNextCnt@i:	
  1377  0049                     ___ftmul@f3_as_product:	
  1378                           ; 2 bytes @ 0x29
  1379                           
  1380                           
  1381                           ; 3 bytes @ 0x29
  1382  0049                     	ds	3
  1383  004C                     ___ftmul@cntr:	
  1384                           
  1385                           ; 1 bytes @ 0x2C
  1386  004C                     	ds	1
  1387  004D                     ___ftmul@sign:	
  1388                           
  1389                           ; 1 bytes @ 0x2D
  1390  004D                     	ds	1
  1391  004E                     ?___ftadd:	
  1392  004E                     ___ftadd@f1:	
  1393                           ; 3 bytes @ 0x2E
  1394                           
  1395                           
  1396                           ; 3 bytes @ 0x2E
  1397  004E                     	ds	3
  1398  0051                     ___ftadd@f2:	
  1399                           
  1400                           ; 3 bytes @ 0x31
  1401  0051                     	ds	3
  1402  0054                     ??___ftadd:	
  1403                           
  1404                           ; 1 bytes @ 0x34
  1405  0054                     	ds	4
  1406  0058                     ___ftadd@sign:	
  1407                           
  1408                           ; 1 bytes @ 0x38
  1409  0058                     	ds	1
  1410  0059                     ___ftadd@exp2:	
  1411                           
  1412                           ; 1 bytes @ 0x39
  1413  0059                     	ds	1
  1414  005A                     ___ftadd@exp1:	
  1415                           
  1416                           ; 1 bytes @ 0x3A
  1417  005A                     	ds	1
  1418  005B                     ?___fttol:	
  1419  005B                     ___fttol@f1:	
  1420                           ; 4 bytes @ 0x3B
  1421                           
  1422                           
  1423                           ; 3 bytes @ 0x3B
  1424  005B                     	ds	4
  1425  005F                     ??___fttol:	
  1426                           
  1427                           ; 1 bytes @ 0x3F
  1428  005F                     	ds	4
  1429  0063                     ___fttol@sign1:	
  1430                           
  1431                           ; 1 bytes @ 0x43
  1432  0063                     	ds	1
  1433  0064                     ___fttol@lval:	
  1434                           
  1435                           ; 4 bytes @ 0x44
  1436  0064                     	ds	4
  1437  0068                     ___fttol@exp1:	
  1438                           
  1439                           ; 1 bytes @ 0x48
  1440  0068                     	ds	1
  1441  0069                     ?_CalcWidth:	
  1442  0069                     CalcWidth@Parameter:	
  1443                           ; 2 bytes @ 0x49
  1444                           
  1445                           
  1446                           ; 4 bytes @ 0x49
  1447  0069                     	ds	4
  1448  006D                     ??_CalcWidth:	
  1449  006D                     CalcWidth@width:	
  1450                           ; 1 bytes @ 0x4D
  1451                           
  1452                           
  1453                           ; 2 bytes @ 0x4D
  1454  006D                     	ds	2
  1455  006F                     CalcWidth@angle:	
  1456                           
  1457                           ; 1 bytes @ 0x4F
  1458  006F                     	ds	1
  1459  0070                     ??_main:	
  1460                           
  1461                           	psect	maintext
  1462  0FD9                     __pmaintext:	
  1463                           ; 1 bytes @ 0x50
  1464 ;;
  1465 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1466 ;;
  1467 ;; *************** function _main *****************
  1468 ;; Defined at:
  1469 ;;		line 21 in file "main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  Servo          20   13[BANK1 ] struct .[4]
  1474 ;;  isFirst         1   33[BANK1 ] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2   52[None  ] int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : B1F/0
  1481 ;;		On exit  : 1F/1
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1484 ;;      Params:         0       0       0       0
  1485 ;;      Locals:         0       0      21       0
  1486 ;;      Temps:          0       0       0       0
  1487 ;;      Totals:         0       0      21       0
  1488 ;;Total ram usage:       21 bytes
  1489 ;; Hardware stack levels required when called:    7
  1490 ;; This function calls:
  1491 ;;		_CalcNextCnt
  1492 ;;		_Init
  1493 ;;		_Output
  1494 ;;		_ReceiveTargetAngle
  1495 ;;		_SetParameter
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _main
  1503  0FD9                     _main:	
  1504                           
  1505                           ;main.c: 23: bool isFirst = 1;
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1509  0FD9  0021               	movlb	1	; select bank1
  1510  0FDA  01E3               	clrf	main@isFirst^(0+128)
  1511  0FDB  0AE3               	incf	main@isFirst^(0+128),f
  1512                           
  1513                           ;main.c: 24: SERVO Servo[4];;main.c: 26: Init();
  1514  0FDC  318F  273B  318F   	fcall	_Init
  1515                           
  1516                           ;main.c: 27: Output(0b1111, 0);
  1517  0FDF  01A0               	clrf	Output@value
  1518  0FE0  300F               	movlw	15
  1519  0FE1  3187  270B  318F   	fcall	_Output
  1520  0FE4                     l1928:	
  1521                           
  1522                           ;main.c: 30: {;main.c: 32: if (isFirst == 1)
  1523  0FE4  0021               	movlb	1	; select bank1
  1524  0FE5  0363               	decf	main@isFirst^(0+128),w
  1525  0FE6  1D03               	btfss	3,2
  1526  0FE7  2FF9               	goto	l1940
  1527                           
  1528                           ;main.c: 33: {;main.c: 34: isFirst = 0;
  1529  0FE8  01E3               	clrf	main@isFirst^(0+128)
  1530                           
  1531                           ;main.c: 35: ReceiveTargetAngle(Servo);
  1532  0FE9  30CF               	movlw	(low (main@Servo| 0))& (0+255)
  1533  0FEA  3183  232B  318F   	fcall	_ReceiveTargetAngle
  1534                           
  1535                           ;main.c: 36: SetParameter(Servo);
  1536  0FED  30CF               	movlw	(low (main@Servo| 0))& (0+255)
  1537  0FEE  3183  23F2  318F   	fcall	_SetParameter
  1538                           
  1539                           ;main.c: 37: _IntNum = 4 + 1;
  1540  0FF1  3005               	movlw	5
  1541  0FF2  00F8               	movwf	__IntNum
  1542  0FF3  3000               	movlw	0
  1543  0FF4  00F9               	movwf	__IntNum+1
  1544                           
  1545                           ;main.c: 38: CalcNextCnt(Servo);
  1546  0FF5  30CF               	movlw	(low (main@Servo| 0))& (0+255)
  1547  0FF6  3180  205C  318F   	fcall	_CalcNextCnt
  1548  0FF9                     l1940:	
  1549  0FF9  0021               	movlb	1	; select bank1
  1550  0FFA  0841               	movf	__isBusy^(0+128),w
  1551  0FFB  1D03               	btfss	3,2
  1552  0FFC  2FE4               	goto	l1928
  1553                           
  1554                           ;main.c: 43: {;main.c: 44: isFirst = 1;
  1555  0FFD  01E3               	clrf	main@isFirst^(0+128)
  1556  0FFE  0AE3               	incf	main@isFirst^(0+128),f
  1557  0FFF  2FF9               	goto	l1940
  1558  1000                     __end_of_main:	
  1559                           
  1560                           	psect	text1
  1561  03F2                     __ptext1:	
  1562 ;; *************** function _SetParameter *****************
  1563 ;; Defined at:
  1564 ;;		line 86 in file "main.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  Servo           1    wreg     PTR struct .
  1567 ;;		 -> main@Servo(20), 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  Servo           1   10[BANK1 ] PTR struct .
  1570 ;;		 -> main@Servo(20), 
  1571 ;;  Mode            1    9[BANK1 ] unsigned char 
  1572 ;;  i               2   11[BANK1 ] int 
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/1
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       4       0
  1584 ;;      Temps:          0       0       9       0
  1585 ;;      Totals:         0       0      13       0
  1586 ;;Total ram usage:       13 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    6
  1589 ;; This function calls:
  1590 ;;		_CalcWidth
  1591 ;;		___bmul
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _SetParameter
  1599  03F2                     _SetParameter:	
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _SetParameter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1603                           ;SetParameter@Servo stored from wreg
  1604  03F2  0021               	movlb	1	; select bank1
  1605  03F3  00CC               	movwf	SetParameter@Servo^(0+128)
  1606                           
  1607                           ;main.c: 88: static PARAMETER Parameter[4];;main.c: 89: static bool isFirst = 1;;main.c:
      +                           90: int i;;main.c: 93: if (isFirst == 1)
  1608  03F4  0364               	decf	SetParameter@isFirst^(0+128),w
  1609  03F5  1D03               	btfss	3,2
  1610  03F6  2C44               	goto	l1772
  1611                           
  1612                           ;main.c: 94: {;main.c: 95: isFirst = 0;
  1613  03F7  01E4               	clrf	SetParameter@isFirst^(0+128)
  1614                           
  1615                           ;main.c: 96: uint8_t Mode = (PORTB & 0b00111111);
  1616  03F8  0020               	movlb	0	; select bank0
  1617  03F9  080D               	movf	13,w	;volatile
  1618  03FA  393F               	andlw	63
  1619  03FB  0021               	movlb	1	; select bank1
  1620  03FC  00C2               	movwf	??_SetParameter^(0+128)
  1621  03FD  0842               	movf	??_SetParameter^(0+128),w
  1622  03FE  00CB               	movwf	SetParameter@Mode^(0+128)
  1623                           
  1624                           ;main.c: 97: for (i = 0; i < 4; i++)
  1625  03FF  01CD               	clrf	SetParameter@i^(0+128)
  1626  0400  01CE               	clrf	(SetParameter@i+1)^(0+128)
  1627  0401                     l1766:	
  1628                           
  1629                           ;main.c: 98: {;main.c: 99: Parameter[i] = _Parameters[Mode][i];
  1630  0401  0021               	movlb	1	; select bank1
  1631  0402  084B               	movf	SetParameter@Mode^(0+128),w
  1632  0403  00C2               	movwf	??_SetParameter^(0+128)
  1633  0404  3004               	movlw	4
  1634  0405                     u1915:	
  1635  0405  35C2               	lslf	??_SetParameter^(0+128),f
  1636  0406  0B89               	decfsz	9,f
  1637  0407  2C05               	goto	u1915
  1638  0408  3020               	movlw	(low (__Parameters| (0+256)))& (0+255)
  1639  0409  0742               	addwf	??_SetParameter^(0+128),w
  1640  040A  00C3               	movwf	(??_SetParameter+1)^(0+128)
  1641  040B  084D               	movf	SetParameter@i^(0+128),w
  1642  040C  00C4               	movwf	(??_SetParameter+2)^(0+128)
  1643  040D  3001               	movlw	1
  1644  040E                     u1925:	
  1645  040E  35C4               	lslf	(??_SetParameter+2)^(0+128),f
  1646  040F  3EFF               	addlw	-1
  1647  0410  1D03               	skipz
  1648  0411  2C0E               	goto	u1925
  1649  0412  3544               	lslf	(??_SetParameter+2)^(0+128),w
  1650  0413  0743               	addwf	(??_SetParameter+1)^(0+128),w
  1651  0414  00C5               	movwf	(??_SetParameter+3)^(0+128)
  1652  0415  0845               	movf	(??_SetParameter+3)^(0+128),w
  1653  0416  0086               	movwf	6
  1654  0417  3001               	movlw	1	; select bank2/3
  1655  0418  0087               	movwf	7
  1656  0419  3F40               	moviw [0]fsr1
  1657  041A  00C6               	movwf	(??_SetParameter+4)^(0+128)
  1658  041B  3F41               	moviw [1]fsr1
  1659  041C  00C7               	movwf	((??_SetParameter+4)^(0+128)+1)
  1660  041D  3F42               	moviw [2]fsr1
  1661  041E  00C8               	movwf	((??_SetParameter+4)^(0+128)+2)
  1662  041F  3F43               	moviw [3]fsr1
  1663  0420  00C9               	movwf	((??_SetParameter+4)^(0+128)+3)
  1664  0421  084D               	movf	SetParameter@i^(0+128),w
  1665  0422  00CA               	movwf	(??_SetParameter+8)^(0+128)
  1666  0423  3001               	movlw	1
  1667  0424                     u1935:	
  1668  0424  35CA               	lslf	(??_SetParameter+8)^(0+128),f
  1669  0425  3EFF               	addlw	-1
  1670  0426  1D03               	skipz
  1671  0427  2C24               	goto	u1935
  1672  0428  354A               	lslf	(??_SetParameter+8)^(0+128),w
  1673  0429  3E40               	addlw	(low (SetParameter@Parameter| (0+256)))& (0+255)
  1674  042A  0086               	movwf	6
  1675  042B  3001               	movlw	1	; select bank2/3
  1676  042C  0087               	movwf	7
  1677  042D  0846               	movf	(??_SetParameter+4)^(0+128),w
  1678  042E  3FC0               	movwi [0]fsr1
  1679  042F  0847               	movf	(??_SetParameter+5)^(0+128),w
  1680  0430  3FC1               	movwi [1]fsr1
  1681  0431  0848               	movf	(??_SetParameter+6)^(0+128),w
  1682  0432  3FC2               	movwi [2]fsr1
  1683  0433  0849               	movf	(??_SetParameter+7)^(0+128),w
  1684  0434  3FC3               	movwi [3]fsr1
  1685  0435  3001               	movlw	1
  1686  0436  07CD               	addwf	SetParameter@i^(0+128),f
  1687  0437  3000               	movlw	0
  1688  0438  3DCE               	addwfc	(SetParameter@i+1)^(0+128),f
  1689  0439  084E               	movf	(SetParameter@i+1)^(0+128),w
  1690  043A  3A80               	xorlw	128
  1691  043B  00C2               	movwf	??_SetParameter^(0+128)
  1692  043C  3080               	movlw	128
  1693  043D  0242               	subwf	??_SetParameter^(0+128),w
  1694  043E  1D03               	skipz
  1695  043F  2C42               	goto	u1945
  1696  0440  3004               	movlw	4
  1697  0441  024D               	subwf	SetParameter@i^(0+128),w
  1698  0442                     u1945:	
  1699  0442  1C03               	skipc
  1700  0443  2C01               	goto	l1766
  1701  0444                     l1772:	
  1702                           
  1703                           ;main.c: 100: };main.c: 101: };main.c: 104: for (i = 0; i < 4; i++)
  1704  0444  0021               	movlb	1	; select bank1
  1705  0445  01CD               	clrf	SetParameter@i^(0+128)
  1706  0446  01CE               	clrf	(SetParameter@i+1)^(0+128)
  1707  0447                     l1778:	
  1708                           
  1709                           ;main.c: 105: {;main.c: 106: Servo[i].width = CalcWidth(Servo[i].angle, Parameter[i]);
  1710  0447  3005               	movlw	5
  1711  0448  0021               	movlb	1	; select bank1
  1712  0449  00C2               	movwf	??_SetParameter^(0+128)
  1713  044A  0842               	movf	??_SetParameter^(0+128),w
  1714  044B  0020               	movlb	0	; select bank0
  1715  044C  00A0               	movwf	___bmul@multiplicand
  1716  044D  0021               	movlb	1	; select bank1
  1717  044E  084D               	movf	SetParameter@i^(0+128),w
  1718  044F  318F  2772  3183   	fcall	___bmul
  1719  0452  0021               	movlb	1	; select bank1
  1720  0453  074C               	addwf	SetParameter@Servo^(0+128),w
  1721  0454  00C3               	movwf	(??_SetParameter+1)^(0+128)
  1722  0455  0843               	movf	(??_SetParameter+1)^(0+128),w
  1723  0456  3E02               	addlw	2
  1724  0457  0086               	movwf	6
  1725  0458  0187               	clrf	7
  1726  0459  084D               	movf	SetParameter@i^(0+128),w
  1727  045A  00C4               	movwf	(??_SetParameter+2)^(0+128)
  1728  045B  3001               	movlw	1
  1729  045C                     u1955:	
  1730  045C  35C4               	lslf	(??_SetParameter+2)^(0+128),f
  1731  045D  3EFF               	addlw	-1
  1732  045E  1D03               	skipz
  1733  045F  2C5C               	goto	u1955
  1734  0460  3544               	lslf	(??_SetParameter+2)^(0+128),w
  1735  0461  3E40               	addlw	(low (SetParameter@Parameter| (0+256)))& (0+255)
  1736  0462  0084               	movwf	4
  1737  0463  3001               	movlw	1	; select bank2/3
  1738  0464  0085               	movwf	5
  1739  0465  3F00               	moviw [0]fsr0
  1740  0466  0020               	movlb	0	; select bank0
  1741  0467  00E9               	movwf	CalcWidth@Parameter
  1742  0468  3F01               	moviw [1]fsr0
  1743  0469  00EA               	movwf	CalcWidth@Parameter+1
  1744  046A  3F02               	moviw [2]fsr0
  1745  046B  00EB               	movwf	CalcWidth@Parameter+2
  1746  046C  3F03               	moviw [3]fsr0
  1747  046D  00EC               	movwf	CalcWidth@Parameter+3
  1748  046E  3005               	movlw	5
  1749  046F  0021               	movlb	1	; select bank1
  1750  0470  00C5               	movwf	(??_SetParameter+3)^(0+128)
  1751  0471  0845               	movf	(??_SetParameter+3)^(0+128),w
  1752  0472  0020               	movlb	0	; select bank0
  1753  0473  00A0               	movwf	___bmul@multiplicand
  1754  0474  0021               	movlb	1	; select bank1
  1755  0475  084D               	movf	SetParameter@i^(0+128),w
  1756  0476  318F  2772  3183   	fcall	___bmul
  1757  0479  0021               	movlb	1	; select bank1
  1758  047A  074C               	addwf	SetParameter@Servo^(0+128),w
  1759  047B  00C6               	movwf	(??_SetParameter+4)^(0+128)
  1760  047C  0846               	movf	(??_SetParameter+4)^(0+128),w
  1761  047D  0084               	movwf	4
  1762  047E  0185               	clrf	5
  1763  047F  0800               	movf	0,w
  1764  0480  3186  26B7  3183   	fcall	_CalcWidth
  1765  0483  0869               	movf	?_CalcWidth,w
  1766  0484  3FC0               	movwi [0]fsr1
  1767  0485  086A               	movf	?_CalcWidth+1,w
  1768  0486  3FC1               	movwi [1]fsr1
  1769                           
  1770                           ;main.c: 108: Servo[i].ch = _CHs[i];
  1771  0487  0021               	movlb	1	; select bank1
  1772  0488  084E               	movf	(SetParameter@i+1)^(0+128),w
  1773  0489  0085               	movwf	5
  1774  048A  084D               	movf	SetParameter@i^(0+128),w
  1775  048B  0084               	movwf	4
  1776  048C  30FF               	movlw	low (__CHs| (0+32768))
  1777  048D  0784               	addwf	4,f
  1778  048E  3087               	movlw	high (__CHs| (0+32768))
  1779  048F  3D85               	addwfc	5,f
  1780  0490  0800               	movf	0,w	;code access
  1781  0491  00C2               	movwf	??_SetParameter^(0+128)
  1782  0492  3005               	movlw	5
  1783  0493  00C3               	movwf	(??_SetParameter+1)^(0+128)
  1784  0494  0843               	movf	(??_SetParameter+1)^(0+128),w
  1785  0495  0020               	movlb	0	; select bank0
  1786  0496  00A0               	movwf	___bmul@multiplicand
  1787  0497  0021               	movlb	1	; select bank1
  1788  0498  084D               	movf	SetParameter@i^(0+128),w
  1789  0499  318F  2772  3183   	fcall	___bmul
  1790  049C  0021               	movlb	1	; select bank1
  1791  049D  074C               	addwf	SetParameter@Servo^(0+128),w
  1792  049E  00C4               	movwf	(??_SetParameter+2)^(0+128)
  1793  049F  0844               	movf	(??_SetParameter+2)^(0+128),w
  1794  04A0  3E04               	addlw	4
  1795  04A1  0086               	movwf	6
  1796  04A2  0187               	clrf	7
  1797  04A3  0842               	movf	??_SetParameter^(0+128),w
  1798  04A4  0081               	movwf	1
  1799  04A5  3001               	movlw	1
  1800  04A6  07CD               	addwf	SetParameter@i^(0+128),f
  1801  04A7  3000               	movlw	0
  1802  04A8  3DCE               	addwfc	(SetParameter@i+1)^(0+128),f
  1803  04A9  084E               	movf	(SetParameter@i+1)^(0+128),w
  1804  04AA  3A80               	xorlw	128
  1805  04AB  00C2               	movwf	??_SetParameter^(0+128)
  1806  04AC  3080               	movlw	128
  1807  04AD  0242               	subwf	??_SetParameter^(0+128),w
  1808  04AE  1D03               	skipz
  1809  04AF  2CB2               	goto	u1965
  1810  04B0  3004               	movlw	4
  1811  04B1  024D               	subwf	SetParameter@i^(0+128),w
  1812  04B2                     u1965:	
  1813  04B2  1803               	btfsc	3,0
  1814  04B3  0008               	return
  1815  04B4  2C47               	goto	l1778
  1816  04B5                     __end_of_SetParameter:	
  1817                           
  1818                           	psect	text2
  1819  06B7                     __ptext2:	
  1820 ;; *************** function _CalcWidth *****************
  1821 ;; Defined at:
  1822 ;;		line 186 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  angle           1    wreg     unsigned char 
  1825 ;;  Parameter       4   73[BANK0 ] struct .
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  angle           1   79[BANK0 ] unsigned char 
  1828 ;;  width           2   77[BANK0 ] unsigned int 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   73[BANK0 ] unsigned int 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 1F/1
  1835 ;;		On exit  : 1F/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1838 ;;      Params:         0       4       0       0
  1839 ;;      Locals:         0       3       0       0
  1840 ;;      Temps:          0       0       0       0
  1841 ;;      Totals:         0       7       0       0
  1842 ;;Total ram usage:        7 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    5
  1845 ;; This function calls:
  1846 ;;		___awtoft
  1847 ;;		___ftadd
  1848 ;;		___ftdiv
  1849 ;;		___ftmul
  1850 ;;		___fttol
  1851 ;;		___lbtoft
  1852 ;; This function is called by:
  1853 ;;		_SetParameter
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function _CalcWidth
  1859  06B7                     _CalcWidth:	
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _CalcWidth: [wreg+status,2+status,0+pclath+cstack]
  1863                           ;CalcWidth@angle stored from wreg
  1864  06B7  0020               	movlb	0	; select bank0
  1865  06B8  00EF               	movwf	CalcWidth@angle
  1866                           
  1867                           ;main.c: 188: uint16_t width = (uint16_t) ((Parameter.max - Parameter.min) / 180.0 * ang
      +                          le + Parameter.min);
  1868  06B9  0869               	movf	CalcWidth@Parameter,w
  1869  06BA  026B               	subwf	CalcWidth@Parameter+2,w
  1870  06BB  00A8               	movwf	___awtoft@c
  1871  06BC  086A               	movf	CalcWidth@Parameter+1,w
  1872  06BD  3B6C               	subwfb	CalcWidth@Parameter+3,w
  1873  06BE  00A9               	movwf	___awtoft@c+1
  1874  06BF  318F  27B9  3186   	fcall	___awtoft
  1875  06C2  0828               	movf	?___awtoft,w
  1876  06C3  00B1               	movwf	___ftdiv@f1
  1877  06C4  0829               	movf	?___awtoft+1,w
  1878  06C5  00B2               	movwf	___ftdiv@f1+1
  1879  06C6  082A               	movf	?___awtoft+2,w
  1880  06C7  00B3               	movwf	___ftdiv@f1+2
  1881  06C8  3000               	movlw	0
  1882  06C9  00AE               	movwf	___ftdiv@f2
  1883  06CA  3034               	movlw	52
  1884  06CB  00AF               	movwf	___ftdiv@f2+1
  1885  06CC  3043               	movlw	67
  1886  06CD  00B0               	movwf	___ftdiv@f2+2
  1887  06CE  3185  254F  3186   	fcall	___ftdiv
  1888  06D1  082E               	movf	?___ftdiv,w
  1889  06D2  00C1               	movwf	___ftmul@f2
  1890  06D3  082F               	movf	?___ftdiv+1,w
  1891  06D4  00C2               	movwf	___ftmul@f2+1
  1892  06D5  0830               	movf	?___ftdiv+2,w
  1893  06D6  00C3               	movwf	___ftmul@f2+2
  1894  06D7  086F               	movf	CalcWidth@angle,w
  1895  06D8  318F  2784  3186   	fcall	___lbtoft
  1896  06DB  0828               	movf	?___lbtoft,w
  1897  06DC  00BE               	movwf	___ftmul@f1
  1898  06DD  0829               	movf	?___lbtoft+1,w
  1899  06DE  00BF               	movwf	___ftmul@f1+1
  1900  06DF  082A               	movf	?___lbtoft+2,w
  1901  06E0  00C0               	movwf	___ftmul@f1+2
  1902  06E1  3184  24B5  3186   	fcall	___ftmul
  1903  06E4  083E               	movf	?___ftmul,w
  1904  06E5  00D1               	movwf	___ftadd@f2
  1905  06E6  083F               	movf	?___ftmul+1,w
  1906  06E7  00D2               	movwf	___ftadd@f2+1
  1907  06E8  0840               	movf	?___ftmul+2,w
  1908  06E9  00D3               	movwf	___ftadd@f2+2
  1909  06EA  086A               	movf	CalcWidth@Parameter+1,w
  1910  06EB  00A9               	movwf	___awtoft@c+1
  1911  06EC  0869               	movf	CalcWidth@Parameter,w
  1912  06ED  00A8               	movwf	___awtoft@c
  1913  06EE  318F  27B9  3186   	fcall	___awtoft
  1914  06F1  0828               	movf	?___awtoft,w
  1915  06F2  00CE               	movwf	___ftadd@f1
  1916  06F3  0829               	movf	?___awtoft+1,w
  1917  06F4  00CF               	movwf	___ftadd@f1+1
  1918  06F5  082A               	movf	?___awtoft+2,w
  1919  06F6  00D0               	movwf	___ftadd@f1+2
  1920  06F7  3182  2237  3186   	fcall	___ftadd
  1921  06FA  084E               	movf	?___ftadd,w
  1922  06FB  00DB               	movwf	___fttol@f1
  1923  06FC  084F               	movf	?___ftadd+1,w
  1924  06FD  00DC               	movwf	___fttol@f1+1
  1925  06FE  0850               	movf	?___ftadd+2,w
  1926  06FF  00DD               	movwf	___fttol@f1+2
  1927  0700  3185  25DE         	fcall	___fttol
  1928  0702  085C               	movf	?___fttol+1,w
  1929  0703  00EE               	movwf	CalcWidth@width+1
  1930  0704  085B               	movf	?___fttol,w
  1931  0705  00ED               	movwf	CalcWidth@width
  1932                           
  1933                           ;main.c: 189: return width;
  1934  0706  086E               	movf	CalcWidth@width+1,w
  1935  0707  00EA               	movwf	?_CalcWidth+1
  1936  0708  086D               	movf	CalcWidth@width,w
  1937  0709  00E9               	movwf	?_CalcWidth
  1938  070A  0008               	return
  1939  070B                     __end_of_CalcWidth:	
  1940                           
  1941                           	psect	text3
  1942  0F84                     __ptext3:	
  1943 ;; *************** function ___lbtoft *****************
  1944 ;; Defined at:
  1945 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lbtoft.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  c               1    wreg     unsigned char 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  c               1   15[BANK0 ] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  3    8[BANK0 ] float 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 1F/0
  1956 ;;		On exit  : 1F/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1959 ;;      Params:         0       3       0       0
  1960 ;;      Locals:         0       1       0       0
  1961 ;;      Temps:          0       4       0       0
  1962 ;;      Totals:         0       8       0       0
  1963 ;;Total ram usage:        8 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		___ftpack
  1968 ;; This function is called by:
  1969 ;;		_CalcWidth
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function ___lbtoft
  1975  0F84                     ___lbtoft:	
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1979                           ;___lbtoft@c stored from wreg
  1980  0F84  00AF               	movwf	___lbtoft@c
  1981  0F85  082F               	movf	___lbtoft@c,w
  1982  0F86  00AB               	movwf	??___lbtoft
  1983  0F87  01AC               	clrf	??___lbtoft+1
  1984  0F88  01AD               	clrf	??___lbtoft+2
  1985  0F89  082B               	movf	??___lbtoft,w
  1986  0F8A  00A0               	movwf	___ftpack@arg
  1987  0F8B  082C               	movf	??___lbtoft+1,w
  1988  0F8C  00A1               	movwf	___ftpack@arg+1
  1989  0F8D  082D               	movf	??___lbtoft+2,w
  1990  0F8E  00A2               	movwf	___ftpack@arg+2
  1991  0F8F  308E               	movlw	142
  1992  0F90  00AE               	movwf	??___lbtoft+3
  1993  0F91  082E               	movf	??___lbtoft+3,w
  1994  0F92  00A3               	movwf	___ftpack@exp
  1995  0F93  01A4               	clrf	___ftpack@sign
  1996  0F94  3186  2653         	fcall	___ftpack
  1997  0F96  0820               	movf	?___ftpack,w
  1998  0F97  00A8               	movwf	?___lbtoft
  1999  0F98  0821               	movf	?___ftpack+1,w
  2000  0F99  00A9               	movwf	?___lbtoft+1
  2001  0F9A  0822               	movf	?___ftpack+2,w
  2002  0F9B  00AA               	movwf	?___lbtoft+2
  2003  0F9C  0008               	return
  2004  0F9D                     __end_of___lbtoft:	
  2005                           
  2006                           	psect	text4
  2007  05DE                     __ptext4:	
  2008 ;; *************** function ___fttol *****************
  2009 ;; Defined at:
  2010 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fttol.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  f1              3   59[BANK0 ] float 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  lval            4   68[BANK0 ] unsigned long 
  2015 ;;  exp1            1   72[BANK0 ] unsigned char 
  2016 ;;  sign1           1   67[BANK0 ] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  4   59[BANK0 ] long 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 1F/0
  2023 ;;		On exit  : 1F/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2026 ;;      Params:         0       4       0       0
  2027 ;;      Locals:         0       6       0       0
  2028 ;;      Temps:          0       4       0       0
  2029 ;;      Totals:         0      14       0       0
  2030 ;;Total ram usage:       14 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    3
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_CalcWidth
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function ___fttol
  2042  05DE                     ___fttol:	
  2043                           
  2044                           ;incstack = 0
  2045                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2046  05DE  085B               	movf	___fttol@f1,w
  2047  05DF  00DF               	movwf	??___fttol
  2048  05E0  085C               	movf	___fttol@f1+1,w
  2049  05E1  00E0               	movwf	??___fttol+1
  2050  05E2  085D               	movf	___fttol@f1+2,w
  2051  05E3  00E1               	movwf	??___fttol+2
  2052  05E4  1003               	clrc
  2053  05E5  0D60               	rlf	??___fttol+1,w
  2054  05E6  0D61               	rlf	??___fttol+2,w
  2055  05E7  00E2               	movwf	??___fttol+3
  2056  05E8  0862               	movf	??___fttol+3,w
  2057  05E9  00E8               	movwf	___fttol@exp1
  2058  05EA  0868               	movf	___fttol@exp1,w
  2059  05EB  1D03               	btfss	3,2
  2060  05EC  2DF6               	goto	l1592
  2061  05ED                     l1588:	
  2062  05ED  3000               	movlw	0
  2063  05EE  00DE               	movwf	?___fttol+3
  2064  05EF  3000               	movlw	0
  2065  05F0  00DD               	movwf	?___fttol+2
  2066  05F1  3000               	movlw	0
  2067  05F2  00DC               	movwf	?___fttol+1
  2068  05F3  3000               	movlw	0
  2069  05F4  00DB               	movwf	?___fttol
  2070  05F5  0008               	return
  2071  05F6                     l1592:	
  2072  05F6  085B               	movf	___fttol@f1,w
  2073  05F7  00DF               	movwf	??___fttol
  2074  05F8  085C               	movf	___fttol@f1+1,w
  2075  05F9  00E0               	movwf	??___fttol+1
  2076  05FA  085D               	movf	___fttol@f1+2,w
  2077  05FB  00E1               	movwf	??___fttol+2
  2078  05FC  3017               	movlw	23
  2079  05FD                     u1605:	
  2080  05FD  36E1               	lsrf	??___fttol+2,f
  2081  05FE  0CE0               	rrf	??___fttol+1,f
  2082  05FF  0CDF               	rrf	??___fttol,f
  2083  0600  0B89               	decfsz	9,f
  2084  0601  2DFD               	goto	u1605
  2085  0602  085F               	movf	??___fttol,w
  2086  0603  00E2               	movwf	??___fttol+3
  2087  0604  0862               	movf	??___fttol+3,w
  2088  0605  00E3               	movwf	___fttol@sign1
  2089  0606  17DC               	bsf	___fttol@f1+1,7
  2090  0607  30FF               	movlw	255
  2091  0608  05DB               	andwf	___fttol@f1,f
  2092  0609  30FF               	movlw	255
  2093  060A  05DC               	andwf	___fttol@f1+1,f
  2094  060B  3000               	movlw	0
  2095  060C  05DD               	andwf	___fttol@f1+2,f
  2096  060D  085B               	movf	___fttol@f1,w
  2097  060E  00E4               	movwf	___fttol@lval
  2098  060F  085C               	movf	___fttol@f1+1,w
  2099  0610  00E5               	movwf	___fttol@lval+1
  2100  0611  085D               	movf	___fttol@f1+2,w
  2101  0612  00E6               	movwf	___fttol@lval+2
  2102  0613  01E7               	clrf	___fttol@lval+3
  2103  0614  308E               	movlw	142
  2104  0615  02E8               	subwf	___fttol@exp1,f
  2105  0616  1FE8               	btfss	___fttol@exp1,7
  2106  0617  2E2B               	goto	l1612
  2107  0618  0868               	movf	___fttol@exp1,w
  2108  0619  3A80               	xorlw	128
  2109  061A  3E8F               	addlw	143
  2110  061B  1C03               	btfss	3,0
  2111  061C  2DED               	goto	l1588
  2112  061D                     l1610:	
  2113  061D  3001               	movlw	1
  2114  061E                     u1635:	
  2115  061E  36E7               	lsrf	___fttol@lval+3,f
  2116  061F  0CE6               	rrf	___fttol@lval+2,f
  2117  0620  0CE5               	rrf	___fttol@lval+1,f
  2118  0621  0CE4               	rrf	___fttol@lval,f
  2119  0622  0B89               	decfsz	9,f
  2120  0623  2E1E               	goto	u1635
  2121  0624  3001               	movlw	1
  2122  0625  00DF               	movwf	??___fttol
  2123  0626  085F               	movf	??___fttol,w
  2124  0627  07E8               	addwf	___fttol@exp1,f
  2125  0628  1903               	btfsc	3,2
  2126  0629  2E3C               	goto	l1620
  2127  062A  2E1D               	goto	l1610
  2128  062B                     l1612:	
  2129  062B  3018               	movlw	24
  2130  062C  0268               	subwf	___fttol@exp1,w
  2131  062D  1803               	btfsc	3,0
  2132  062E  2DED               	goto	l1588
  2133  062F                     l684:	
  2134  062F  0868               	movf	___fttol@exp1,w
  2135  0630  1903               	btfsc	3,2
  2136  0631  2E3C               	goto	l1620
  2137  0632  3001               	movlw	1
  2138  0633                     u1665:	
  2139  0633  35E4               	lslf	___fttol@lval,f
  2140  0634  0DE5               	rlf	___fttol@lval+1,f
  2141  0635  0DE6               	rlf	___fttol@lval+2,f
  2142  0636  0DE7               	rlf	___fttol@lval+3,f
  2143  0637  0B89               	decfsz	9,f
  2144  0638  2E33               	goto	u1665
  2145  0639  3001               	movlw	1
  2146  063A  02E8               	subwf	___fttol@exp1,f
  2147  063B  2E2F               	goto	l684
  2148  063C                     l1620:	
  2149  063C  0863               	movf	___fttol@sign1,w
  2150  063D  1903               	btfsc	3,2
  2151  063E  2E4A               	goto	l1624
  2152  063F  09E4               	comf	___fttol@lval,f
  2153  0640  09E5               	comf	___fttol@lval+1,f
  2154  0641  09E6               	comf	___fttol@lval+2,f
  2155  0642  09E7               	comf	___fttol@lval+3,f
  2156  0643  0AE4               	incf	___fttol@lval,f
  2157  0644  1903               	skipnz
  2158  0645  0AE5               	incf	___fttol@lval+1,f
  2159  0646  1903               	skipnz
  2160  0647  0AE6               	incf	___fttol@lval+2,f
  2161  0648  1903               	skipnz
  2162  0649  0AE7               	incf	___fttol@lval+3,f
  2163  064A                     l1624:	
  2164  064A  0867               	movf	___fttol@lval+3,w
  2165  064B  00DE               	movwf	?___fttol+3
  2166  064C  0866               	movf	___fttol@lval+2,w
  2167  064D  00DD               	movwf	?___fttol+2
  2168  064E  0865               	movf	___fttol@lval+1,w
  2169  064F  00DC               	movwf	?___fttol+1
  2170  0650  0864               	movf	___fttol@lval,w
  2171  0651  00DB               	movwf	?___fttol
  2172  0652  0008               	return
  2173  0653                     __end_of___fttol:	
  2174                           
  2175                           	psect	text5
  2176  04B5                     __ptext5:	
  2177 ;; *************** function ___ftmul *****************
  2178 ;; Defined at:
  2179 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftmul.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  f1              3   30[BANK0 ] float 
  2182 ;;  f2              3   33[BANK0 ] float 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  f3_as_produc    3   41[BANK0 ] unsigned um
  2185 ;;  sign            1   45[BANK0 ] unsigned char 
  2186 ;;  cntr            1   44[BANK0 ] unsigned char 
  2187 ;;  exp             1   40[BANK0 ] unsigned char 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  3   30[BANK0 ] float 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, pclath, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 1F/0
  2194 ;;		On exit  : 1F/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2197 ;;      Params:         0       6       0       0
  2198 ;;      Locals:         0       6       0       0
  2199 ;;      Temps:          0       4       0       0
  2200 ;;      Totals:         0      16       0       0
  2201 ;;Total ram usage:       16 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    4
  2204 ;; This function calls:
  2205 ;;		___ftpack
  2206 ;; This function is called by:
  2207 ;;		_CalcWidth
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function ___ftmul
  2213  04B5                     ___ftmul:	
  2214                           
  2215                           ;incstack = 0
  2216                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2217  04B5  083E               	movf	___ftmul@f1,w
  2218  04B6  00C4               	movwf	??___ftmul
  2219  04B7  083F               	movf	___ftmul@f1+1,w
  2220  04B8  00C5               	movwf	??___ftmul+1
  2221  04B9  0840               	movf	___ftmul@f1+2,w
  2222  04BA  00C6               	movwf	??___ftmul+2
  2223  04BB  1003               	clrc
  2224  04BC  0D45               	rlf	??___ftmul+1,w
  2225  04BD  0D46               	rlf	??___ftmul+2,w
  2226  04BE  00C7               	movwf	??___ftmul+3
  2227  04BF  0847               	movf	??___ftmul+3,w
  2228  04C0  00C8               	movwf	___ftmul@exp
  2229  04C1  0848               	movf	___ftmul@exp,w
  2230  04C2  1D03               	btfss	3,2
  2231  04C3  2CCB               	goto	l1536
  2232  04C4  3000               	movlw	0
  2233  04C5  00BE               	movwf	?___ftmul
  2234  04C6  3000               	movlw	0
  2235  04C7  00BF               	movwf	?___ftmul+1
  2236  04C8  3000               	movlw	0
  2237  04C9  00C0               	movwf	?___ftmul+2
  2238  04CA  0008               	return
  2239  04CB                     l1536:	
  2240  04CB  0841               	movf	___ftmul@f2,w
  2241  04CC  00C4               	movwf	??___ftmul
  2242  04CD  0842               	movf	___ftmul@f2+1,w
  2243  04CE  00C5               	movwf	??___ftmul+1
  2244  04CF  0843               	movf	___ftmul@f2+2,w
  2245  04D0  00C6               	movwf	??___ftmul+2
  2246  04D1  1003               	clrc
  2247  04D2  0D45               	rlf	??___ftmul+1,w
  2248  04D3  0D46               	rlf	??___ftmul+2,w
  2249  04D4  00C7               	movwf	??___ftmul+3
  2250  04D5  0847               	movf	??___ftmul+3,w
  2251  04D6  00CD               	movwf	___ftmul@sign
  2252  04D7  084D               	movf	___ftmul@sign,w
  2253  04D8  1D03               	btfss	3,2
  2254  04D9  2CE1               	goto	l1542
  2255  04DA  3000               	movlw	0
  2256  04DB  00BE               	movwf	?___ftmul
  2257  04DC  3000               	movlw	0
  2258  04DD  00BF               	movwf	?___ftmul+1
  2259  04DE  3000               	movlw	0
  2260  04DF  00C0               	movwf	?___ftmul+2
  2261  04E0  0008               	return
  2262  04E1                     l1542:	
  2263  04E1  084D               	movf	___ftmul@sign,w
  2264  04E2  3E7B               	addlw	123
  2265  04E3  00C4               	movwf	??___ftmul
  2266  04E4  0844               	movf	??___ftmul,w
  2267  04E5  07C8               	addwf	___ftmul@exp,f
  2268  04E6  0840               	movf	___ftmul@f1+2,w
  2269  04E7  00C4               	movwf	??___ftmul
  2270  04E8  0844               	movf	??___ftmul,w
  2271  04E9  00CD               	movwf	___ftmul@sign
  2272  04EA  0843               	movf	___ftmul@f2+2,w
  2273  04EB  00C4               	movwf	??___ftmul
  2274  04EC  0844               	movf	??___ftmul,w
  2275  04ED  06CD               	xorwf	___ftmul@sign,f
  2276  04EE  3080               	movlw	128
  2277  04EF  00C4               	movwf	??___ftmul
  2278  04F0  0844               	movf	??___ftmul,w
  2279  04F1  05CD               	andwf	___ftmul@sign,f
  2280  04F2  17BF               	bsf	___ftmul@f1+1,7
  2281  04F3  17C2               	bsf	___ftmul@f2+1,7
  2282  04F4  30FF               	movlw	255
  2283  04F5  05C1               	andwf	___ftmul@f2,f
  2284  04F6  30FF               	movlw	255
  2285  04F7  05C2               	andwf	___ftmul@f2+1,f
  2286  04F8  3000               	movlw	0
  2287  04F9  05C3               	andwf	___ftmul@f2+2,f
  2288  04FA  3000               	movlw	0
  2289  04FB  00C9               	movwf	___ftmul@f3_as_product
  2290  04FC  3000               	movlw	0
  2291  04FD  00CA               	movwf	___ftmul@f3_as_product+1
  2292  04FE  3000               	movlw	0
  2293  04FF  00CB               	movwf	___ftmul@f3_as_product+2
  2294  0500  3007               	movlw	7
  2295  0501  00C4               	movwf	??___ftmul
  2296  0502  0844               	movf	??___ftmul,w
  2297  0503  00CC               	movwf	___ftmul@cntr
  2298  0504                     l1560:	
  2299  0504  1C3E               	btfss	___ftmul@f1,0
  2300  0505  2D0C               	goto	l1564
  2301  0506  0841               	movf	___ftmul@f2,w
  2302  0507  07C9               	addwf	___ftmul@f3_as_product,f
  2303  0508  0842               	movf	___ftmul@f2+1,w
  2304  0509  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  2305  050A  0843               	movf	___ftmul@f2+2,w
  2306  050B  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  2307  050C                     l1564:	
  2308  050C  3001               	movlw	1
  2309  050D                     u1525:	
  2310  050D  36C0               	lsrf	___ftmul@f1+2,f
  2311  050E  0CBF               	rrf	___ftmul@f1+1,f
  2312  050F  0CBE               	rrf	___ftmul@f1,f
  2313  0510  0B89               	decfsz	9,f
  2314  0511  2D0D               	goto	u1525
  2315  0512  3001               	movlw	1
  2316  0513                     u1535:	
  2317  0513  35C1               	lslf	___ftmul@f2,f
  2318  0514  0DC2               	rlf	___ftmul@f2+1,f
  2319  0515  0DC3               	rlf	___ftmul@f2+2,f
  2320  0516  0B89               	decfsz	9,f
  2321  0517  2D13               	goto	u1535
  2322  0518  3001               	movlw	1
  2323  0519  02CC               	subwf	___ftmul@cntr,f
  2324  051A  1D03               	btfss	3,2
  2325  051B  2D04               	goto	l1560
  2326  051C  3009               	movlw	9
  2327  051D  00C4               	movwf	??___ftmul
  2328  051E  0844               	movf	??___ftmul,w
  2329  051F  00CC               	movwf	___ftmul@cntr
  2330  0520                     l1572:	
  2331  0520  1C3E               	btfss	___ftmul@f1,0
  2332  0521  2D28               	goto	l1576
  2333  0522  0841               	movf	___ftmul@f2,w
  2334  0523  07C9               	addwf	___ftmul@f3_as_product,f
  2335  0524  0842               	movf	___ftmul@f2+1,w
  2336  0525  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  2337  0526  0843               	movf	___ftmul@f2+2,w
  2338  0527  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  2339  0528                     l1576:	
  2340  0528  3001               	movlw	1
  2341  0529                     u1565:	
  2342  0529  36C0               	lsrf	___ftmul@f1+2,f
  2343  052A  0CBF               	rrf	___ftmul@f1+1,f
  2344  052B  0CBE               	rrf	___ftmul@f1,f
  2345  052C  0B89               	decfsz	9,f
  2346  052D  2D29               	goto	u1565
  2347  052E  3001               	movlw	1
  2348  052F                     u1575:	
  2349  052F  36CB               	lsrf	___ftmul@f3_as_product+2,f
  2350  0530  0CCA               	rrf	___ftmul@f3_as_product+1,f
  2351  0531  0CC9               	rrf	___ftmul@f3_as_product,f
  2352  0532  0B89               	decfsz	9,f
  2353  0533  2D2F               	goto	u1575
  2354  0534  3001               	movlw	1
  2355  0535  02CC               	subwf	___ftmul@cntr,f
  2356  0536  1D03               	btfss	3,2
  2357  0537  2D20               	goto	l1572
  2358  0538  0849               	movf	___ftmul@f3_as_product,w
  2359  0539  00A0               	movwf	___ftpack@arg
  2360  053A  084A               	movf	___ftmul@f3_as_product+1,w
  2361  053B  00A1               	movwf	___ftpack@arg+1
  2362  053C  084B               	movf	___ftmul@f3_as_product+2,w
  2363  053D  00A2               	movwf	___ftpack@arg+2
  2364  053E  0848               	movf	___ftmul@exp,w
  2365  053F  00C4               	movwf	??___ftmul
  2366  0540  0844               	movf	??___ftmul,w
  2367  0541  00A3               	movwf	___ftpack@exp
  2368  0542  084D               	movf	___ftmul@sign,w
  2369  0543  00C5               	movwf	??___ftmul+1
  2370  0544  0845               	movf	??___ftmul+1,w
  2371  0545  00A4               	movwf	___ftpack@sign
  2372  0546  3186  2653         	fcall	___ftpack
  2373  0548  0820               	movf	?___ftpack,w
  2374  0549  00BE               	movwf	?___ftmul
  2375  054A  0821               	movf	?___ftpack+1,w
  2376  054B  00BF               	movwf	?___ftmul+1
  2377  054C  0822               	movf	?___ftpack+2,w
  2378  054D  00C0               	movwf	?___ftmul+2
  2379  054E  0008               	return
  2380  054F                     __end_of___ftmul:	
  2381                           
  2382                           	psect	text6
  2383  054F                     __ptext6:	
  2384 ;; *************** function ___ftdiv *****************
  2385 ;; Defined at:
  2386 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdiv.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  f2              3   14[BANK0 ] float 
  2389 ;;  f1              3   17[BANK0 ] float 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  f3              3   25[BANK0 ] float 
  2392 ;;  sign            1   29[BANK0 ] unsigned char 
  2393 ;;  exp             1   28[BANK0 ] unsigned char 
  2394 ;;  cntr            1   24[BANK0 ] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  3   14[BANK0 ] float 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 1F/0
  2401 ;;		On exit  : 1F/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2404 ;;      Params:         0       6       0       0
  2405 ;;      Locals:         0       6       0       0
  2406 ;;      Temps:          0       4       0       0
  2407 ;;      Totals:         0      16       0       0
  2408 ;;Total ram usage:       16 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    4
  2411 ;; This function calls:
  2412 ;;		___ftpack
  2413 ;; This function is called by:
  2414 ;;		_CalcWidth
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function ___ftdiv
  2420  054F                     ___ftdiv:	
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2424  054F  0831               	movf	___ftdiv@f1,w
  2425  0550  00B4               	movwf	??___ftdiv
  2426  0551  0832               	movf	___ftdiv@f1+1,w
  2427  0552  00B5               	movwf	??___ftdiv+1
  2428  0553  0833               	movf	___ftdiv@f1+2,w
  2429  0554  00B6               	movwf	??___ftdiv+2
  2430  0555  1003               	clrc
  2431  0556  0D35               	rlf	??___ftdiv+1,w
  2432  0557  0D36               	rlf	??___ftdiv+2,w
  2433  0558  00B7               	movwf	??___ftdiv+3
  2434  0559  0837               	movf	??___ftdiv+3,w
  2435  055A  00BC               	movwf	___ftdiv@exp
  2436  055B  083C               	movf	___ftdiv@exp,w
  2437  055C  1D03               	btfss	3,2
  2438  055D  2D65               	goto	l1494
  2439  055E  3000               	movlw	0
  2440  055F  00AE               	movwf	?___ftdiv
  2441  0560  3000               	movlw	0
  2442  0561  00AF               	movwf	?___ftdiv+1
  2443  0562  3000               	movlw	0
  2444  0563  00B0               	movwf	?___ftdiv+2
  2445  0564  0008               	return
  2446  0565                     l1494:	
  2447  0565  082E               	movf	___ftdiv@f2,w
  2448  0566  00B4               	movwf	??___ftdiv
  2449  0567  082F               	movf	___ftdiv@f2+1,w
  2450  0568  00B5               	movwf	??___ftdiv+1
  2451  0569  0830               	movf	___ftdiv@f2+2,w
  2452  056A  00B6               	movwf	??___ftdiv+2
  2453  056B  1003               	clrc
  2454  056C  0D35               	rlf	??___ftdiv+1,w
  2455  056D  0D36               	rlf	??___ftdiv+2,w
  2456  056E  00B7               	movwf	??___ftdiv+3
  2457  056F  0837               	movf	??___ftdiv+3,w
  2458  0570  00BD               	movwf	___ftdiv@sign
  2459  0571  083D               	movf	___ftdiv@sign,w
  2460  0572  1D03               	btfss	3,2
  2461  0573  2D7B               	goto	l1500
  2462  0574  3000               	movlw	0
  2463  0575  00AE               	movwf	?___ftdiv
  2464  0576  3000               	movlw	0
  2465  0577  00AF               	movwf	?___ftdiv+1
  2466  0578  3000               	movlw	0
  2467  0579  00B0               	movwf	?___ftdiv+2
  2468  057A  0008               	return
  2469  057B                     l1500:	
  2470  057B  3000               	movlw	0
  2471  057C  00B9               	movwf	___ftdiv@f3
  2472  057D  3000               	movlw	0
  2473  057E  00BA               	movwf	___ftdiv@f3+1
  2474  057F  3000               	movlw	0
  2475  0580  00BB               	movwf	___ftdiv@f3+2
  2476  0581  3089               	movlw	137
  2477  0582  073D               	addwf	___ftdiv@sign,w
  2478  0583  00B4               	movwf	??___ftdiv
  2479  0584  0834               	movf	??___ftdiv,w
  2480  0585  02BC               	subwf	___ftdiv@exp,f
  2481  0586  0833               	movf	___ftdiv@f1+2,w
  2482  0587  00B4               	movwf	??___ftdiv
  2483  0588  0834               	movf	??___ftdiv,w
  2484  0589  00BD               	movwf	___ftdiv@sign
  2485  058A  0830               	movf	___ftdiv@f2+2,w
  2486  058B  00B4               	movwf	??___ftdiv
  2487  058C  0834               	movf	??___ftdiv,w
  2488  058D  06BD               	xorwf	___ftdiv@sign,f
  2489  058E  3080               	movlw	128
  2490  058F  00B4               	movwf	??___ftdiv
  2491  0590  0834               	movf	??___ftdiv,w
  2492  0591  05BD               	andwf	___ftdiv@sign,f
  2493  0592  17B2               	bsf	___ftdiv@f1+1,7
  2494  0593  30FF               	movlw	255
  2495  0594  05B1               	andwf	___ftdiv@f1,f
  2496  0595  30FF               	movlw	255
  2497  0596  05B2               	andwf	___ftdiv@f1+1,f
  2498  0597  3000               	movlw	0
  2499  0598  05B3               	andwf	___ftdiv@f1+2,f
  2500  0599  17AF               	bsf	___ftdiv@f2+1,7
  2501  059A  30FF               	movlw	255
  2502  059B  05AE               	andwf	___ftdiv@f2,f
  2503  059C  30FF               	movlw	255
  2504  059D  05AF               	andwf	___ftdiv@f2+1,f
  2505  059E  3000               	movlw	0
  2506  059F  05B0               	andwf	___ftdiv@f2+2,f
  2507  05A0  3018               	movlw	24
  2508  05A1  00B4               	movwf	??___ftdiv
  2509  05A2  0834               	movf	??___ftdiv,w
  2510  05A3  00B8               	movwf	___ftdiv@cntr
  2511  05A4                     l1516:	
  2512  05A4  3001               	movlw	1
  2513  05A5                     u1455:	
  2514  05A5  35B9               	lslf	___ftdiv@f3,f
  2515  05A6  0DBA               	rlf	___ftdiv@f3+1,f
  2516  05A7  0DBB               	rlf	___ftdiv@f3+2,f
  2517  05A8  0B89               	decfsz	9,f
  2518  05A9  2DA5               	goto	u1455
  2519  05AA  0830               	movf	___ftdiv@f2+2,w
  2520  05AB  0233               	subwf	___ftdiv@f1+2,w
  2521  05AC  1D03               	skipz
  2522  05AD  2DB4               	goto	u1465
  2523  05AE  082F               	movf	___ftdiv@f2+1,w
  2524  05AF  0232               	subwf	___ftdiv@f1+1,w
  2525  05B0  1D03               	skipz
  2526  05B1  2DB4               	goto	u1465
  2527  05B2  082E               	movf	___ftdiv@f2,w
  2528  05B3  0231               	subwf	___ftdiv@f1,w
  2529  05B4                     u1465:	
  2530  05B4  1C03               	skipc
  2531  05B5  2DBD               	goto	l1522
  2532  05B6  082E               	movf	___ftdiv@f2,w
  2533  05B7  02B1               	subwf	___ftdiv@f1,f
  2534  05B8  082F               	movf	___ftdiv@f2+1,w
  2535  05B9  3BB2               	subwfb	___ftdiv@f1+1,f
  2536  05BA  0830               	movf	___ftdiv@f2+2,w
  2537  05BB  3BB3               	subwfb	___ftdiv@f1+2,f
  2538  05BC  1439               	bsf	___ftdiv@f3,0
  2539  05BD                     l1522:	
  2540  05BD  3001               	movlw	1
  2541  05BE                     u1475:	
  2542  05BE  35B1               	lslf	___ftdiv@f1,f
  2543  05BF  0DB2               	rlf	___ftdiv@f1+1,f
  2544  05C0  0DB3               	rlf	___ftdiv@f1+2,f
  2545  05C1  0B89               	decfsz	9,f
  2546  05C2  2DBE               	goto	u1475
  2547  05C3  3001               	movlw	1
  2548  05C4  02B8               	subwf	___ftdiv@cntr,f
  2549  05C5  1D03               	btfss	3,2
  2550  05C6  2DA4               	goto	l1516
  2551  05C7  0839               	movf	___ftdiv@f3,w
  2552  05C8  00A0               	movwf	___ftpack@arg
  2553  05C9  083A               	movf	___ftdiv@f3+1,w
  2554  05CA  00A1               	movwf	___ftpack@arg+1
  2555  05CB  083B               	movf	___ftdiv@f3+2,w
  2556  05CC  00A2               	movwf	___ftpack@arg+2
  2557  05CD  083C               	movf	___ftdiv@exp,w
  2558  05CE  00B4               	movwf	??___ftdiv
  2559  05CF  0834               	movf	??___ftdiv,w
  2560  05D0  00A3               	movwf	___ftpack@exp
  2561  05D1  083D               	movf	___ftdiv@sign,w
  2562  05D2  00B5               	movwf	??___ftdiv+1
  2563  05D3  0835               	movf	??___ftdiv+1,w
  2564  05D4  00A4               	movwf	___ftpack@sign
  2565  05D5  3186  2653         	fcall	___ftpack
  2566  05D7  0820               	movf	?___ftpack,w
  2567  05D8  00AE               	movwf	?___ftdiv
  2568  05D9  0821               	movf	?___ftpack+1,w
  2569  05DA  00AF               	movwf	?___ftdiv+1
  2570  05DB  0822               	movf	?___ftpack+2,w
  2571  05DC  00B0               	movwf	?___ftdiv+2
  2572  05DD  0008               	return
  2573  05DE                     __end_of___ftdiv:	
  2574                           
  2575                           	psect	text7
  2576  0237                     __ptext7:	
  2577 ;; *************** function ___ftadd *****************
  2578 ;; Defined at:
  2579 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftadd.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  f1              3   46[BANK0 ] float 
  2582 ;;  f2              3   49[BANK0 ] float 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  exp1            1   58[BANK0 ] unsigned char 
  2585 ;;  exp2            1   57[BANK0 ] unsigned char 
  2586 ;;  sign            1   56[BANK0 ] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  3   46[BANK0 ] float 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0, pclath, cstack
  2591 ;; Tracked objects:
  2592 ;;		On entry : 1F/0
  2593 ;;		On exit  : 1F/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2596 ;;      Params:         0       6       0       0
  2597 ;;      Locals:         0       3       0       0
  2598 ;;      Temps:          0       4       0       0
  2599 ;;      Totals:         0      13       0       0
  2600 ;;Total ram usage:       13 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    4
  2603 ;; This function calls:
  2604 ;;		___ftpack
  2605 ;; This function is called by:
  2606 ;;		_CalcWidth
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function ___ftadd
  2612  0237                     ___ftadd:	
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2616  0237  084E               	movf	___ftadd@f1,w
  2617  0238  00D4               	movwf	??___ftadd
  2618  0239  084F               	movf	___ftadd@f1+1,w
  2619  023A  00D5               	movwf	??___ftadd+1
  2620  023B  0850               	movf	___ftadd@f1+2,w
  2621  023C  00D6               	movwf	??___ftadd+2
  2622  023D  1003               	clrc
  2623  023E  0D55               	rlf	??___ftadd+1,w
  2624  023F  0D56               	rlf	??___ftadd+2,w
  2625  0240  00D7               	movwf	??___ftadd+3
  2626  0241  0857               	movf	??___ftadd+3,w
  2627  0242  00DA               	movwf	___ftadd@exp1
  2628  0243  0851               	movf	___ftadd@f2,w
  2629  0244  00D4               	movwf	??___ftadd
  2630  0245  0852               	movf	___ftadd@f2+1,w
  2631  0246  00D5               	movwf	??___ftadd+1
  2632  0247  0853               	movf	___ftadd@f2+2,w
  2633  0248  00D6               	movwf	??___ftadd+2
  2634  0249  1003               	clrc
  2635  024A  0D55               	rlf	??___ftadd+1,w
  2636  024B  0D56               	rlf	??___ftadd+2,w
  2637  024C  00D7               	movwf	??___ftadd+3
  2638  024D  0857               	movf	??___ftadd+3,w
  2639  024E  00D9               	movwf	___ftadd@exp2
  2640  024F  085A               	movf	___ftadd@exp1,w
  2641  0250  1903               	btfsc	3,2
  2642  0251  2A5E               	goto	l1424
  2643  0252  0859               	movf	___ftadd@exp2,w
  2644  0253  025A               	subwf	___ftadd@exp1,w
  2645  0254  1803               	skipnc
  2646  0255  2A65               	goto	l1428
  2647  0256  0859               	movf	___ftadd@exp2,w
  2648  0257  00D4               	movwf	??___ftadd
  2649  0258  085A               	movf	___ftadd@exp1,w
  2650  0259  02D4               	subwf	??___ftadd,f
  2651  025A  3019               	movlw	25
  2652  025B  0254               	subwf	??___ftadd,w
  2653  025C  1C03               	skipc
  2654  025D  2A65               	goto	l1428
  2655  025E                     l1424:	
  2656  025E  0851               	movf	___ftadd@f2,w
  2657  025F  00CE               	movwf	?___ftadd
  2658  0260  0852               	movf	___ftadd@f2+1,w
  2659  0261  00CF               	movwf	?___ftadd+1
  2660  0262  0853               	movf	___ftadd@f2+2,w
  2661  0263  00D0               	movwf	?___ftadd+2
  2662  0264  0008               	return
  2663  0265                     l1428:	
  2664  0265  0859               	movf	___ftadd@exp2,w
  2665  0266  1903               	btfsc	3,2
  2666  0267  0008               	return
  2667  0268  085A               	movf	___ftadd@exp1,w
  2668  0269  0259               	subwf	___ftadd@exp2,w
  2669  026A  1803               	skipnc
  2670  026B  2A74               	goto	l1434
  2671  026C  085A               	movf	___ftadd@exp1,w
  2672  026D  00D4               	movwf	??___ftadd
  2673  026E  0859               	movf	___ftadd@exp2,w
  2674  026F  02D4               	subwf	??___ftadd,f
  2675  0270  3019               	movlw	25
  2676  0271  0254               	subwf	??___ftadd,w
  2677  0272  1803               	btfsc	3,0
  2678  0273  0008               	return
  2679  0274                     l1434:	
  2680  0274  3006               	movlw	6
  2681  0275  00D4               	movwf	??___ftadd
  2682  0276  0854               	movf	??___ftadd,w
  2683  0277  00D8               	movwf	___ftadd@sign
  2684  0278  1BD0               	btfsc	___ftadd@f1+2,7
  2685  0279  17D8               	bsf	___ftadd@sign,7
  2686  027A  1BD3               	btfsc	___ftadd@f2+2,7
  2687  027B  1758               	bsf	___ftadd@sign,6
  2688  027C  17CF               	bsf	___ftadd@f1+1,7
  2689  027D  30FF               	movlw	255
  2690  027E  05CE               	andwf	___ftadd@f1,f
  2691  027F  30FF               	movlw	255
  2692  0280  05CF               	andwf	___ftadd@f1+1,f
  2693  0281  3000               	movlw	0
  2694  0282  05D0               	andwf	___ftadd@f1+2,f
  2695  0283  17D2               	bsf	___ftadd@f2+1,7
  2696  0284  30FF               	movlw	255
  2697  0285  05D1               	andwf	___ftadd@f2,f
  2698  0286  30FF               	movlw	255
  2699  0287  05D2               	andwf	___ftadd@f2+1,f
  2700  0288  3000               	movlw	0
  2701  0289  05D3               	andwf	___ftadd@f2+2,f
  2702  028A  0859               	movf	___ftadd@exp2,w
  2703  028B  025A               	subwf	___ftadd@exp1,w
  2704  028C  1803               	skipnc
  2705  028D  2AB0               	goto	l1456
  2706  028E                     l1446:	
  2707  028E  3001               	movlw	1
  2708  028F                     u1295:	
  2709  028F  35D1               	lslf	___ftadd@f2,f
  2710  0290  0DD2               	rlf	___ftadd@f2+1,f
  2711  0291  0DD3               	rlf	___ftadd@f2+2,f
  2712  0292  0B89               	decfsz	9,f
  2713  0293  2A8F               	goto	u1295
  2714  0294  3001               	movlw	1
  2715  0295  02D9               	subwf	___ftadd@exp2,f
  2716  0296  0859               	movf	___ftadd@exp2,w
  2717  0297  065A               	xorwf	___ftadd@exp1,w
  2718  0298  1903               	skipnz
  2719  0299  2AAB               	goto	l1454
  2720  029A  3001               	movlw	1
  2721  029B  02D8               	subwf	___ftadd@sign,f
  2722  029C  0858               	movf	___ftadd@sign,w
  2723  029D  3907               	andlw	7
  2724  029E  1903               	btfsc	3,2
  2725  029F  2AAB               	goto	l1454
  2726  02A0  2A8E               	goto	l1446
  2727  02A1                     l1452:	
  2728  02A1  3001               	movlw	1
  2729  02A2                     u1325:	
  2730  02A2  36D0               	lsrf	___ftadd@f1+2,f
  2731  02A3  0CCF               	rrf	___ftadd@f1+1,f
  2732  02A4  0CCE               	rrf	___ftadd@f1,f
  2733  02A5  0B89               	decfsz	9,f
  2734  02A6  2AA2               	goto	u1325
  2735  02A7  3001               	movlw	1
  2736  02A8  00D4               	movwf	??___ftadd
  2737  02A9  0854               	movf	??___ftadd,w
  2738  02AA  07DA               	addwf	___ftadd@exp1,f
  2739  02AB                     l1454:	
  2740  02AB  085A               	movf	___ftadd@exp1,w
  2741  02AC  0659               	xorwf	___ftadd@exp2,w
  2742  02AD  1903               	btfsc	3,2
  2743  02AE  2AD5               	goto	l624
  2744  02AF  2AA1               	goto	l1452
  2745  02B0                     l1456:	
  2746  02B0  085A               	movf	___ftadd@exp1,w
  2747  02B1  0259               	subwf	___ftadd@exp2,w
  2748  02B2  1803               	skipnc
  2749  02B3  2AD5               	goto	l624
  2750  02B4                     l1458:	
  2751  02B4  3001               	movlw	1
  2752  02B5                     u1355:	
  2753  02B5  35CE               	lslf	___ftadd@f1,f
  2754  02B6  0DCF               	rlf	___ftadd@f1+1,f
  2755  02B7  0DD0               	rlf	___ftadd@f1+2,f
  2756  02B8  0B89               	decfsz	9,f
  2757  02B9  2AB5               	goto	u1355
  2758  02BA  3001               	movlw	1
  2759  02BB  02DA               	subwf	___ftadd@exp1,f
  2760  02BC  0859               	movf	___ftadd@exp2,w
  2761  02BD  065A               	xorwf	___ftadd@exp1,w
  2762  02BE  1903               	skipnz
  2763  02BF  2AD1               	goto	l1466
  2764  02C0  3001               	movlw	1
  2765  02C1  02D8               	subwf	___ftadd@sign,f
  2766  02C2  0858               	movf	___ftadd@sign,w
  2767  02C3  3907               	andlw	7
  2768  02C4  1903               	btfsc	3,2
  2769  02C5  2AD1               	goto	l1466
  2770  02C6  2AB4               	goto	l1458
  2771  02C7                     l1464:	
  2772  02C7  3001               	movlw	1
  2773  02C8                     u1385:	
  2774  02C8  36D3               	lsrf	___ftadd@f2+2,f
  2775  02C9  0CD2               	rrf	___ftadd@f2+1,f
  2776  02CA  0CD1               	rrf	___ftadd@f2,f
  2777  02CB  0B89               	decfsz	9,f
  2778  02CC  2AC8               	goto	u1385
  2779  02CD  3001               	movlw	1
  2780  02CE  00D4               	movwf	??___ftadd
  2781  02CF  0854               	movf	??___ftadd,w
  2782  02D0  07D9               	addwf	___ftadd@exp2,f
  2783  02D1                     l1466:	
  2784  02D1  085A               	movf	___ftadd@exp1,w
  2785  02D2  0659               	xorwf	___ftadd@exp2,w
  2786  02D3  1D03               	skipz
  2787  02D4  2AC7               	goto	l1464
  2788  02D5                     l624:	
  2789  02D5  1FD8               	btfss	___ftadd@sign,7
  2790  02D6  2AE7               	goto	l1470
  2791  02D7  30FF               	movlw	255
  2792  02D8  06CE               	xorwf	___ftadd@f1,f
  2793  02D9  30FF               	movlw	255
  2794  02DA  06CF               	xorwf	___ftadd@f1+1,f
  2795  02DB  30FF               	movlw	255
  2796  02DC  06D0               	xorwf	___ftadd@f1+2,f
  2797  02DD  3001               	movlw	1
  2798  02DE  07CE               	addwf	___ftadd@f1,f
  2799  02DF  3000               	movlw	0
  2800  02E0  1803               	skipnc
  2801  02E1  3001               	movlw	1
  2802  02E2  07CF               	addwf	___ftadd@f1+1,f
  2803  02E3  3000               	movlw	0
  2804  02E4  1803               	skipnc
  2805  02E5  3001               	movlw	1
  2806  02E6  07D0               	addwf	___ftadd@f1+2,f
  2807  02E7                     l1470:	
  2808  02E7  1F58               	btfss	___ftadd@sign,6
  2809  02E8  2AF9               	goto	l1474
  2810  02E9  30FF               	movlw	255
  2811  02EA  06D1               	xorwf	___ftadd@f2,f
  2812  02EB  30FF               	movlw	255
  2813  02EC  06D2               	xorwf	___ftadd@f2+1,f
  2814  02ED  30FF               	movlw	255
  2815  02EE  06D3               	xorwf	___ftadd@f2+2,f
  2816  02EF  3001               	movlw	1
  2817  02F0  07D1               	addwf	___ftadd@f2,f
  2818  02F1  3000               	movlw	0
  2819  02F2  1803               	skipnc
  2820  02F3  3001               	movlw	1
  2821  02F4  07D2               	addwf	___ftadd@f2+1,f
  2822  02F5  3000               	movlw	0
  2823  02F6  1803               	skipnc
  2824  02F7  3001               	movlw	1
  2825  02F8  07D3               	addwf	___ftadd@f2+2,f
  2826  02F9                     l1474:	
  2827  02F9  01D8               	clrf	___ftadd@sign
  2828  02FA  084E               	movf	___ftadd@f1,w
  2829  02FB  07D1               	addwf	___ftadd@f2,f
  2830  02FC  084F               	movf	___ftadd@f1+1,w
  2831  02FD  3DD2               	addwfc	___ftadd@f2+1,f
  2832  02FE  0850               	movf	___ftadd@f1+2,w
  2833  02FF  3DD3               	addwfc	___ftadd@f2+2,f
  2834  0300  1FD3               	btfss	___ftadd@f2+2,7
  2835  0301  2B14               	goto	l1484
  2836  0302  30FF               	movlw	255
  2837  0303  06D1               	xorwf	___ftadd@f2,f
  2838  0304  30FF               	movlw	255
  2839  0305  06D2               	xorwf	___ftadd@f2+1,f
  2840  0306  30FF               	movlw	255
  2841  0307  06D3               	xorwf	___ftadd@f2+2,f
  2842  0308  3001               	movlw	1
  2843  0309  07D1               	addwf	___ftadd@f2,f
  2844  030A  3000               	movlw	0
  2845  030B  1803               	skipnc
  2846  030C  3001               	movlw	1
  2847  030D  07D2               	addwf	___ftadd@f2+1,f
  2848  030E  3000               	movlw	0
  2849  030F  1803               	skipnc
  2850  0310  3001               	movlw	1
  2851  0311  07D3               	addwf	___ftadd@f2+2,f
  2852  0312  01D8               	clrf	___ftadd@sign
  2853  0313  0AD8               	incf	___ftadd@sign,f
  2854  0314                     l1484:	
  2855  0314  0851               	movf	___ftadd@f2,w
  2856  0315  00A0               	movwf	___ftpack@arg
  2857  0316  0852               	movf	___ftadd@f2+1,w
  2858  0317  00A1               	movwf	___ftpack@arg+1
  2859  0318  0853               	movf	___ftadd@f2+2,w
  2860  0319  00A2               	movwf	___ftpack@arg+2
  2861  031A  085A               	movf	___ftadd@exp1,w
  2862  031B  00D4               	movwf	??___ftadd
  2863  031C  0854               	movf	??___ftadd,w
  2864  031D  00A3               	movwf	___ftpack@exp
  2865  031E  0858               	movf	___ftadd@sign,w
  2866  031F  00D5               	movwf	??___ftadd+1
  2867  0320  0855               	movf	??___ftadd+1,w
  2868  0321  00A4               	movwf	___ftpack@sign
  2869  0322  3186  2653         	fcall	___ftpack
  2870  0324  0820               	movf	?___ftpack,w
  2871  0325  00CE               	movwf	?___ftadd
  2872  0326  0821               	movf	?___ftpack+1,w
  2873  0327  00CF               	movwf	?___ftadd+1
  2874  0328  0822               	movf	?___ftpack+2,w
  2875  0329  00D0               	movwf	?___ftadd+2
  2876  032A  0008               	return
  2877  032B                     __end_of___ftadd:	
  2878                           
  2879                           	psect	text8
  2880  0FB9                     __ptext8:	
  2881 ;; *************** function ___awtoft *****************
  2882 ;; Defined at:
  2883 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awtoft.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  c               2    8[BANK0 ] int 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  sign            1   13[BANK0 ] unsigned char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  3    8[BANK0 ] float 
  2890 ;; Registers used:
  2891 ;;		wreg, status,2, status,0, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 1F/0
  2894 ;;		On exit  : 1F/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2897 ;;      Params:         0       3       0       0
  2898 ;;      Locals:         0       1       0       0
  2899 ;;      Temps:          0       2       0       0
  2900 ;;      Totals:         0       6       0       0
  2901 ;;Total ram usage:        6 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    4
  2904 ;; This function calls:
  2905 ;;		___ftpack
  2906 ;; This function is called by:
  2907 ;;		_CalcWidth
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function ___awtoft
  2913  0FB9                     ___awtoft:	
  2914                           
  2915                           ;incstack = 0
  2916                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2917  0FB9  01AD               	clrf	___awtoft@sign
  2918  0FBA  1FA9               	btfss	___awtoft@c+1,7
  2919  0FBB  2FC3               	goto	l1414
  2920  0FBC  09A8               	comf	___awtoft@c,f
  2921  0FBD  09A9               	comf	___awtoft@c+1,f
  2922  0FBE  0AA8               	incf	___awtoft@c,f
  2923  0FBF  1903               	skipnz
  2924  0FC0  0AA9               	incf	___awtoft@c+1,f
  2925  0FC1  01AD               	clrf	___awtoft@sign
  2926  0FC2  0AAD               	incf	___awtoft@sign,f
  2927  0FC3                     l1414:	
  2928  0FC3  0828               	movf	___awtoft@c,w
  2929  0FC4  00A0               	movwf	___ftpack@arg
  2930  0FC5  0829               	movf	___awtoft@c+1,w
  2931  0FC6  00A1               	movwf	___ftpack@arg+1
  2932  0FC7  01A2               	clrf	___ftpack@arg+2
  2933  0FC8  308E               	movlw	142
  2934  0FC9  00AB               	movwf	??___awtoft
  2935  0FCA  082B               	movf	??___awtoft,w
  2936  0FCB  00A3               	movwf	___ftpack@exp
  2937  0FCC  082D               	movf	___awtoft@sign,w
  2938  0FCD  00AC               	movwf	??___awtoft+1
  2939  0FCE  082C               	movf	??___awtoft+1,w
  2940  0FCF  00A4               	movwf	___ftpack@sign
  2941  0FD0  3186  2653         	fcall	___ftpack
  2942  0FD2  0820               	movf	?___ftpack,w
  2943  0FD3  00A8               	movwf	?___awtoft
  2944  0FD4  0821               	movf	?___ftpack+1,w
  2945  0FD5  00A9               	movwf	?___awtoft+1
  2946  0FD6  0822               	movf	?___ftpack+2,w
  2947  0FD7  00AA               	movwf	?___awtoft+2
  2948  0FD8  0008               	return
  2949  0FD9                     __end_of___awtoft:	
  2950                           
  2951                           	psect	text9
  2952  0653                     __ptext9:	
  2953 ;; *************** function ___ftpack *****************
  2954 ;; Defined at:
  2955 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\float.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  arg             3    0[BANK0 ] unsigned um
  2958 ;;  exp             1    3[BANK0 ] unsigned char 
  2959 ;;  sign            1    4[BANK0 ] unsigned char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  3    0[BANK0 ] float 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2, status,0
  2966 ;; Tracked objects:
  2967 ;;		On entry : 1F/0
  2968 ;;		On exit  : 1F/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2971 ;;      Params:         0       5       0       0
  2972 ;;      Locals:         0       0       0       0
  2973 ;;      Temps:          0       3       0       0
  2974 ;;      Totals:         0       8       0       0
  2975 ;;Total ram usage:        8 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    3
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		___awtoft
  2982 ;;		___ftadd
  2983 ;;		___ftdiv
  2984 ;;		___ftmul
  2985 ;;		___lbtoft
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function ___ftpack
  2991  0653                     ___ftpack:	
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2995  0653  0823               	movf	___ftpack@exp,w
  2996  0654  1903               	btfsc	3,2
  2997  0655  2E5B               	goto	l1378
  2998  0656  0822               	movf	___ftpack@arg+2,w
  2999  0657  0421               	iorwf	___ftpack@arg+1,w
  3000  0658  0420               	iorwf	___ftpack@arg,w
  3001  0659  1D03               	skipz
  3002  065A  2E6C               	goto	l1384
  3003  065B                     l1378:	
  3004  065B  3000               	movlw	0
  3005  065C  00A0               	movwf	?___ftpack
  3006  065D  3000               	movlw	0
  3007  065E  00A1               	movwf	?___ftpack+1
  3008  065F  3000               	movlw	0
  3009  0660  00A2               	movwf	?___ftpack+2
  3010  0661  0008               	return
  3011  0662                     l1382:	
  3012  0662  3001               	movlw	1
  3013  0663  00A5               	movwf	??___ftpack
  3014  0664  0825               	movf	??___ftpack,w
  3015  0665  07A3               	addwf	___ftpack@exp,f
  3016  0666  3001               	movlw	1
  3017  0667                     u1095:	
  3018  0667  36A2               	lsrf	___ftpack@arg+2,f
  3019  0668  0CA1               	rrf	___ftpack@arg+1,f
  3020  0669  0CA0               	rrf	___ftpack@arg,f
  3021  066A  0B89               	decfsz	9,f
  3022  066B  2E67               	goto	u1095
  3023  066C                     l1384:	
  3024  066C  30FE               	movlw	254
  3025  066D  0522               	andwf	___ftpack@arg+2,w
  3026  066E  1903               	btfsc	3,2
  3027  066F  2E85               	goto	l593
  3028  0670  2E62               	goto	l1382
  3029  0671                     l1386:	
  3030  0671  3001               	movlw	1
  3031  0672  00A5               	movwf	??___ftpack
  3032  0673  0825               	movf	??___ftpack,w
  3033  0674  07A3               	addwf	___ftpack@exp,f
  3034  0675  3001               	movlw	1
  3035  0676  07A0               	addwf	___ftpack@arg,f
  3036  0677  3000               	movlw	0
  3037  0678  1803               	skipnc
  3038  0679  3001               	movlw	1
  3039  067A  07A1               	addwf	___ftpack@arg+1,f
  3040  067B  3000               	movlw	0
  3041  067C  1803               	skipnc
  3042  067D  3001               	movlw	1
  3043  067E  07A2               	addwf	___ftpack@arg+2,f
  3044  067F  3001               	movlw	1
  3045  0680                     u1115:	
  3046  0680  36A2               	lsrf	___ftpack@arg+2,f
  3047  0681  0CA1               	rrf	___ftpack@arg+1,f
  3048  0682  0CA0               	rrf	___ftpack@arg,f
  3049  0683  0B89               	decfsz	9,f
  3050  0684  2E80               	goto	u1115
  3051  0685                     l593:	
  3052  0685  30FF               	movlw	255
  3053  0686  0522               	andwf	___ftpack@arg+2,w
  3054  0687  1903               	btfsc	3,2
  3055  0688  2E96               	goto	l1394
  3056  0689  2E71               	goto	l1386
  3057  068A                     l1396:	
  3058  068A  3002               	movlw	2
  3059  068B  0223               	subwf	___ftpack@exp,w
  3060  068C  1C03               	btfss	3,0
  3061  068D  2E98               	goto	l600
  3062  068E  3001               	movlw	1
  3063  068F  02A3               	subwf	___ftpack@exp,f
  3064  0690  3001               	movlw	1
  3065  0691                     u1135:	
  3066  0691  35A0               	lslf	___ftpack@arg,f
  3067  0692  0DA1               	rlf	___ftpack@arg+1,f
  3068  0693  0DA2               	rlf	___ftpack@arg+2,f
  3069  0694  0B89               	decfsz	9,f
  3070  0695  2E91               	goto	u1135
  3071  0696                     l1394:	
  3072  0696  1FA1               	btfss	___ftpack@arg+1,7
  3073  0697  2E8A               	goto	l1396
  3074  0698                     l600:	
  3075  0698  1823               	btfsc	___ftpack@exp,0
  3076  0699  2EA0               	goto	l601
  3077  069A  30FF               	movlw	255
  3078  069B  05A0               	andwf	___ftpack@arg,f
  3079  069C  307F               	movlw	127
  3080  069D  05A1               	andwf	___ftpack@arg+1,f
  3081  069E  30FF               	movlw	255
  3082  069F  05A2               	andwf	___ftpack@arg+2,f
  3083  06A0                     l601:	
  3084  06A0  1003               	clrc
  3085  06A1  0CA3               	rrf	___ftpack@exp,f
  3086  06A2  0823               	movf	___ftpack@exp,w
  3087  06A3  00A5               	movwf	??___ftpack
  3088  06A4  01A6               	clrf	??___ftpack+1
  3089  06A5  01A7               	clrf	??___ftpack+2
  3090  06A6  3010               	movlw	16
  3091  06A7                     u1175:	
  3092  06A7  35A5               	lslf	??___ftpack,f
  3093  06A8  0DA6               	rlf	??___ftpack+1,f
  3094  06A9  0DA7               	rlf	??___ftpack+2,f
  3095  06AA  0B89               	decfsz	9,f
  3096  06AB  2EA7               	goto	u1175
  3097  06AC  0825               	movf	??___ftpack,w
  3098  06AD  04A0               	iorwf	___ftpack@arg,f
  3099  06AE  0826               	movf	??___ftpack+1,w
  3100  06AF  04A1               	iorwf	___ftpack@arg+1,f
  3101  06B0  0827               	movf	??___ftpack+2,w
  3102  06B1  04A2               	iorwf	___ftpack@arg+2,f
  3103  06B2  0824               	movf	___ftpack@sign,w
  3104  06B3  1903               	btfsc	3,2
  3105  06B4  0008               	return
  3106  06B5  17A2               	bsf	___ftpack@arg+2,7
  3107  06B6  0008               	return
  3108  06B7                     __end_of___ftpack:	
  3109                           
  3110                           	psect	text10
  3111  032B                     __ptext10:	
  3112 ;; *************** function _ReceiveTargetAngle *****************
  3113 ;; Defined at:
  3114 ;;		line 55 in file "main.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  Servo           1    wreg     PTR struct .
  3117 ;;		 -> main@Servo(20), 
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;  Servo           1   27[BANK0 ] PTR struct .
  3120 ;;		 -> main@Servo(20), 
  3121 ;;  angle_buf       8   15[BANK0 ] unsigned int [4]
  3122 ;;  rx              4   23[BANK0 ] unsigned char [4]
  3123 ;;  i               2   28[BANK0 ] int 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 1F/1
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3133 ;;      Params:         0       0       0       0
  3134 ;;      Locals:         0      15       0       0
  3135 ;;      Temps:          0      11       0       0
  3136 ;;      Totals:         0      26       0       0
  3137 ;;Total ram usage:       26 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    4
  3140 ;; This function calls:
  3141 ;;		___bmul
  3142 ;; This function is called by:
  3143 ;;		_main
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           
  3148                           ;psect for function _ReceiveTargetAngle
  3149  032B                     _ReceiveTargetAngle:	
  3150                           
  3151                           ;incstack = 0
  3152                           ; Regs used in _ReceiveTargetAngle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3153                           ;ReceiveTargetAngle@Servo stored from wreg
  3154  032B  0020               	movlb	0	; select bank0
  3155  032C  00BB               	movwf	ReceiveTargetAngle@Servo
  3156                           
  3157                           ;main.c: 57: static uint16_t pre_angle[4];;main.c: 58: bool rx[4] = {0, 0, 0, 0};
  3158  032D  3000               	movlw	0
  3159  032E  00BA               	movwf	ReceiveTargetAngle@rx+3
  3160  032F  3000               	movlw	0
  3161  0330  00B9               	movwf	ReceiveTargetAngle@rx+2
  3162  0331  3000               	movlw	0
  3163  0332  00B8               	movwf	ReceiveTargetAngle@rx+1
  3164  0333  3000               	movlw	0
  3165  0334  00B7               	movwf	ReceiveTargetAngle@rx
  3166  0335                     l1736:	
  3167                           ;main.c: 59: uint16_t angle_buf[4];;main.c: 61: while (!(rx[0] & rx[1] & rx[2] & rx[3]))
  3168                           
  3169  0335  0020               	movlb	0	; select bank0
  3170  0336  0838               	movf	ReceiveTargetAngle@rx+1,w
  3171  0337  0539               	andwf	ReceiveTargetAngle@rx+2,w
  3172  0338  053A               	andwf	ReceiveTargetAngle@rx+3,w
  3173  0339  0537               	andwf	ReceiveTargetAngle@rx,w
  3174  033A  1D03               	btfss	3,2
  3175  033B  2BA6               	goto	l1738
  3176                           
  3177                           ;main.c: 62: {;main.c: 63: if (((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits
      +                          .RC0)) > 0)
  3178  033C  080E               	movf	14,w	;volatile
  3179  033D  3901               	andlw	1
  3180  033E  00A4               	movwf	??_ReceiveTargetAngle
  3181  033F  01A5               	clrf	??_ReceiveTargetAngle+1
  3182  0340  0C0E               	rrf	14,w	;volatile
  3183  0341  3901               	andlw	1
  3184  0342  00A6               	movwf	??_ReceiveTargetAngle+2
  3185  0343  01A7               	clrf	??_ReceiveTargetAngle+3
  3186  0344  35A6               	lslf	??_ReceiveTargetAngle+2,f
  3187  0345  0DA7               	rlf	??_ReceiveTargetAngle+3,f
  3188  0346  0C0E               	rrf	14,w	;volatile
  3189  0347  0C89               	rrf	9,f
  3190  0348  3901               	andlw	1
  3191  0349  00A8               	movwf	??_ReceiveTargetAngle+4
  3192  034A  01A9               	clrf	??_ReceiveTargetAngle+5
  3193  034B  35A8               	lslf	??_ReceiveTargetAngle+4,f
  3194  034C  0DA9               	rlf	??_ReceiveTargetAngle+5,f
  3195  034D  35A8               	lslf	??_ReceiveTargetAngle+4,f
  3196  034E  0DA9               	rlf	??_ReceiveTargetAngle+5,f
  3197  034F  0826               	movf	??_ReceiveTargetAngle+2,w
  3198  0350  0428               	iorwf	??_ReceiveTargetAngle+4,w
  3199  0351  00AA               	movwf	??_ReceiveTargetAngle+6
  3200  0352  0827               	movf	??_ReceiveTargetAngle+3,w
  3201  0353  0429               	iorwf	??_ReceiveTargetAngle+5,w
  3202  0354  00AB               	movwf	??_ReceiveTargetAngle+7
  3203  0355  0824               	movf	??_ReceiveTargetAngle,w
  3204  0356  042A               	iorwf	??_ReceiveTargetAngle+6,w
  3205  0357  00AC               	movwf	??_ReceiveTargetAngle+8
  3206  0358  0825               	movf	??_ReceiveTargetAngle+1,w
  3207  0359  042B               	iorwf	??_ReceiveTargetAngle+7,w
  3208  035A  00AD               	movwf	??_ReceiveTargetAngle+9
  3209  035B  082D               	movf	??_ReceiveTargetAngle+9,w
  3210  035C  3A80               	xorlw	128
  3211  035D  00AE               	movwf	??_ReceiveTargetAngle+10
  3212  035E  3080               	movlw	128
  3213  035F  022E               	subwf	??_ReceiveTargetAngle+10,w
  3214  0360  1D03               	skipz
  3215  0361  2B64               	goto	u1825
  3216  0362  3001               	movlw	1
  3217  0363  022C               	subwf	??_ReceiveTargetAngle+8,w
  3218  0364                     u1825:	
  3219  0364  1C03               	skipc
  3220  0365  2B35               	goto	l1736
  3221                           
  3222                           ;main.c: 64: {;main.c: 65: angle_buf[((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (POR
      +                          TCbits.RC0)) - 1] = PORTA;
  3223  0366  0020               	movlb	0	; select bank0
  3224  0367  080C               	movf	12,w	;volatile
  3225  0368  00A4               	movwf	??_ReceiveTargetAngle
  3226  0369  01A5               	clrf	??_ReceiveTargetAngle+1
  3227  036A  080E               	movf	14,w	;volatile
  3228  036B  3901               	andlw	1
  3229  036C  00A6               	movwf	??_ReceiveTargetAngle+2
  3230  036D  0C0E               	rrf	14,w	;volatile
  3231  036E  3901               	andlw	1
  3232  036F  00A7               	movwf	??_ReceiveTargetAngle+3
  3233  0370  3001               	movlw	1
  3234  0371                     u1835:	
  3235  0371  35A7               	lslf	??_ReceiveTargetAngle+3,f
  3236  0372  0B89               	decfsz	9,f
  3237  0373  2B71               	goto	u1835
  3238  0374  0C0E               	rrf	14,w	;volatile
  3239  0375  0C89               	rrf	9,f
  3240  0376  3901               	andlw	1
  3241  0377  00A8               	movwf	??_ReceiveTargetAngle+4
  3242  0378  3001               	movlw	1
  3243  0379                     u1845:	
  3244  0379  35A8               	lslf	??_ReceiveTargetAngle+4,f
  3245  037A  3EFF               	addlw	-1
  3246  037B  1D03               	skipz
  3247  037C  2B79               	goto	u1845
  3248  037D  3528               	lslf	??_ReceiveTargetAngle+4,w
  3249  037E  0427               	iorwf	??_ReceiveTargetAngle+3,w
  3250  037F  0426               	iorwf	??_ReceiveTargetAngle+2,w
  3251  0380  0709               	addwf	9,w
  3252  0381  3EFE               	addlw	254
  3253  0382  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3254  0383  0086               	movwf	6
  3255  0384  0187               	clrf	7
  3256  0385  0824               	movf	??_ReceiveTargetAngle,w
  3257  0386  3FC0               	movwi [0]fsr1
  3258  0387  0825               	movf	??_ReceiveTargetAngle+1,w
  3259  0388  3FC1               	movwi [1]fsr1
  3260                           
  3261                           ;main.c: 66: rx[((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits.RC0)) - 1] = 1
      +                          ;
  3262  0389  080E               	movf	14,w	;volatile
  3263  038A  3901               	andlw	1
  3264  038B  00A4               	movwf	??_ReceiveTargetAngle
  3265  038C  0C0E               	rrf	14,w	;volatile
  3266  038D  3901               	andlw	1
  3267  038E  00A5               	movwf	??_ReceiveTargetAngle+1
  3268  038F  3001               	movlw	1
  3269  0390                     u1855:	
  3270  0390  35A5               	lslf	??_ReceiveTargetAngle+1,f
  3271  0391  0B89               	decfsz	9,f
  3272  0392  2B90               	goto	u1855
  3273  0393  0C0E               	rrf	14,w	;volatile
  3274  0394  0C89               	rrf	9,f
  3275  0395  3901               	andlw	1
  3276  0396  00A6               	movwf	??_ReceiveTargetAngle+2
  3277  0397  3001               	movlw	1
  3278  0398                     u1865:	
  3279  0398  35A6               	lslf	??_ReceiveTargetAngle+2,f
  3280  0399  3EFF               	addlw	-1
  3281  039A  1D03               	skipz
  3282  039B  2B98               	goto	u1865
  3283  039C  3526               	lslf	??_ReceiveTargetAngle+2,w
  3284  039D  0425               	iorwf	??_ReceiveTargetAngle+1,w
  3285  039E  0424               	iorwf	??_ReceiveTargetAngle,w
  3286  039F  3EFF               	addlw	255
  3287  03A0  3E37               	addlw	(low (ReceiveTargetAngle@rx| 0))& (0+255)
  3288  03A1  0086               	movwf	6
  3289  03A2  0187               	clrf	7
  3290  03A3  0181               	clrf	1
  3291  03A4  0A81               	incf	1,f
  3292  03A5  2B35               	goto	l1736
  3293  03A6                     l1738:	
  3294                           
  3295                           ;main.c: 67: };main.c: 68: };main.c: 70: int i;;main.c: 71: for (i = 0; i < 4; i++)
  3296  03A6  01BC               	clrf	ReceiveTargetAngle@i
  3297  03A7  01BD               	clrf	ReceiveTargetAngle@i+1
  3298  03A8                     l1744:	
  3299                           
  3300                           ;main.c: 72: {;main.c: 73: if (angle_buf[i] == pre_angle[i])
  3301  03A8  0020               	movlb	0	; select bank0
  3302  03A9  353C               	lslf	ReceiveTargetAngle@i,w
  3303  03AA  3EAA               	addlw	(low (ReceiveTargetAngle@pre_angle| 0))& (0+255)
  3304  03AB  0086               	movwf	6
  3305  03AC  0187               	clrf	7
  3306  03AD  3F40               	moviw [0]fsr1
  3307  03AE  00A4               	movwf	??_ReceiveTargetAngle
  3308  03AF  3F41               	moviw [1]fsr1
  3309  03B0  00A5               	movwf	??_ReceiveTargetAngle+1
  3310  03B1  353C               	lslf	ReceiveTargetAngle@i,w
  3311  03B2  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3312  03B3  0086               	movwf	6
  3313  03B4  0187               	clrf	7
  3314  03B5  3F40               	moviw [0]fsr1
  3315  03B6  00A6               	movwf	??_ReceiveTargetAngle+2
  3316  03B7  3F41               	moviw [1]fsr1
  3317  03B8  00A7               	movwf	??_ReceiveTargetAngle+3
  3318  03B9  0825               	movf	??_ReceiveTargetAngle+1,w
  3319  03BA  0627               	xorwf	??_ReceiveTargetAngle+3,w
  3320  03BB  1D03               	skipz
  3321  03BC  2BBF               	goto	u1885
  3322  03BD  0824               	movf	??_ReceiveTargetAngle,w
  3323  03BE  0626               	xorwf	??_ReceiveTargetAngle+2,w
  3324  03BF                     u1885:	
  3325  03BF  1D03               	skipz
  3326  03C0  2BD6               	goto	l1748
  3327                           
  3328                           ;main.c: 74: {;main.c: 75: Servo[i].angle = angle_buf[i];
  3329  03C1  353C               	lslf	ReceiveTargetAngle@i,w
  3330  03C2  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3331  03C3  0086               	movwf	6
  3332  03C4  0187               	clrf	7
  3333  03C5  3005               	movlw	5
  3334  03C6  00A4               	movwf	??_ReceiveTargetAngle
  3335  03C7  0824               	movf	??_ReceiveTargetAngle,w
  3336  03C8  00A0               	movwf	___bmul@multiplicand
  3337  03C9  083C               	movf	ReceiveTargetAngle@i,w
  3338  03CA  318F  2772  3183   	fcall	___bmul
  3339  03CD  073B               	addwf	ReceiveTargetAngle@Servo,w
  3340  03CE  00A5               	movwf	??_ReceiveTargetAngle+1
  3341  03CF  0825               	movf	??_ReceiveTargetAngle+1,w
  3342  03D0  0084               	movwf	4
  3343  03D1  0185               	clrf	5
  3344  03D2  3F40               	moviw [0]fsr1
  3345  03D3  3F80               	movwi [0]fsr0
  3346  03D4  3F41               	moviw [1]fsr1
  3347  03D5  3F81               	movwi [1]fsr0
  3348  03D6                     l1748:	
  3349                           
  3350                           ;main.c: 76: };main.c: 77: pre_angle[i] = angle_buf[i];
  3351  03D6  353C               	lslf	ReceiveTargetAngle@i,w
  3352  03D7  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3353  03D8  0086               	movwf	6
  3354  03D9  0187               	clrf	7
  3355  03DA  353C               	lslf	ReceiveTargetAngle@i,w
  3356  03DB  3EAA               	addlw	(low (ReceiveTargetAngle@pre_angle| 0))& (0+255)
  3357  03DC  0084               	movwf	4
  3358  03DD  0185               	clrf	5
  3359  03DE  3F40               	moviw [0]fsr1
  3360  03DF  3F80               	movwi [0]fsr0
  3361  03E0  3F41               	moviw [1]fsr1
  3362  03E1  3F81               	movwi [1]fsr0
  3363  03E2  3001               	movlw	1
  3364  03E3  07BC               	addwf	ReceiveTargetAngle@i,f
  3365  03E4  3000               	movlw	0
  3366  03E5  3DBD               	addwfc	ReceiveTargetAngle@i+1,f
  3367  03E6  083D               	movf	ReceiveTargetAngle@i+1,w
  3368  03E7  3A80               	xorlw	128
  3369  03E8  00A4               	movwf	??_ReceiveTargetAngle
  3370  03E9  3080               	movlw	128
  3371  03EA  0224               	subwf	??_ReceiveTargetAngle,w
  3372  03EB  1D03               	skipz
  3373  03EC  2BEF               	goto	u1895
  3374  03ED  3004               	movlw	4
  3375  03EE  023C               	subwf	ReceiveTargetAngle@i,w
  3376  03EF                     u1895:	
  3377  03EF  1803               	btfsc	3,0
  3378  03F0  0008               	return
  3379  03F1  2BA8               	goto	l1744
  3380  03F2                     __end_of_ReceiveTargetAngle:	
  3381                           
  3382                           	psect	text11
  3383  070B                     __ptext11:	
  3384 ;; *************** function _Output *****************
  3385 ;; Defined at:
  3386 ;;		line 13 in file "ShareFunc.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  ch              1    wreg     unsigned char 
  3389 ;;  value           1    0[BANK0 ] unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  ch              1    2[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3396 ;; Tracked objects:
  3397 ;;		On entry : B1F/0
  3398 ;;		On exit  : B1D/0
  3399 ;;		Unchanged: B00/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3401 ;;      Params:         0       1       0       0
  3402 ;;      Locals:         0       1       0       0
  3403 ;;      Temps:          0       1       0       0
  3404 ;;      Totals:         0       3       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    3
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           
  3416                           ;psect for function _Output
  3417  070B                     _Output:	
  3418                           
  3419                           ;incstack = 0
  3420                           ; Regs used in _Output: [wreg-fsr0h+status,2+status,0+pclath]
  3421                           ;Output@ch stored from wreg
  3422  070B  00A2               	movwf	Output@ch
  3423                           
  3424                           ;ShareFunc.c: 15: if (ch & _CHs[0]) LATCbits.LATC3 = value;
  3425  070C  30FF               	movlw	low (__CHs| (0+32768))
  3426  070D  0084               	movwf	4
  3427  070E  3087               	movlw	high (__CHs| (0+32768))
  3428  070F  0085               	movwf	5
  3429  0710  0800               	movf	0,w	;code access
  3430  0711  00A1               	movwf	??_Output
  3431  0712  0822               	movf	Output@ch,w
  3432  0713  0521               	andwf	??_Output,w
  3433  0714  1903               	btfsc	3,2
  3434  0715  2F1C               	goto	l1718
  3435  0716  0C20               	rrf	Output@value,w
  3436  0717  0022               	movlb	2	; select bank2
  3437  0718  1C03               	skipc
  3438  0719  118E               	bcf	14,3	;volatile
  3439  071A  1803               	skipnc
  3440  071B  158E               	bsf	14,3	;volatile
  3441  071C                     l1718:	
  3442                           
  3443                           ;ShareFunc.c: 16: if (ch & _CHs[1]) LATCbits.LATC6 = value;
  3444  071C  3000               	movlw	low ((__CHs+1)| (0+32768))
  3445  071D  0084               	movwf	4
  3446  071E  3088               	movlw	high ((__CHs+1)| (0+32768))
  3447  071F  0085               	movwf	5
  3448  0720  0800               	movf	0,w	;code access
  3449  0721  0020               	movlb	0	; select bank0
  3450  0722  0522               	andwf	Output@ch,w
  3451  0723  1903               	btfsc	3,2
  3452  0724  2F2B               	goto	l1722
  3453  0725  0C20               	rrf	Output@value,w
  3454  0726  0022               	movlb	2	; select bank2
  3455  0727  1C03               	skipc
  3456  0728  130E               	bcf	14,6	;volatile
  3457  0729  1803               	skipnc
  3458  072A  170E               	bsf	14,6	;volatile
  3459  072B                     l1722:	
  3460                           
  3461                           ;ShareFunc.c: 17: if (ch & _CHs[2]) LATCbits.LATC5 = value;
  3462  072B  3001               	movlw	low ((__CHs+2)| (0+32768))
  3463  072C  0084               	movwf	4
  3464  072D  3088               	movlw	high ((__CHs+2)| (0+32768))
  3465  072E  0085               	movwf	5
  3466  072F  0800               	movf	0,w	;code access
  3467  0730  0020               	movlb	0	; select bank0
  3468  0731  0522               	andwf	Output@ch,w
  3469  0732  1903               	btfsc	3,2
  3470  0733  2F3A               	goto	l1726
  3471  0734  0C20               	rrf	Output@value,w
  3472  0735  0022               	movlb	2	; select bank2
  3473  0736  1C03               	skipc
  3474  0737  128E               	bcf	14,5	;volatile
  3475  0738  1803               	skipnc
  3476  0739  168E               	bsf	14,5	;volatile
  3477  073A                     l1726:	
  3478                           
  3479                           ;ShareFunc.c: 18: if (ch & _CHs[3]) LATCbits.LATC4 = value;
  3480  073A  3002               	movlw	low ((__CHs+3)| (0+32768))
  3481  073B  0084               	movwf	4
  3482  073C  3088               	movlw	high ((__CHs+3)| (0+32768))
  3483  073D  0085               	movwf	5
  3484  073E  0800               	movf	0,w	;code access
  3485  073F  0020               	movlb	0	; select bank0
  3486  0740  0522               	andwf	Output@ch,w
  3487  0741  1903               	btfsc	3,2
  3488  0742  0008               	return
  3489  0743  0C20               	rrf	Output@value,w
  3490  0744  0022               	movlb	2	; select bank2
  3491  0745  1C03               	skipc
  3492  0746  120E               	bcf	14,4	;volatile
  3493  0747  1803               	skipnc
  3494  0748  160E               	bsf	14,4	;volatile
  3495  0749  0008               	return
  3496  074A                     __end_of_Output:	
  3497                           
  3498                           	psect	text12
  3499  0F3B                     __ptext12:	
  3500 ;; *************** function _Init *****************
  3501 ;; Defined at:
  3502 ;;		line 4 in file "Init.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, pclath, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : B1F/1
  3513 ;;		On exit  : B1F/0
  3514 ;;		Unchanged: B00/0
  3515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3516 ;;      Params:         0       0       0       0
  3517 ;;      Locals:         0       0       0       0
  3518 ;;      Temps:          0       0       0       0
  3519 ;;      Totals:         0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    4
  3523 ;; This function calls:
  3524 ;;		_InitOsc
  3525 ;;		_InitPin
  3526 ;;		_InitTmr
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           
  3532                           
  3533                           ;psect for function _Init
  3534  0F3B                     _Init:	
  3535                           
  3536                           ;Init.c: 6: InitOsc();
  3537                           
  3538                           ;incstack = 0
  3539                           ; Regs used in _Init: [wreg+status,2+status,0+pclath+cstack]
  3540  0F3B  318F  2734  318F   	fcall	_InitOsc
  3541                           
  3542                           ;Init.c: 7: InitPin();
  3543  0F3E  318F  2761  318F   	fcall	_InitPin
  3544                           
  3545                           ;Init.c: 8: InitTmr();
  3546  0F41  318F  2746         	fcall	_InitTmr
  3547                           
  3548                           ;Init.c: 12: INTCONbits.GIE = 1;
  3549  0F43  178B               	bsf	11,7	;volatile
  3550                           
  3551                           ;Init.c: 13: INTCONbits.PEIE = 1;
  3552  0F44  170B               	bsf	11,6	;volatile
  3553  0F45  0008               	return
  3554  0F46                     __end_of_Init:	
  3555                           
  3556                           	psect	text13
  3557  0F46                     __ptext13:	
  3558 ;; *************** function _InitTmr *****************
  3559 ;; Defined at:
  3560 ;;		line 46 in file "Init.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : B1F/1
  3571 ;;		On exit  : B1F/0
  3572 ;;		Unchanged: B00/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3574 ;;      Params:         0       0       0       0
  3575 ;;      Locals:         0       0       0       0
  3576 ;;      Temps:          0       0       0       0
  3577 ;;      Totals:         0       0       0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    3
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_Init
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           
  3589                           ;psect for function _InitTmr
  3590  0F46                     _InitTmr:	
  3591                           
  3592                           ;Init.c: 48: T1CONbits.TMR1CS = 0;
  3593                           
  3594                           ;incstack = 0
  3595                           ; Regs used in _InitTmr: [wreg+status,2+status,0]
  3596  0F46  303F               	movlw	-193
  3597  0F47  0020               	movlb	0	; select bank0
  3598  0F48  0598               	andwf	24,f	;volatile
  3599                           
  3600                           ;Init.c: 49: T1CONbits.T1CKPS = 0b00;
  3601  0F49  30CF               	movlw	-49
  3602  0F4A  0598               	andwf	24,f	;volatile
  3603                           
  3604                           ;Init.c: 50: PIE1bits.TMR1IE = 1;
  3605  0F4B  0021               	movlb	1	; select bank1
  3606  0F4C  1411               	bsf	17,0	;volatile
  3607                           
  3608                           ;Init.c: 51: TMR1 = 0;
  3609  0F4D  0020               	movlb	0	; select bank0
  3610  0F4E  0196               	clrf	22	;volatile
  3611  0F4F  0197               	clrf	23	;volatile
  3612                           
  3613                           ;Init.c: 52: TMR1ON = 1;
  3614  0F50  1418               	bsf	24,0	;volatile
  3615  0F51  0008               	return
  3616  0F52                     __end_of_InitTmr:	
  3617                           
  3618                           	psect	text14
  3619  0F61                     __ptext14:	
  3620 ;; *************** function _InitPin *****************
  3621 ;; Defined at:
  3622 ;;		line 22 in file "Init.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : B1F/1
  3633 ;;		On exit  : B1F/1
  3634 ;;		Unchanged: B00/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3636 ;;      Params:         0       0       0       0
  3637 ;;      Locals:         0       0       0       0
  3638 ;;      Temps:          0       0       0       0
  3639 ;;      Totals:         0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    3
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_Init
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function _InitPin
  3652  0F61                     _InitPin:	
  3653                           
  3654                           ;Init.c: 25: ANSELA = 0x00;
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _InitPin: [wreg+status,2]
  3658  0F61  0023               	movlb	3	; select bank3
  3659  0F62  018C               	clrf	12	;volatile
  3660                           
  3661                           ;Init.c: 26: ANSELB = 0x00;
  3662  0F63  018D               	clrf	13	;volatile
  3663                           
  3664                           ;Init.c: 28: TRISA = 0xFF;
  3665  0F64  30FF               	movlw	255
  3666  0F65  0021               	movlb	1	; select bank1
  3667  0F66  008C               	movwf	12	;volatile
  3668                           
  3669                           ;Init.c: 29: TRISB = 0xFF;
  3670  0F67  30FF               	movlw	255
  3671  0F68  008D               	movwf	13	;volatile
  3672                           
  3673                           ;Init.c: 32: TRISCbits.TRISC0 = 1;
  3674  0F69  140E               	bsf	14,0	;volatile
  3675                           
  3676                           ;Init.c: 33: TRISCbits.TRISC1 = 1;
  3677  0F6A  148E               	bsf	14,1	;volatile
  3678                           
  3679                           ;Init.c: 34: TRISCbits.TRISC2 = 1;
  3680  0F6B  150E               	bsf	14,2	;volatile
  3681                           
  3682                           ;Init.c: 37: TRISCbits.TRISC3 = 0;
  3683  0F6C  118E               	bcf	14,3	;volatile
  3684                           
  3685                           ;Init.c: 38: TRISCbits.TRISC4 = 0;
  3686  0F6D  120E               	bcf	14,4	;volatile
  3687                           
  3688                           ;Init.c: 39: TRISCbits.TRISC5 = 0;
  3689  0F6E  128E               	bcf	14,5	;volatile
  3690                           
  3691                           ;Init.c: 40: TRISCbits.TRISC6 = 0;
  3692  0F6F  130E               	bcf	14,6	;volatile
  3693                           
  3694                           ;Init.c: 43: TRISCbits.TRISC7 = 0;
  3695  0F70  138E               	bcf	14,7	;volatile
  3696  0F71  0008               	return
  3697  0F72                     __end_of_InitPin:	
  3698                           
  3699                           	psect	text15
  3700  0F34                     __ptext15:	
  3701 ;; *************** function _InitOsc *****************
  3702 ;; Defined at:
  3703 ;;		line 16 in file "Init.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;		None
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : B1F/1
  3714 ;;		On exit  : B1F/1
  3715 ;;		Unchanged: B00/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3717 ;;      Params:         0       0       0       0
  3718 ;;      Locals:         0       0       0       0
  3719 ;;      Temps:          0       0       0       0
  3720 ;;      Totals:         0       0       0       0
  3721 ;;Total ram usage:        0 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    3
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_Init
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           
  3732                           ;psect for function _InitOsc
  3733  0F34                     _InitOsc:	
  3734                           
  3735                           ;Init.c: 18: OSCCONbits.IRCF = 0b1110;
  3736                           
  3737                           ;incstack = 0
  3738                           ; Regs used in _InitOsc: [wreg+status,2+status,0]
  3739  0F34  0819               	movf	25,w	;volatile
  3740  0F35  3987               	andlw	-121
  3741  0F36  3870               	iorlw	112
  3742  0F37  0099               	movwf	25	;volatile
  3743                           
  3744                           ;Init.c: 19: OSCCONbits.SCS = 0b11;
  3745  0F38  3003               	movlw	3
  3746  0F39  0499               	iorwf	25,f	;volatile
  3747  0F3A  0008               	return
  3748  0F3B                     __end_of_InitOsc:	
  3749                           
  3750                           	psect	text16
  3751  005C                     __ptext16:	
  3752 ;; *************** function _CalcNextCnt *****************
  3753 ;; Defined at:
  3754 ;;		line 117 in file "main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  Servo           1    wreg     PTR struct .
  3757 ;;		 -> main@Servo(20), 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  Servo           1   18[BANK0 ] PTR struct .
  3760 ;;		 -> main@Servo(20), 
  3761 ;;  Tmp            20   19[BANK0 ] struct .[4]
  3762 ;;  i               2   41[BANK0 ] int 
  3763 ;;  j               2   39[BANK0 ] int 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/1
  3770 ;;		On exit  : 1F/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3773 ;;      Params:         0       0       0       0
  3774 ;;      Locals:         0      25       0       0
  3775 ;;      Temps:          0       6       0       0
  3776 ;;      Totals:         0      31       0       0
  3777 ;;Total ram usage:       31 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:    4
  3780 ;; This function calls:
  3781 ;;		_CalcTMRCnt
  3782 ;;		_Swap
  3783 ;;		___bmul
  3784 ;; This function is called by:
  3785 ;;		_main
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           
  3790                           ;psect for function _CalcNextCnt
  3791  005C                     _CalcNextCnt:	
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in _CalcNextCnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3795                           ;CalcNextCnt@Servo stored from wreg
  3796  005C  0020               	movlb	0	; select bank0
  3797  005D  00B2               	movwf	CalcNextCnt@Servo
  3798                           
  3799                           ;main.c: 119: int i, j;;main.c: 122: SERVO Tmp[4];;main.c: 123: for (i = 0; i < 4; i++)
  3800  005E  01C9               	clrf	CalcNextCnt@i
  3801  005F  01CA               	clrf	CalcNextCnt@i+1
  3802  0060                     l1790:	
  3803                           
  3804                           ;main.c: 124: {;main.c: 125: Tmp[i] = Servo[i];
  3805  0060  3005               	movlw	5
  3806  0061  0020               	movlb	0	; select bank0
  3807  0062  00AC               	movwf	??_CalcNextCnt
  3808  0063  082C               	movf	??_CalcNextCnt,w
  3809  0064  00A0               	movwf	___bmul@multiplicand
  3810  0065  0849               	movf	CalcNextCnt@i,w
  3811  0066  318F  2772  3180   	fcall	___bmul
  3812  0069  0732               	addwf	CalcNextCnt@Servo,w
  3813  006A  00AD               	movwf	??_CalcNextCnt+1
  3814  006B  082D               	movf	??_CalcNextCnt+1,w
  3815  006C  0086               	movwf	6
  3816  006D  0187               	clrf	7
  3817  006E  3005               	movlw	5
  3818  006F  00AE               	movwf	??_CalcNextCnt+2
  3819  0070  082E               	movf	??_CalcNextCnt+2,w
  3820  0071  00A0               	movwf	___bmul@multiplicand
  3821  0072  0849               	movf	CalcNextCnt@i,w
  3822  0073  318F  2772  3180   	fcall	___bmul
  3823  0076  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3824  0077  0084               	movwf	4
  3825  0078  0185               	clrf	5
  3826  0079  3005               	movlw	5
  3827  007A  00AF               	movwf	??_CalcNextCnt+3
  3828  007B                     u1970:	
  3829  007B  0016               	moviw fsr1++
  3830  007C  001A               	movwi fsr0++
  3831  007D  0BAF               	decfsz	??_CalcNextCnt+3,f
  3832  007E  287B               	goto	u1970
  3833  007F  3001               	movlw	1
  3834  0080  07C9               	addwf	CalcNextCnt@i,f
  3835  0081  3000               	movlw	0
  3836  0082  3DCA               	addwfc	CalcNextCnt@i+1,f
  3837  0083  084A               	movf	CalcNextCnt@i+1,w
  3838  0084  3A80               	xorlw	128
  3839  0085  00AC               	movwf	??_CalcNextCnt
  3840  0086  3080               	movlw	128
  3841  0087  022C               	subwf	??_CalcNextCnt,w
  3842  0088  1D03               	skipz
  3843  0089  288C               	goto	u1985
  3844  008A  3004               	movlw	4
  3845  008B  0249               	subwf	CalcNextCnt@i,w
  3846  008C                     u1985:	
  3847  008C  1C03               	skipc
  3848  008D  2860               	goto	l1790
  3849                           
  3850                           ;main.c: 126: };main.c: 129: for (i = 0; i < 4; i++)
  3851  008E  0020               	movlb	0	; select bank0
  3852  008F  01C9               	clrf	CalcNextCnt@i
  3853  0090  01CA               	clrf	CalcNextCnt@i+1
  3854  0091                     l1802:	
  3855                           
  3856                           ;main.c: 130: {;main.c: 131: for (j = i + 1; j < 4; j++)
  3857  0091  0020               	movlb	0	; select bank0
  3858  0092  0849               	movf	CalcNextCnt@i,w
  3859  0093  3E01               	addlw	1
  3860  0094  00C7               	movwf	CalcNextCnt@j
  3861  0095  3000               	movlw	0
  3862  0096  3D4A               	addwfc	CalcNextCnt@i+1,w
  3863  0097  00C8               	movwf	CalcNextCnt@j+1
  3864  0098                     l1804:	
  3865  0098  0848               	movf	CalcNextCnt@j+1,w
  3866  0099  3A80               	xorlw	128
  3867  009A  00AC               	movwf	??_CalcNextCnt
  3868  009B  3080               	movlw	128
  3869  009C  022C               	subwf	??_CalcNextCnt,w
  3870  009D  1D03               	skipz
  3871  009E  28A1               	goto	u1995
  3872  009F  3004               	movlw	4
  3873  00A0  0247               	subwf	CalcNextCnt@j,w
  3874  00A1                     u1995:	
  3875  00A1  1803               	btfsc	3,0
  3876  00A2  2915               	goto	l1820
  3877                           
  3878                           ;main.c: 132: {;main.c: 133: if (Tmp[i].width == Tmp[j].width && Tmp[j].width != 65535)
  3879  00A3  3005               	movlw	5
  3880  00A4  0020               	movlb	0	; select bank0
  3881  00A5  00AC               	movwf	??_CalcNextCnt
  3882  00A6  082C               	movf	??_CalcNextCnt,w
  3883  00A7  00A0               	movwf	___bmul@multiplicand
  3884  00A8  0847               	movf	CalcNextCnt@j,w
  3885  00A9  318F  2772  3180   	fcall	___bmul
  3886  00AC  3E02               	addlw	2
  3887  00AD  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3888  00AE  0086               	movwf	6
  3889  00AF  0187               	clrf	7
  3890  00B0  3F40               	moviw [0]fsr1
  3891  00B1  00AD               	movwf	??_CalcNextCnt+1
  3892  00B2  3F41               	moviw [1]fsr1
  3893  00B3  00AE               	movwf	??_CalcNextCnt+2
  3894  00B4  3005               	movlw	5
  3895  00B5  00AF               	movwf	??_CalcNextCnt+3
  3896  00B6  082F               	movf	??_CalcNextCnt+3,w
  3897  00B7  00A0               	movwf	___bmul@multiplicand
  3898  00B8  0849               	movf	CalcNextCnt@i,w
  3899  00B9  318F  2772  3180   	fcall	___bmul
  3900  00BC  3E02               	addlw	2
  3901  00BD  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3902  00BE  0086               	movwf	6
  3903  00BF  0187               	clrf	7
  3904  00C0  3F40               	moviw [0]fsr1
  3905  00C1  00B0               	movwf	??_CalcNextCnt+4
  3906  00C2  3F41               	moviw [1]fsr1
  3907  00C3  00B1               	movwf	??_CalcNextCnt+5
  3908  00C4  082E               	movf	??_CalcNextCnt+2,w
  3909  00C5  0631               	xorwf	??_CalcNextCnt+5,w
  3910  00C6  1D03               	skipz
  3911  00C7  28CA               	goto	u2005
  3912  00C8  082D               	movf	??_CalcNextCnt+1,w
  3913  00C9  0630               	xorwf	??_CalcNextCnt+4,w
  3914  00CA                     u2005:	
  3915  00CA  1D03               	skipz
  3916  00CB  2910               	goto	l1816
  3917  00CC  3005               	movlw	5
  3918  00CD  00AC               	movwf	??_CalcNextCnt
  3919  00CE  082C               	movf	??_CalcNextCnt,w
  3920  00CF  00A0               	movwf	___bmul@multiplicand
  3921  00D0  0847               	movf	CalcNextCnt@j,w
  3922  00D1  318F  2772  3180   	fcall	___bmul
  3923  00D4  3E02               	addlw	2
  3924  00D5  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3925  00D6  0086               	movwf	6
  3926  00D7  0187               	clrf	7
  3927  00D8  0016               	moviw fsr1++
  3928  00D9  3AFF               	xorlw	255
  3929  00DA  00AD               	movwf	??_CalcNextCnt+1
  3930  00DB  0016               	moviw fsr1++
  3931  00DC  3AFF               	xorlw	255
  3932  00DD  04AD               	iorwf	??_CalcNextCnt+1,f
  3933  00DE  1903               	btfsc	3,2
  3934  00DF  2910               	goto	l1816
  3935                           
  3936                           ;main.c: 134: {;main.c: 135: Tmp[j].width = 65535;
  3937  00E0  3005               	movlw	5
  3938  00E1  00AC               	movwf	??_CalcNextCnt
  3939  00E2  082C               	movf	??_CalcNextCnt,w
  3940  00E3  00A0               	movwf	___bmul@multiplicand
  3941  00E4  0847               	movf	CalcNextCnt@j,w
  3942  00E5  318F  2772  3180   	fcall	___bmul
  3943  00E8  3E02               	addlw	2
  3944  00E9  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3945  00EA  0086               	movwf	6
  3946  00EB  0187               	clrf	7
  3947  00EC  30FF               	movlw	255
  3948  00ED  3FC0               	movwi [0]fsr1
  3949  00EE  30FF               	movlw	255
  3950  00EF  3FC1               	movwi [1]fsr1
  3951                           
  3952                           ;main.c: 136: Tmp[i].ch |= Tmp[j].ch;
  3953  00F0  3005               	movlw	5
  3954  00F1  00AC               	movwf	??_CalcNextCnt
  3955  00F2  082C               	movf	??_CalcNextCnt,w
  3956  00F3  00A0               	movwf	___bmul@multiplicand
  3957  00F4  0847               	movf	CalcNextCnt@j,w
  3958  00F5  318F  2772  3180   	fcall	___bmul
  3959  00F8  3E04               	addlw	4
  3960  00F9  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3961  00FA  0086               	movwf	6
  3962  00FB  0187               	clrf	7
  3963  00FC  0801               	movf	1,w
  3964  00FD  00AD               	movwf	??_CalcNextCnt+1
  3965  00FE  3005               	movlw	5
  3966  00FF  00AE               	movwf	??_CalcNextCnt+2
  3967  0100  082E               	movf	??_CalcNextCnt+2,w
  3968  0101  00A0               	movwf	___bmul@multiplicand
  3969  0102  0849               	movf	CalcNextCnt@i,w
  3970  0103  318F  2772  3180   	fcall	___bmul
  3971  0106  3E04               	addlw	4
  3972  0107  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  3973  0108  0086               	movwf	6
  3974  0109  0187               	clrf	7
  3975  010A  082D               	movf	??_CalcNextCnt+1,w
  3976  010B  0481               	iorwf	1,f
  3977                           
  3978                           ;main.c: 137: _IntNum--;
  3979  010C  30FF               	movlw	255
  3980  010D  07F8               	addwf	__IntNum,f
  3981  010E  30FF               	movlw	255
  3982  010F  3DF9               	addwfc	__IntNum+1,f
  3983  0110                     l1816:	
  3984  0110  3001               	movlw	1
  3985  0111  07C7               	addwf	CalcNextCnt@j,f
  3986  0112  3000               	movlw	0
  3987  0113  3DC8               	addwfc	CalcNextCnt@j+1,f
  3988  0114  2898               	goto	l1804
  3989  0115                     l1820:	
  3990  0115  3001               	movlw	1
  3991  0116  0020               	movlb	0	; select bank0
  3992  0117  07C9               	addwf	CalcNextCnt@i,f
  3993  0118  3000               	movlw	0
  3994  0119  3DCA               	addwfc	CalcNextCnt@i+1,f
  3995  011A  084A               	movf	CalcNextCnt@i+1,w
  3996  011B  3A80               	xorlw	128
  3997  011C  00AC               	movwf	??_CalcNextCnt
  3998  011D  3080               	movlw	128
  3999  011E  022C               	subwf	??_CalcNextCnt,w
  4000  011F  1D03               	skipz
  4001  0120  2923               	goto	u2025
  4002  0121  3004               	movlw	4
  4003  0122  0249               	subwf	CalcNextCnt@i,w
  4004  0123                     u2025:	
  4005  0123  1C03               	skipc
  4006  0124  2891               	goto	l1802
  4007                           
  4008                           ;main.c: 138: };main.c: 139: };main.c: 140: };main.c: 143: for (i = 0; i < 4; i++)
  4009  0125  0020               	movlb	0	; select bank0
  4010  0126  01C9               	clrf	CalcNextCnt@i
  4011  0127  01CA               	clrf	CalcNextCnt@i+1
  4012  0128                     l1828:	
  4013                           
  4014                           ;main.c: 144: {;main.c: 145: for (j = i; j < 4; j++)
  4015  0128  0020               	movlb	0	; select bank0
  4016  0129  084A               	movf	CalcNextCnt@i+1,w
  4017  012A  00C8               	movwf	CalcNextCnt@j+1
  4018  012B  0849               	movf	CalcNextCnt@i,w
  4019  012C  00C7               	movwf	CalcNextCnt@j
  4020  012D  0848               	movf	CalcNextCnt@j+1,w
  4021  012E  3A80               	xorlw	128
  4022  012F  00AC               	movwf	??_CalcNextCnt
  4023  0130  3080               	movlw	128
  4024  0131  022C               	subwf	??_CalcNextCnt,w
  4025  0132  1D03               	skipz
  4026  0133  2936               	goto	u2035
  4027  0134  3004               	movlw	4
  4028  0135  0247               	subwf	CalcNextCnt@j,w
  4029  0136                     u2035:	
  4030  0136  1803               	btfsc	3,0
  4031  0137  2988               	goto	l1840
  4032  0138                     l1832:	
  4033                           
  4034                           ;main.c: 146: {;main.c: 147: if (Tmp[i].width > Tmp[j].width)
  4035  0138  3005               	movlw	5
  4036  0139  0020               	movlb	0	; select bank0
  4037  013A  00AC               	movwf	??_CalcNextCnt
  4038  013B  082C               	movf	??_CalcNextCnt,w
  4039  013C  00A0               	movwf	___bmul@multiplicand
  4040  013D  0849               	movf	CalcNextCnt@i,w
  4041  013E  318F  2772  3180   	fcall	___bmul
  4042  0141  3E02               	addlw	2
  4043  0142  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4044  0143  0086               	movwf	6
  4045  0144  0187               	clrf	7
  4046  0145  3F40               	moviw [0]fsr1
  4047  0146  00AD               	movwf	??_CalcNextCnt+1
  4048  0147  3F41               	moviw [1]fsr1
  4049  0148  00AE               	movwf	??_CalcNextCnt+2
  4050  0149  3005               	movlw	5
  4051  014A  00AF               	movwf	??_CalcNextCnt+3
  4052  014B  082F               	movf	??_CalcNextCnt+3,w
  4053  014C  00A0               	movwf	___bmul@multiplicand
  4054  014D  0847               	movf	CalcNextCnt@j,w
  4055  014E  318F  2772  3180   	fcall	___bmul
  4056  0151  3E02               	addlw	2
  4057  0152  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4058  0153  0086               	movwf	6
  4059  0154  0187               	clrf	7
  4060  0155  3F40               	moviw [0]fsr1
  4061  0156  00B0               	movwf	??_CalcNextCnt+4
  4062  0157  3F41               	moviw [1]fsr1
  4063  0158  00B1               	movwf	??_CalcNextCnt+5
  4064  0159  082E               	movf	??_CalcNextCnt+2,w
  4065  015A  0231               	subwf	??_CalcNextCnt+5,w
  4066  015B  1D03               	skipz
  4067  015C  295F               	goto	u2045
  4068  015D  082D               	movf	??_CalcNextCnt+1,w
  4069  015E  0230               	subwf	??_CalcNextCnt+4,w
  4070  015F                     u2045:	
  4071  015F  1803               	skipnc
  4072  0160  2979               	goto	l1836
  4073                           
  4074                           ;main.c: 148: {;main.c: 149: Swap(&Tmp[i], &Tmp[j]);
  4075  0161  3005               	movlw	5
  4076  0162  00AC               	movwf	??_CalcNextCnt
  4077  0163  082C               	movf	??_CalcNextCnt,w
  4078  0164  00A0               	movwf	___bmul@multiplicand
  4079  0165  0847               	movf	CalcNextCnt@j,w
  4080  0166  318F  2772  3180   	fcall	___bmul
  4081  0169  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4082  016A  00AD               	movwf	??_CalcNextCnt+1
  4083  016B  082D               	movf	??_CalcNextCnt+1,w
  4084  016C  00A4               	movwf	Swap@b
  4085  016D  3005               	movlw	5
  4086  016E  00AE               	movwf	??_CalcNextCnt+2
  4087  016F  082E               	movf	??_CalcNextCnt+2,w
  4088  0170  00A0               	movwf	___bmul@multiplicand
  4089  0171  0849               	movf	CalcNextCnt@i,w
  4090  0172  318F  2772  3180   	fcall	___bmul
  4091  0175  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4092  0176  3187  27B7  3180   	fcall	_Swap
  4093  0179                     l1836:	
  4094  0179  3001               	movlw	1
  4095  017A  07C7               	addwf	CalcNextCnt@j,f
  4096  017B  3000               	movlw	0
  4097  017C  3DC8               	addwfc	CalcNextCnt@j+1,f
  4098  017D  0848               	movf	CalcNextCnt@j+1,w
  4099  017E  3A80               	xorlw	128
  4100  017F  00AC               	movwf	??_CalcNextCnt
  4101  0180  3080               	movlw	128
  4102  0181  022C               	subwf	??_CalcNextCnt,w
  4103  0182  1D03               	skipz
  4104  0183  2986               	goto	u2055
  4105  0184  3004               	movlw	4
  4106  0185  0247               	subwf	CalcNextCnt@j,w
  4107  0186                     u2055:	
  4108  0186  1C03               	skipc
  4109  0187  2938               	goto	l1832
  4110  0188                     l1840:	
  4111  0188  3001               	movlw	1
  4112  0189  0020               	movlb	0	; select bank0
  4113  018A  07C9               	addwf	CalcNextCnt@i,f
  4114  018B  3000               	movlw	0
  4115  018C  3DCA               	addwfc	CalcNextCnt@i+1,f
  4116  018D  084A               	movf	CalcNextCnt@i+1,w
  4117  018E  3A80               	xorlw	128
  4118  018F  00AC               	movwf	??_CalcNextCnt
  4119  0190  3080               	movlw	128
  4120  0191  022C               	subwf	??_CalcNextCnt,w
  4121  0192  1D03               	skipz
  4122  0193  2996               	goto	u2065
  4123  0194  3004               	movlw	4
  4124  0195  0249               	subwf	CalcNextCnt@i,w
  4125  0196                     u2065:	
  4126  0196  1C03               	skipc
  4127  0197  2928               	goto	l1828
  4128                           
  4129                           ;main.c: 150: };main.c: 151: };main.c: 152: };main.c: 155: for (i = 0; i < 4; i++)
  4130  0198  0020               	movlb	0	; select bank0
  4131  0199  01C9               	clrf	CalcNextCnt@i
  4132  019A  01CA               	clrf	CalcNextCnt@i+1
  4133  019B                     l1848:	
  4134                           
  4135                           ;main.c: 156: {;main.c: 157: _CHq[i] = Tmp[i].ch;
  4136  019B  3005               	movlw	5
  4137  019C  0020               	movlb	0	; select bank0
  4138  019D  00AC               	movwf	??_CalcNextCnt
  4139  019E  082C               	movf	??_CalcNextCnt,w
  4140  019F  00A0               	movwf	___bmul@multiplicand
  4141  01A0  0849               	movf	CalcNextCnt@i,w
  4142  01A1  318F  2772  3180   	fcall	___bmul
  4143  01A4  3E04               	addlw	4
  4144  01A5  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4145  01A6  0086               	movwf	6
  4146  01A7  0187               	clrf	7
  4147  01A8  0801               	movf	1,w
  4148  01A9  00AD               	movwf	??_CalcNextCnt+1
  4149  01AA  0849               	movf	CalcNextCnt@i,w
  4150  01AB  3EBB               	addlw	(low (__CHq| 0))& (0+255)
  4151  01AC  0086               	movwf	6
  4152  01AD  0187               	clrf	7
  4153  01AE  082D               	movf	??_CalcNextCnt+1,w
  4154  01AF  0081               	movwf	1
  4155  01B0  3001               	movlw	1
  4156  01B1  07C9               	addwf	CalcNextCnt@i,f
  4157  01B2  3000               	movlw	0
  4158  01B3  3DCA               	addwfc	CalcNextCnt@i+1,f
  4159  01B4  084A               	movf	CalcNextCnt@i+1,w
  4160  01B5  3A80               	xorlw	128
  4161  01B6  00AC               	movwf	??_CalcNextCnt
  4162  01B7  3080               	movlw	128
  4163  01B8  022C               	subwf	??_CalcNextCnt,w
  4164  01B9  1D03               	skipz
  4165  01BA  29BD               	goto	u2075
  4166  01BB  3004               	movlw	4
  4167  01BC  0249               	subwf	CalcNextCnt@i,w
  4168  01BD                     u2075:	
  4169  01BD  1C03               	skipc
  4170  01BE  299B               	goto	l1848
  4171                           
  4172                           ;main.c: 158: };main.c: 161: _TMRCnt[0] = CalcTMRCnt(Tmp[0].width);
  4173  01BF  0020               	movlb	0	; select bank0
  4174  01C0  0836               	movf	CalcNextCnt@Tmp+3,w
  4175  01C1  00A5               	movwf	CalcTMRCnt@pulse_width+1
  4176  01C2  0835               	movf	CalcNextCnt@Tmp+2,w
  4177  01C3  00A4               	movwf	CalcTMRCnt@pulse_width
  4178  01C4  318F  2752  3180   	fcall	_CalcTMRCnt
  4179  01C7  0825               	movf	?_CalcTMRCnt+1,w
  4180  01C8  0021               	movlb	1	; select bank1
  4181  01C9  00A1               	movwf	(__TMRCnt+1)^(0+128)
  4182  01CA  0020               	movlb	0	; select bank0
  4183  01CB  0824               	movf	?_CalcTMRCnt,w
  4184  01CC  0021               	movlb	1	; select bank1
  4185  01CD  00A0               	movwf	__TMRCnt^(0+128)
  4186                           
  4187                           ;main.c: 162: for (i = 1; i < _IntNum - 1; i++)
  4188  01CE  3001               	movlw	1
  4189  01CF  0020               	movlb	0	; select bank0
  4190  01D0  00C9               	movwf	CalcNextCnt@i
  4191  01D1  3000               	movlw	0
  4192  01D2  00CA               	movwf	CalcNextCnt@i+1
  4193  01D3                     l1862:	
  4194  01D3  0878               	movf	__IntNum,w
  4195  01D4  3EFF               	addlw	255
  4196  01D5  00AC               	movwf	??_CalcNextCnt
  4197  01D6  30FF               	movlw	255
  4198  01D7  3D79               	addwfc	__IntNum+1,w
  4199  01D8  00AD               	movwf	??_CalcNextCnt+1
  4200  01D9  084A               	movf	CalcNextCnt@i+1,w
  4201  01DA  3A80               	xorlw	128
  4202  01DB  00AE               	movwf	??_CalcNextCnt+2
  4203  01DC  082D               	movf	??_CalcNextCnt+1,w
  4204  01DD  3A80               	xorlw	128
  4205  01DE  022E               	subwf	??_CalcNextCnt+2,w
  4206  01DF  1D03               	skipz
  4207  01E0  29E3               	goto	u2085
  4208  01E1  082C               	movf	??_CalcNextCnt,w
  4209  01E2  0249               	subwf	CalcNextCnt@i,w
  4210  01E3                     u2085:	
  4211  01E3  1803               	btfsc	3,0
  4212  01E4  2A15               	goto	l1864
  4213                           
  4214                           ;main.c: 163: {;main.c: 164: _TMRCnt[i] = CalcTMRCnt(Tmp[i].width - Tmp[i - 1].width);
  4215  01E5  3005               	movlw	5
  4216  01E6  0020               	movlb	0	; select bank0
  4217  01E7  00AC               	movwf	??_CalcNextCnt
  4218  01E8  082C               	movf	??_CalcNextCnt,w
  4219  01E9  00A0               	movwf	___bmul@multiplicand
  4220  01EA  0849               	movf	CalcNextCnt@i,w
  4221  01EB  318F  2772  3180   	fcall	___bmul
  4222  01EE  3EFD               	addlw	253
  4223  01EF  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4224  01F0  0086               	movwf	6
  4225  01F1  0187               	clrf	7
  4226  01F2  3005               	movlw	5
  4227  01F3  00AD               	movwf	??_CalcNextCnt+1
  4228  01F4  082D               	movf	??_CalcNextCnt+1,w
  4229  01F5  00A0               	movwf	___bmul@multiplicand
  4230  01F6  0849               	movf	CalcNextCnt@i,w
  4231  01F7  318F  2772  3180   	fcall	___bmul
  4232  01FA  3E02               	addlw	2
  4233  01FB  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4234  01FC  0084               	movwf	4
  4235  01FD  0185               	clrf	5
  4236  01FE  3F40               	moviw [0]fsr1
  4237  01FF  0200               	subwf	0,w
  4238  0200  00A4               	movwf	CalcTMRCnt@pulse_width
  4239  0201  3101               	addfsr 0,1
  4240  0202  3F41               	moviw [1]fsr1
  4241  0203  3B00               	subwfb	0,w
  4242  0204  00A5               	movwf	CalcTMRCnt@pulse_width+1
  4243  0205  318F  2752  3180   	fcall	_CalcTMRCnt
  4244  0208  3549               	lslf	CalcNextCnt@i,w
  4245  0209  3EA0               	addlw	(low (__TMRCnt| 0))& (0+255)
  4246  020A  0086               	movwf	6
  4247  020B  0187               	clrf	7
  4248  020C  0824               	movf	?_CalcTMRCnt,w
  4249  020D  3FC0               	movwi [0]fsr1
  4250  020E  0825               	movf	?_CalcTMRCnt+1,w
  4251  020F  3FC1               	movwi [1]fsr1
  4252  0210  3001               	movlw	1
  4253  0211  07C9               	addwf	CalcNextCnt@i,f
  4254  0212  3000               	movlw	0
  4255  0213  3DCA               	addwfc	CalcNextCnt@i+1,f
  4256  0214  29D3               	goto	l1862
  4257  0215                     l1864:	
  4258                           
  4259                           ;main.c: 165: };main.c: 166: _TMRCnt[_IntNum - 1] = CalcTMRCnt(20000 - Tmp[_IntNum - 2].
      +                          width);
  4260  0215  3005               	movlw	5
  4261  0216  0020               	movlb	0	; select bank0
  4262  0217  00AC               	movwf	??_CalcNextCnt
  4263  0218  082C               	movf	??_CalcNextCnt,w
  4264  0219  00A0               	movwf	___bmul@multiplicand
  4265  021A  0878               	movf	__IntNum,w
  4266  021B  318F  2772  3180   	fcall	___bmul
  4267  021E  3EF8               	addlw	248
  4268  021F  3E33               	addlw	(low (CalcNextCnt@Tmp| 0))& (0+255)
  4269  0220  0086               	movwf	6
  4270  0221  0187               	clrf	7
  4271  0222  3020               	movlw	32
  4272  0223  00AD               	movwf	??_CalcNextCnt+1
  4273  0224  304E               	movlw	78
  4274  0225  00AE               	movwf	??_CalcNextCnt+2
  4275  0226  3F40               	moviw [0]fsr1
  4276  0227  022D               	subwf	??_CalcNextCnt+1,w
  4277  0228  00A4               	movwf	CalcTMRCnt@pulse_width
  4278  0229  3F41               	moviw [1]fsr1
  4279  022A  3B2E               	subwfb	??_CalcNextCnt+2,w
  4280  022B  00A5               	movwf	CalcTMRCnt@pulse_width+1
  4281  022C  318F  2752         	fcall	_CalcTMRCnt
  4282  022E  3578               	lslf	__IntNum,w
  4283  022F  3E9E               	addlw	(low ((__TMRCnt| 0+254)))& (0+255)
  4284  0230  0086               	movwf	6
  4285  0231  0187               	clrf	7
  4286  0232  0824               	movf	?_CalcTMRCnt,w
  4287  0233  3FC0               	movwi [0]fsr1
  4288  0234  0825               	movf	?_CalcTMRCnt+1,w
  4289  0235  3FC1               	movwi [1]fsr1
  4290  0236  0008               	return
  4291  0237                     __end_of_CalcNextCnt:	
  4292                           
  4293                           	psect	text17
  4294  0F72                     __ptext17:	
  4295 ;; *************** function ___bmul *****************
  4296 ;; Defined at:
  4297 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  multiplier      1    wreg     unsigned char 
  4300 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  multiplier      1    3[BANK0 ] unsigned char 
  4303 ;;  product         1    2[BANK0 ] unsigned char 
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      unsigned char 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0
  4308 ;; Tracked objects:
  4309 ;;		On entry : 1E/1
  4310 ;;		On exit  : 1F/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4313 ;;      Params:         0       1       0       0
  4314 ;;      Locals:         0       2       0       0
  4315 ;;      Temps:          0       1       0       0
  4316 ;;      Totals:         0       4       0       0
  4317 ;;Total ram usage:        4 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    3
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_ReceiveTargetAngle
  4324 ;;		_SetParameter
  4325 ;;		_CalcNextCnt
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           
  4330                           ;psect for function ___bmul
  4331  0F72                     ___bmul:	
  4332                           
  4333                           ;incstack = 0
  4334                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4335                           ;___bmul@multiplier stored from wreg
  4336  0F72  0020               	movlb	0	; select bank0
  4337  0F73  00A3               	movwf	___bmul@multiplier
  4338  0F74  01A2               	clrf	___bmul@product
  4339  0F75                     l1680:	
  4340  0F75  1C23               	btfss	___bmul@multiplier,0
  4341  0F76  2F7B               	goto	l1684
  4342  0F77  0820               	movf	___bmul@multiplicand,w
  4343  0F78  00A1               	movwf	??___bmul
  4344  0F79  0821               	movf	??___bmul,w
  4345  0F7A  07A2               	addwf	___bmul@product,f
  4346  0F7B                     l1684:	
  4347  0F7B  1003               	clrc
  4348  0F7C  0DA0               	rlf	___bmul@multiplicand,f
  4349  0F7D  1003               	clrc
  4350  0F7E  0CA3               	rrf	___bmul@multiplier,f
  4351  0F7F  0823               	movf	___bmul@multiplier,w
  4352  0F80  1D03               	btfss	3,2
  4353  0F81  2F75               	goto	l1680
  4354  0F82  0822               	movf	___bmul@product,w
  4355  0F83  0008               	return
  4356  0F84                     __end_of___bmul:	
  4357                           
  4358                           	psect	text18
  4359  07B7                     __ptext18:	
  4360 ;; *************** function _Swap *****************
  4361 ;; Defined at:
  4362 ;;		line 174 in file "main.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  a               1    wreg     PTR struct .
  4365 ;;		 -> CalcNextCnt@Tmp(20), 
  4366 ;;  b               1    4[BANK0 ] PTR struct .
  4367 ;;		 -> CalcNextCnt@Tmp(20), 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  a               1   11[BANK0 ] PTR struct .
  4370 ;;		 -> CalcNextCnt@Tmp(20), 
  4371 ;;  tmp             5    6[BANK0 ] struct .
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4376 ;; Tracked objects:
  4377 ;;		On entry : 1F/0
  4378 ;;		On exit  : 1F/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4381 ;;      Params:         0       1       0       0
  4382 ;;      Locals:         0       6       0       0
  4383 ;;      Temps:          0       1       0       0
  4384 ;;      Totals:         0       8       0       0
  4385 ;;Total ram usage:        8 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    3
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_CalcNextCnt
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _Swap
  4397  07B7                     _Swap:	
  4398                           
  4399                           ;incstack = 0
  4400                           ; Regs used in _Swap: [wreg-fsr1h+status,2+status,0]
  4401                           ;Swap@a stored from wreg
  4402  07B7  00AB               	movwf	Swap@a
  4403                           
  4404                           ;main.c: 176: SERVO tmp = *a;
  4405  07B8  082B               	movf	Swap@a,w
  4406  07B9  0086               	movwf	6
  4407  07BA  0187               	clrf	7
  4408  07BB  3026               	movlw	low Swap@tmp
  4409  07BC  0084               	movwf	4
  4410  07BD  3000               	movlw	high Swap@tmp
  4411  07BE  0085               	movwf	5
  4412  07BF  3005               	movlw	5
  4413  07C0  00A5               	movwf	??_Swap
  4414  07C1                     u1690:	
  4415  07C1  0016               	moviw fsr1++
  4416  07C2  001A               	movwi fsr0++
  4417  07C3  0BA5               	decfsz	??_Swap,f
  4418  07C4  2FC1               	goto	u1690
  4419                           
  4420                           ;main.c: 177: *a = *b;
  4421  07C5  0824               	movf	Swap@b,w
  4422  07C6  0086               	movwf	6
  4423  07C7  0187               	clrf	7
  4424  07C8  082B               	movf	Swap@a,w
  4425  07C9  0084               	movwf	4
  4426  07CA  0185               	clrf	5
  4427  07CB  3005               	movlw	5
  4428  07CC  00A5               	movwf	??_Swap
  4429  07CD                     u1700:	
  4430  07CD  0016               	moviw fsr1++
  4431  07CE  001A               	movwi fsr0++
  4432  07CF  0BA5               	decfsz	??_Swap,f
  4433  07D0  2FCD               	goto	u1700
  4434                           
  4435                           ;main.c: 178: *b = tmp;
  4436  07D1  3026               	movlw	low Swap@tmp
  4437  07D2  0086               	movwf	6
  4438  07D3  3000               	movlw	high Swap@tmp
  4439  07D4  0087               	movwf	7
  4440  07D5  0824               	movf	Swap@b,w
  4441  07D6  0084               	movwf	4
  4442  07D7  0185               	clrf	5
  4443  07D8  3005               	movlw	5
  4444  07D9  00A5               	movwf	??_Swap
  4445  07DA                     u1710:	
  4446  07DA  0016               	moviw fsr1++
  4447  07DB  001A               	movwi fsr0++
  4448  07DC  0BA5               	decfsz	??_Swap,f
  4449  07DD  2FDA               	goto	u1710
  4450  07DE  0008               	return
  4451  07DF                     __end_of_Swap:	
  4452                           
  4453                           	psect	text19
  4454  0F52                     __ptext19:	
  4455 ;; *************** function _CalcTMRCnt *****************
  4456 ;; Defined at:
  4457 ;;		line 197 in file "main.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  pulse_width     2    4[BANK0 ] unsigned int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  cnt             2    8[BANK0 ] unsigned int 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2    4[BANK0 ] unsigned int 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 1F/0
  4468 ;;		On exit  : 1F/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4471 ;;      Params:         0       2       0       0
  4472 ;;      Locals:         0       2       0       0
  4473 ;;      Temps:          0       2       0       0
  4474 ;;      Totals:         0       6       0       0
  4475 ;;Total ram usage:        6 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    3
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_CalcNextCnt
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           
  4486                           ;psect for function _CalcTMRCnt
  4487  0F52                     _CalcTMRCnt:	
  4488                           
  4489                           ;main.c: 199: uint16_t cnt = (uint16_t) (65535 - 2 * pulse_width);
  4490                           
  4491                           ;incstack = 0
  4492                           ; Regs used in _CalcTMRCnt: [wreg+status,2+status,0]
  4493  0F52  0825               	movf	CalcTMRCnt@pulse_width+1,w
  4494  0F53  00A7               	movwf	??_CalcTMRCnt+1
  4495  0F54  0824               	movf	CalcTMRCnt@pulse_width,w
  4496  0F55  00A6               	movwf	??_CalcTMRCnt
  4497  0F56  35A6               	lslf	??_CalcTMRCnt,f
  4498  0F57  0DA7               	rlf	??_CalcTMRCnt+1,f
  4499  0F58  0926               	comf	??_CalcTMRCnt,w
  4500  0F59  00A8               	movwf	CalcTMRCnt@cnt
  4501  0F5A  0927               	comf	??_CalcTMRCnt+1,w
  4502  0F5B  00A9               	movwf	CalcTMRCnt@cnt+1
  4503                           
  4504                           ;main.c: 200: return cnt;
  4505  0F5C  0829               	movf	CalcTMRCnt@cnt+1,w
  4506  0F5D  00A5               	movwf	?_CalcTMRCnt+1
  4507  0F5E  0828               	movf	CalcTMRCnt@cnt,w
  4508  0F5F  00A4               	movwf	?_CalcTMRCnt
  4509  0F60  0008               	return
  4510  0F61                     __end_of_CalcTMRCnt:	
  4511                           
  4512                           	psect	intentry
  4513  0004                     __pintentry:	
  4514 ;; *************** function _INTERRUPT_HANDLER *****************
  4515 ;; Defined at:
  4516 ;;		line 208 in file "main.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4530 ;;      Params:         0       0       0       0
  4531 ;;      Locals:         0       0       0       0
  4532 ;;      Temps:          2       0       0       0
  4533 ;;      Totals:         2       0       0       0
  4534 ;;Total ram usage:        2 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    2
  4537 ;; This function calls:
  4538 ;;		_Interrupt_TMR1
  4539 ;;		_Interrupt_TX
  4540 ;; This function is called by:
  4541 ;;		Interrupt level 1
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545  0004                     _INTERRUPT_HANDLER:	
  4546                           
  4547                           ;incstack = 0
  4548  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4549                           
  4550                           ; Regs used in _INTERRUPT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4551  0005  3180               	pagesel	$
  4552                           
  4553                           ;main.c: 210: if (INTCONbits.PEIE & PIE1bits.TMR1IE & PIR1bits.TMR1IF)
  4554  0006  0020               	movlb	0	; select bank0
  4555  0007  0811               	movf	17,w	;volatile
  4556  0008  3901               	andlw	1
  4557  0009  00F4               	movwf	??_INTERRUPT_HANDLER
  4558  000A  0021               	movlb	1	; select bank1
  4559  000B  0811               	movf	17,w	;volatile
  4560  000C  3901               	andlw	1
  4561  000D  00F5               	movwf	??_INTERRUPT_HANDLER+1
  4562  000E  0E0B               	swapf	11,w	;volatile
  4563  000F  0C89               	rrf	9,f
  4564  0010  0C89               	rrf	9,f
  4565  0011  3901               	andlw	1
  4566  0012  0575               	andwf	??_INTERRUPT_HANDLER+1,w
  4567  0013  0574               	andwf	??_INTERRUPT_HANDLER,w
  4568  0014  1903               	btfsc	3,2
  4569  0015  281C               	goto	i1l1916
  4570                           
  4571                           ;main.c: 211: {;main.c: 212: TMR1IF = 0;
  4572  0016  0020               	movlb	0	; select bank0
  4573  0017  1011               	bcf	17,0	;volatile
  4574                           
  4575                           ;main.c: 213: Interrupt_TMR1();
  4576  0018  3187  2786  3180   	fcall	_Interrupt_TMR1
  4577                           
  4578                           ;main.c: 214: }
  4579  001B  2830               	goto	i1l123
  4580  001C                     i1l1916:	
  4581                           
  4582                           ;main.c: 215: else if (INTCONbits.PEIE & PIE1bits.TXIE & PIR1bits.TXIF)
  4583  001C  0020               	movlb	0	; select bank0
  4584  001D  0E11               	swapf	17,w	;volatile
  4585  001E  3901               	andlw	1
  4586  001F  00F4               	movwf	??_INTERRUPT_HANDLER
  4587  0020  0021               	movlb	1	; select bank1
  4588  0021  0E11               	swapf	17,w	;volatile
  4589  0022  3901               	andlw	1
  4590  0023  00F5               	movwf	??_INTERRUPT_HANDLER+1
  4591  0024  0E0B               	swapf	11,w	;volatile
  4592  0025  0C89               	rrf	9,f
  4593  0026  0C89               	rrf	9,f
  4594  0027  3901               	andlw	1
  4595  0028  0575               	andwf	??_INTERRUPT_HANDLER+1,w
  4596  0029  0574               	andwf	??_INTERRUPT_HANDLER,w
  4597  002A  1903               	btfsc	3,2
  4598  002B  2830               	goto	i1l123
  4599                           
  4600                           ;main.c: 216: {;main.c: 217: TXIF = 0;
  4601  002C  0020               	movlb	0	; select bank0
  4602  002D  1211               	bcf	17,4	;volatile
  4603                           
  4604                           ;main.c: 218: Interrupt_TX();
  4605  002E  318F  279D         	fcall	_Interrupt_TX
  4606  0030                     i1l123:	
  4607  0030  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4608  0031  0009               	retfie
  4609  0032                     __end_of_INTERRUPT_HANDLER:	
  4610                           
  4611                           	psect	text21
  4612  0F9D                     __ptext21:	
  4613 ;; *************** function _Interrupt_TX *****************
  4614 ;; Defined at:
  4615 ;;		line 33 in file "Interrupt.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 1F/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4629 ;;      Params:         0       0       0       0
  4630 ;;      Locals:         0       0       0       0
  4631 ;;      Temps:          1       0       0       0
  4632 ;;      Totals:         1       0       0       0
  4633 ;;Total ram usage:        1 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_INTERRUPT_HANDLER
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           
  4643                           ;psect for function _Interrupt_TX
  4644  0F9D                     _Interrupt_TX:	
  4645                           
  4646                           ;Interrupt.c: 35: static int cnt = 0;;Interrupt.c: 37: TXREG = _DebugTxData[cnt];
  4647                           
  4648                           ;incstack = 0
  4649                           ; Regs used in _Interrupt_TX: [wreg+fsr1l+fsr1h+status,2+status,0]
  4650  0F9D  0021               	movlb	1	; select bank1
  4651  0F9E  083F               	movf	Interrupt_TX@cnt^(0+128),w
  4652  0F9F  3EB2               	addlw	(low (__DebugTxData| 0))& (0+255)
  4653  0FA0  0086               	movwf	6
  4654  0FA1  0187               	clrf	7
  4655  0FA2  0801               	movf	1,w
  4656  0FA3  0023               	movlb	3	; select bank3
  4657  0FA4  009A               	movwf	26	;volatile
  4658                           
  4659                           ;Interrupt.c: 39: cnt++;
  4660  0FA5  3001               	movlw	1
  4661  0FA6  0021               	movlb	1	; select bank1
  4662  0FA7  07BF               	addwf	Interrupt_TX@cnt^(0+128),f
  4663  0FA8  3000               	movlw	0
  4664  0FA9  3DC0               	addwfc	(Interrupt_TX@cnt+1)^(0+128),f
  4665                           
  4666                           ;Interrupt.c: 40: if (cnt >= 5)
  4667  0FAA  0840               	movf	(Interrupt_TX@cnt+1)^(0+128),w
  4668  0FAB  3A80               	xorlw	128
  4669  0FAC  00F0               	movwf	??_Interrupt_TX
  4670  0FAD  3080               	movlw	128
  4671  0FAE  0270               	subwf	??_Interrupt_TX,w
  4672  0FAF  1D03               	skipz
  4673  0FB0  2FB3               	goto	u211_25
  4674  0FB1  3005               	movlw	5
  4675  0FB2  023F               	subwf	Interrupt_TX@cnt^(0+128),w
  4676  0FB3                     u211_25:	
  4677  0FB3  1C03               	skipc
  4678  0FB4  0008               	return
  4679                           
  4680                           ;Interrupt.c: 41: {;Interrupt.c: 42: cnt = 0;
  4681  0FB5  0021               	movlb	1	; select bank1
  4682  0FB6  01BF               	clrf	Interrupt_TX@cnt^(0+128)
  4683  0FB7  01C0               	clrf	(Interrupt_TX@cnt+1)^(0+128)
  4684  0FB8  0008               	return
  4685  0FB9                     __end_of_Interrupt_TX:	
  4686                           
  4687                           	psect	text22
  4688  0786                     __ptext22:	
  4689 ;; *************** function _Interrupt_TMR1 *****************
  4690 ;; Defined at:
  4691 ;;		line 9 in file "Interrupt.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 1F/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4705 ;;      Params:         0       0       0       0
  4706 ;;      Locals:         0       0       0       0
  4707 ;;      Temps:          1       0       0       0
  4708 ;;      Totals:         1       0       0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    1
  4712 ;; This function calls:
  4713 ;;		i1_Output
  4714 ;; This function is called by:
  4715 ;;		_INTERRUPT_HANDLER
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _Interrupt_TMR1
  4721  0786                     _Interrupt_TMR1:	
  4722                           
  4723                           ;Interrupt.c: 11: static int IntCnt = 0;;Interrupt.c: 13: TMR1 = _TMRCnt[IntCnt];
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in _Interrupt_TMR1: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4727  0786  3576               	lslf	Interrupt_TMR1@IntCnt,w
  4728  0787  3EA0               	addlw	(low (__TMRCnt| 0))& (0+255)
  4729  0788  0086               	movwf	6
  4730  0789  0187               	clrf	7
  4731  078A  3F40               	moviw [0]fsr1
  4732  078B  0096               	movwf	22	;volatile
  4733  078C  3F41               	moviw [1]fsr1
  4734  078D  0097               	movwf	23	;volatile
  4735                           
  4736                           ;Interrupt.c: 15: if (IntCnt == 0)
  4737  078E  0876               	movf	Interrupt_TMR1@IntCnt,w
  4738  078F  0477               	iorwf	Interrupt_TMR1@IntCnt+1,w
  4739  0790  1D03               	btfss	3,2
  4740  0791  2F99               	goto	i1l1874
  4741                           
  4742                           ;Interrupt.c: 16: {;Interrupt.c: 17: _isBusy = 1;
  4743  0792  0021               	movlb	1	; select bank1
  4744  0793  01C1               	clrf	__isBusy^(0+128)
  4745  0794  0AC1               	incf	__isBusy^(0+128),f
  4746                           
  4747                           ;Interrupt.c: 18: Output(0b1111, 1);
  4748  0795  01F0               	clrf	i1Output@value
  4749  0796  0AF0               	incf	i1Output@value,f
  4750  0797  300F               	movlw	15
  4751  0798  2F9F               	goto	L1
  4752  0799                     i1l1874:	
  4753                           ;Interrupt.c: 19: }
  4754                           
  4755                           
  4756                           ;Interrupt.c: 20: else;Interrupt.c: 21: {;Interrupt.c: 22: Output(_CHq[IntCnt - 1], 0);
  4757  0799  01F0               	clrf	i1Output@value
  4758  079A  0876               	movf	Interrupt_TMR1@IntCnt,w
  4759  079B  3EBA               	addlw	(low ((__CHq| 0+255)))& (0+255)
  4760  079C  0086               	movwf	6
  4761  079D  0187               	clrf	7
  4762  079E  0801               	movf	1,w
  4763  079F                     L1:	
  4764  079F  3187  274A  3187   	fcall	i1_Output
  4765                           
  4766                           ;Interrupt.c: 23: };Interrupt.c: 25: IntCnt++;
  4767  07A2  3001               	movlw	1
  4768  07A3  07F6               	addwf	Interrupt_TMR1@IntCnt,f
  4769  07A4  3000               	movlw	0
  4770  07A5  3DF7               	addwfc	Interrupt_TMR1@IntCnt+1,f
  4771                           
  4772                           ;Interrupt.c: 26: if (IntCnt >= _IntNum)
  4773  07A6  0877               	movf	Interrupt_TMR1@IntCnt+1,w
  4774  07A7  3A80               	xorlw	128
  4775  07A8  00F3               	movwf	??_Interrupt_TMR1
  4776  07A9  0879               	movf	__IntNum+1,w
  4777  07AA  3A80               	xorlw	128
  4778  07AB  0273               	subwf	??_Interrupt_TMR1,w
  4779  07AC  1D03               	skipz
  4780  07AD  2FB0               	goto	u210_25
  4781  07AE  0878               	movf	__IntNum,w
  4782  07AF  0276               	subwf	Interrupt_TMR1@IntCnt,w
  4783  07B0                     u210_25:	
  4784  07B0  1C03               	skipc
  4785  07B1  0008               	return
  4786                           
  4787                           ;Interrupt.c: 27: {;Interrupt.c: 28: _isBusy = 0;
  4788  07B2  0021               	movlb	1	; select bank1
  4789  07B3  01C1               	clrf	__isBusy^(0+128)
  4790                           
  4791                           ;Interrupt.c: 29: IntCnt = 0;
  4792  07B4  01F6               	clrf	Interrupt_TMR1@IntCnt
  4793  07B5  01F7               	clrf	Interrupt_TMR1@IntCnt+1
  4794  07B6  0008               	return
  4795  07B7                     __end_of_Interrupt_TMR1:	
  4796                           
  4797                           	psect	text23
  4798  074A                     __ptext23:	
  4799 ;; *************** function i1_Output *****************
  4800 ;; Defined at:
  4801 ;;		line 13 in file "ShareFunc.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  ch              1    wreg     unsigned char 
  4804 ;;  value           1    0[COMMON] unsigned char 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  ch              1    2[COMMON] unsigned char 
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4811 ;; Tracked objects:
  4812 ;;		On entry : 1E/1
  4813 ;;		On exit  : 1C/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4816 ;;      Params:         1       0       0       0
  4817 ;;      Locals:         1       0       0       0
  4818 ;;      Temps:          1       0       0       0
  4819 ;;      Totals:         3       0       0       0
  4820 ;;Total ram usage:        3 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_Interrupt_TMR1
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           
  4830                           ;psect for function i1_Output
  4831  074A                     i1_Output:	
  4832                           
  4833                           ;incstack = 0
  4834                           ; Regs used in i1_Output: [wreg-fsr0h+status,2+status,0+pclath]
  4835                           ;i1Output@ch stored from wreg
  4836  074A  00F2               	movwf	i1Output@ch
  4837                           
  4838                           ;ShareFunc.c: 15: if (ch & _CHs[0]) LATCbits.LATC3 = value;
  4839  074B  30FF               	movlw	low (__CHs| (0+32768))
  4840  074C  0084               	movwf	4
  4841  074D  3087               	movlw	high (__CHs| (0+32768))
  4842  074E  0085               	movwf	5
  4843  074F  0800               	movf	0,w	;code access
  4844  0750  00F1               	movwf	??i1_Output
  4845  0751  0872               	movf	i1Output@ch,w
  4846  0752  0571               	andwf	??i1_Output,w
  4847  0753  1903               	btfsc	3,2
  4848  0754  2F5B               	goto	i1l1696
  4849  0755  0C70               	rrf	i1Output@value,w
  4850  0756  0022               	movlb	2	; select bank2
  4851  0757  1C03               	skipc
  4852  0758  118E               	bcf	14,3	;volatile
  4853  0759  1803               	skipnc
  4854  075A  158E               	bsf	14,3	;volatile
  4855  075B                     i1l1696:	
  4856                           
  4857                           ;ShareFunc.c: 16: if (ch & _CHs[1]) LATCbits.LATC6 = value;
  4858  075B  3000               	movlw	low ((__CHs+1)| (0+32768))
  4859  075C  0084               	movwf	4
  4860  075D  3088               	movlw	high ((__CHs+1)| (0+32768))
  4861  075E  0085               	movwf	5
  4862  075F  0800               	movf	0,w	;code access
  4863  0760  0572               	andwf	i1Output@ch,w
  4864  0761  1903               	btfsc	3,2
  4865  0762  2F69               	goto	i1l1700
  4866  0763  0C70               	rrf	i1Output@value,w
  4867  0764  0022               	movlb	2	; select bank2
  4868  0765  1C03               	skipc
  4869  0766  130E               	bcf	14,6	;volatile
  4870  0767  1803               	skipnc
  4871  0768  170E               	bsf	14,6	;volatile
  4872  0769                     i1l1700:	
  4873                           
  4874                           ;ShareFunc.c: 17: if (ch & _CHs[2]) LATCbits.LATC5 = value;
  4875  0769  3001               	movlw	low ((__CHs+2)| (0+32768))
  4876  076A  0084               	movwf	4
  4877  076B  3088               	movlw	high ((__CHs+2)| (0+32768))
  4878  076C  0085               	movwf	5
  4879  076D  0800               	movf	0,w	;code access
  4880  076E  0572               	andwf	i1Output@ch,w
  4881  076F  1903               	btfsc	3,2
  4882  0770  2F77               	goto	i1l1704
  4883  0771  0C70               	rrf	i1Output@value,w
  4884  0772  0022               	movlb	2	; select bank2
  4885  0773  1C03               	skipc
  4886  0774  128E               	bcf	14,5	;volatile
  4887  0775  1803               	skipnc
  4888  0776  168E               	bsf	14,5	;volatile
  4889  0777                     i1l1704:	
  4890                           
  4891                           ;ShareFunc.c: 18: if (ch & _CHs[3]) LATCbits.LATC4 = value;
  4892  0777  3002               	movlw	low ((__CHs+3)| (0+32768))
  4893  0778  0084               	movwf	4
  4894  0779  3088               	movlw	high ((__CHs+3)| (0+32768))
  4895  077A  0085               	movwf	5
  4896  077B  0800               	movf	0,w	;code access
  4897  077C  0572               	andwf	i1Output@ch,w
  4898  077D  1903               	btfsc	3,2
  4899  077E  0008               	return
  4900  077F  0C70               	rrf	i1Output@value,w
  4901  0780  0022               	movlb	2	; select bank2
  4902  0781  1C03               	skipc
  4903  0782  120E               	bcf	14,4	;volatile
  4904  0783  1803               	skipnc
  4905  0784  160E               	bsf	14,4	;volatile
  4906  0785  0008               	return
  4907  0786                     __end_ofi1_Output:	
  4908  007E                     btemp	set	126	;btemp
  4909  007E                     int$flags	set	126
  4910  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        33
    BSS         54
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     80      80
    BANK1            80     34      69
    BANK2            80      0      48

Pointer List with Targets:

    Swap@b	PTR struct . size(1) Largest target is 20
		 -> CalcNextCnt@Tmp(BANK0[20]), 

    Swap@a	PTR struct . size(1) Largest target is 20
		 -> CalcNextCnt@Tmp(BANK0[20]), 

    CalcNextCnt@Servo	PTR struct . size(1) Largest target is 20
		 -> main@Servo(BANK1[20]), 

    SetParameter@Servo	PTR struct . size(1) Largest target is 20
		 -> main@Servo(BANK1[20]), 

    ReceiveTargetAngle@Servo	PTR struct . size(1) Largest target is 20
		 -> main@Servo(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _INTERRUPT_HANDLER->_Interrupt_TMR1
    _Interrupt_TMR1->i1_Output

Critical Paths under _main in BANK0

    _SetParameter->_CalcWidth
    _CalcWidth->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _ReceiveTargetAngle->___bmul
    _CalcNextCnt->_Swap
    _Swap->___bmul
    _CalcTMRCnt->___bmul

Critical Paths under _INTERRUPT_HANDLER in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetParameter

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   19624
                                             13 BANK1     21    21      0
                        _CalcNextCnt
                               _Init
                             _Output
                 _ReceiveTargetAngle
                       _SetParameter
 ---------------------------------------------------------------------------------
 (1) _SetParameter                                        13    13      0   15781
                                              0 BANK1     13    13      0
                          _CalcWidth
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _CalcWidth                                            7     3      4   14744
                                             73 BANK0      7     3      4
                           ___awtoft
                             ___bmul (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             8     5      3    2437
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             59 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2871
                                             30 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2825
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3485
                                             46 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2634
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2415
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReceiveTargetAngle                                  26    26      0    1111
                                              4 BANK0     26    26      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _Output                                               3     2      1     316
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                            _InitOsc
                            _InitPin
                            _InitTmr
 ---------------------------------------------------------------------------------
 (2) _InitTmr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPin                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcNextCnt                                         31    31      0    2259
                                             12 BANK0     31    31      0
                         _CalcTMRCnt
                               _Swap
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     672
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Swap                                                 8     7      1     205
                                              4 BANK0      8     7      1
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _CalcTMRCnt                                           6     4      2     237
                                              4 BANK0      6     4      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_HANDLER                                    2     2      0     228
                                              4 COMMON     2     2      0
                     _Interrupt_TMR1
                       _Interrupt_TX
 ---------------------------------------------------------------------------------
 (6) _Interrupt_TX                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Interrupt_TMR1                                       1     1      0     228
                                              3 COMMON     1     1      0
                           i1_Output
 ---------------------------------------------------------------------------------
 (7) i1_Output                                             3     2      1     228
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcNextCnt
     _CalcTMRCnt
       ___bmul (ARG)
     _Swap
       ___bmul (ARG)
     ___bmul
   _Init
     _InitOsc
     _InitPin
     _InitTmr
   _Output
   _ReceiveTargetAngle
     ___bmul
   _SetParameter
     _CalcWidth
       ___awtoft
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___bmul

 _INTERRUPT_HANDLER (ROOT)
   _Interrupt_TMR1
     i1_Output
   _Interrupt_TX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CF       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     22      45       8       86.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      30      10       60.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      CF      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 08 17:02:26 2019

                 _CalcTMRCnt 0F52               ___bmul@product 0022                  __CFG_CP$OFF 0000  
                 i1Output@ch 0072                 ___ftadd@exp1 005A                 ___ftadd@exp2 0059  
               ___ftadd@sign 0058                          l600 0698                          l601 06A0  
                        l624 02D5                          l593 0685                          l684 062F  
               __CFG_CPD$OFF 0000                 __CFG_BORV$HI 0000                          wreg 0009  
                _CalcNextCnt 005C                 __CFG_LVP$OFF 0000                 ___ftdiv@cntr 0038  
                main@isFirst 00E3                 ___ftdiv@sign 003D                         l1500 057B  
                       l1414 0FC3                         l1424 025E                         l1434 0274  
                       l1522 05BD                         l1610 061D                         l1452 02A1  
                       l1428 0265                         l1516 05A4                         l1620 063C  
                       l1612 062B                         l1382 0662                         l1470 02E7  
                       l1454 02AB                         l1446 028E                         l1542 04E1  
                       l1384 066C                         l1464 02C7                         l1456 02B0  
                       l1560 0504                         l1536 04CB                         l1624 064A  
                       l1802 0091                         l1722 072B                         l1394 0696  
                       l1386 0671                         l1378 065B                         l1474 02F9  
                       l1466 02D1                         l1458 02B4                         l1820 0115  
                       l1804 0098                         l1396 068A                         l1484 0314  
                       l1572 0520                         l1564 050C                         l1726 073A  
                       l1718 071C                         l1494 0565                         l1680 0F75  
                       l1840 0188                         l1832 0138                         l1816 0110  
                       l1744 03A8                         l1736 0335                         l1576 0528  
                       l1592 05F6                         l1738 03A6                         l1684 0F7B  
                       l1836 0179                         l1828 0128                         l1748 03D6  
                       l1588 05ED                         l1772 0444                         l1940 0FF9  
                       l1862 01D3                         l1790 0060                         l1766 0401  
                       l1864 0215                         l1848 019B                         l1928 0FE4  
                       l1778 0447                         u1115 0680                         u2005 00CA  
                       u1135 0691                         u2025 0123                         u2035 0136  
                       u2045 015F                         u1325 02A2                         u2055 0186  
                       u1175 06A7                         u1095 0667                         u2065 0196  
                       u2075 01BD                         u1355 02B5                         u1700 07CD  
                       u2085 01E3                         u1525 050D                         u1605 05FD  
                       u1710 07DA                         u1295 028F                         u1455 05A5  
                       u1535 0513                         u1385 02C8                         u1465 05B4  
                       u1475 05BE                         u1635 061E                         u1565 0529  
                       u1575 052F                         u1825 0364                         u1665 0633  
                       u1690 07C1                         u1835 0371                         u1915 0405  
                       u1845 0379                         u1925 040E                         u1855 0390  
                       u1935 0424                         u1865 0398                         u1945 0442  
                       u1970 007B                         u1955 045C                         u1885 03BF  
                       u1965 04B2                         u1895 03EF                         u1985 008C  
                       u1995 00A1                         _TMR1 0016                         _TXIF 008C  
                       __CHq 00BB                         __CHs 07FF                         _Init 0F3B  
               __CFG_WRT$OFF 0000                         _Swap 07B7                         _main 0FD9  
               ___ftpack@arg 0020                 ___ftpack@exp 0023          SetParameter@isFirst 00E4  
                       fsr0h 0005                         fsr1h 0007                         indf0 0000  
                       fsr0l 0004                         indf1 0001                         fsr1l 0006  
                       btemp 007E               CalcNextCnt@Tmp 0033                         start 0032  
              __CFG_IESO$OFF 0000            ___bmul@multiplier 0023                 ___ftmul@cntr 004C  
               ___ftmul@sign 004D              __end_of_InitPin 0F72              __end_of_InitOsc 0F3B  
            __end_of_InitTmr 0F52                 ___fttol@exp1 0068                 ___fttol@lval 0064  
                      ?_Init 0070                        ?_Swap 0024                        ?_main 0070  
            __end_of___ftadd 032B                __CFG_WDTE$OFF 0000              __end_of___ftdiv 05DE  
            __end_of___ftmul 054F              __end_of___fttol 0653                        i1l123 0030  
                      _PORTA 000C                        _PORTB 000D                        _TRISA 008C  
                      _TRISB 008D                SetParameter@i 00CD                        _TXREG 019A  
             __CFG_FCMEN$OFF 0000                        Swap@a 002B                        Swap@b 0024  
              ___awtoft@sign 002D                ___ftpack@sign 0024                i1Output@value 0070  
      SetParameter@Parameter 0140             __end_ofi1_Output 0786               __CFG_BOREN$OFF 0000  
                      status 0003                        wtemp0 007E         Interrupt_TMR1@IntCnt 0076  
         __size_of_CalcWidth 0054               __CFG_MCLRE$OFF 0000                 __end_of__CHs 0803  
            __initialization 0034                 __end_of_Init 0F46                 __end_of_Swap 07DF  
               __end_of_main 1000                  ?_CalcTMRCnt 0024                       ??_Init 0020  
                     ??_Swap 0025                       ??_main 0070                ___fttol@sign1 0063  
             __CFG_PLLEN$OFF 0000               CalcWidth@angle 006F             __end_of___awtoft 0FD9  
                     _ANSELA 018C                       _ANSELB 018D             __end_of___ftpack 06B7  
           __end_of___lbtoft 0F9D               CalcWidth@width 006D                       i1l1700 0769  
                     i1l1704 0777                       i1l1916 001C                       u210_25 07B0  
                     i1l1696 075B                       i1l1874 0799                       u211_25 0FB3  
                     _TMR1IF 0088                       _TMR1ON 00C0                ?_Interrupt_TX 0070  
                  ??_InitPin 0020                    ??_InitOsc 0020                    ??_InitTmr 0020  
             __CFG_PWRTE$OFF 0000                       ___bmul 0F72                       _Output 070B  
                  ??___ftadd 0054                    ??___ftdiv 0034                    ??___ftmul 0044  
                  ??___fttol 005F        ___ftmul@f3_as_product 0049             CalcNextCnt@Servo 0032  
          __end_of_CalcWidth 070B                ?_SetParameter 0070          __size_of_CalcTMRCnt 000F  
 __end_of_ReceiveTargetAngle 03F2               ??_Interrupt_TX 0070      __end_of__initialization 0058  
                 ___ftadd@f1 004E                   ___ftadd@f2 0051                   ___ftdiv@f1 0031  
                 ___ftdiv@f2 002E                   ___ftdiv@f3 0039                   ___awtoft@c 0028  
                 ___lbtoft@c 002F          ___bmul@multiplicand 0020                 CalcNextCnt@i 0049  
               CalcNextCnt@j 0047                   ___ftmul@f1 003E                   ___ftmul@f2 0041  
                 ___fttol@f1 005B               __pcstackCOMMON 0070                 __pidataBANK1 0003  
               __pidataBANK2 07DF                    ?i1_Output 0070                 ?_CalcNextCnt 0070  
             ??_SetParameter 00C2                   __pbssBANK1 00A0                   __pbssBANK2 0140  
            __CFG_VCAPEN$OFF 0000                   __pmaintext 0FD9                      ?___bmul 0020  
                    ?_Output 0020                   __pintentry 0004                    ?___awtoft 0028  
                  ?___ftpack 0020                    ?___lbtoft 0028                   ??i1_Output 0071  
              CalcTMRCnt@cnt 0028                  __Parameters 0120                      __TMRCnt 00A0  
                    _InitPin 0F61                      _InitOsc 0F34                      _InitTmr 0F46  
                    __IntNum 0078                 ??_CalcTMRCnt 0026                      Swap@tmp 0026  
            __size_of___bmul 0012              __size_of_Output 003F                      ___ftadd 0237  
                    ___ftdiv 054F                      ___ftmul 04B5                      ___fttol 05DE  
                    __isBusy 00C1              __CFG_STVREN$OFF 0000                   ??___awtoft 002B  
                 ??___ftpack 0025                   ??___lbtoft 002B                      __ptext1 03F2  
                    __ptext2 06B7                      __ptext3 0F84                      __ptext4 05DE  
                    __ptext5 04B5                      __ptext6 054F                      __ptext7 0237  
                    __ptext8 0FB9                      __ptext9 0653         __end_of_Interrupt_TX 0FB9  
          _INTERRUPT_HANDLER 0004                    _T1CONbits 0018      __size_of_Interrupt_TMR1 0031  
         ?_INTERRUPT_HANDLER 0070          ReceiveTargetAngle@i 003C                      clrloop0 0F29  
       end_of_initialization 0058          ??_INTERRUPT_HANDLER 0074           __end_of_CalcTMRCnt 0F61  
                    init_ram 0F2E                      initloop 0F2F         __end_of_SetParameter 04B5  
  __end_of_INTERRUPT_HANDLER 0032                    _PORTCbits 000E             __CFG_FOSC$INTOSC 0000  
                  _TRISCbits 008E         __size_of_CalcNextCnt 01DB            SetParameter@Servo 00CC  
                  _CalcWidth 06B7                  ___ftdiv@exp 003C                 __DebugTxData 00B2  
                ___ftmul@exp 0048           _ReceiveTargetAngle 032B               __end_of___bmul 0F84  
             __end_of_Output 074A          ?_ReceiveTargetAngle 0070            __size_ofi1_Output 003C  
        start_initialization 0034              Interrupt_TX@cnt 00BF                  Output@value 0020  
                 ?_CalcWidth 0069         ??_ReceiveTargetAngle 0024                     ??___bmul 0021  
                   ??_Output 0021        __size_of_Interrupt_TX 001C                  __pdataBANK1 00E4  
                __pdataBANK2 0120   __size_of_INTERRUPT_HANDLER 002E               _Interrupt_TMR1 0786  
          __size_of___awtoft 0020            __size_of___ftpack 0064            __size_of___lbtoft 0019  
                __pbssCOMMON 0076                    ___latbits 0001                __pcstackBANK0 0020  
              __pcstackBANK1 00C2                 _Interrupt_TX 0F9D        __size_of_SetParameter 00C3  
                   ?_InitPin 0070                     ?_InitOsc 0070                     ?_InitTmr 0070  
                   ?___ftadd 004E                     ?___ftdiv 002E                     ?___ftmul 003E  
                   ?___fttol 005B       __end_of_Interrupt_TMR1 07B7           CalcWidth@Parameter 0069  
               _SetParameter 03F2                  ??_CalcWidth 006D                     _LATCbits 010E  
                  clear_ram0 0F28                     _PIE1bits 0091                     _PIR1bits 0011  
            ?_Interrupt_TMR1 0070                     i1_Output 074A             SetParameter@Mode 00CB  
                  main@Servo 00CF             __size_of_InitPin 0011             __size_of_InitOsc 0007  
           __size_of_InitTmr 000C             __size_of___ftadd 00F4             __size_of___ftdiv 008F  
           __size_of___ftmul 009A             __size_of___fttol 0075                     ___awtoft 0FB9  
                   ___ftpack 0653                     ___lbtoft 0F84                     Output@ch 0022  
              ??_CalcNextCnt 002C  ReceiveTargetAngle@angle_buf 002F                     __ptext10 032B  
                   __ptext11 070B                     __ptext12 0F3B                     __ptext21 0F9D  
                   __ptext13 0F46                     __ptext22 0786                     __ptext14 0F61  
                   __ptext23 074A                     __ptext15 0F34                     __ptext16 005C  
                   __ptext17 0F72                     __ptext18 07B7                     __ptext19 0F52  
              __size_of_Init 000B                __size_of_Swap 0028                __size_of_main 0027  
      CalcTMRCnt@pulse_width 0024         ReceiveTargetAngle@rx 0037                     int$flags 007E  
ReceiveTargetAngle@pre_angle 00AA                   _INTCONbits 000B      ReceiveTargetAngle@F2792 00B7  
                   intlevel1 0000          __end_of_CalcNextCnt 0237  __size_of_ReceiveTargetAngle 00C7  
          __CFG_CLKOUTEN$OFF 0000      ReceiveTargetAngle@Servo 003B                   _OSCCONbits 0099  
              __pstringtext1 07FF             ??_Interrupt_TMR1 0073  
