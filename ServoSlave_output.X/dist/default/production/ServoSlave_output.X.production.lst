

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Aug 19 16:51:39 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.00
    28                           ; Generated 27/05/2018 GMT
    29                           ; 
    30                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1933 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  0110                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0191                     	;# 
   128  0191                     	;# 
   129  0192                     	;# 
   130  0193                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0194                     	;# 
   134  0195                     	;# 
   135  0196                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019B                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019C                     	;# 
   143  019C                     	;# 
   144  019D                     	;# 
   145  019E                     	;# 
   146  019F                     	;# 
   147  020D                     	;# 
   148  0210                     	;# 
   149  0211                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0214                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0298                     	;# 
   166  0298                     	;# 
   167  0299                     	;# 
   168  029A                     	;# 
   169  029B                     	;# 
   170  029C                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  029F                     	;# 
   175  0311                     	;# 
   176  0311                     	;# 
   177  0312                     	;# 
   178  0313                     	;# 
   179  0314                     	;# 
   180  0315                     	;# 
   181  0315                     	;# 
   182  0316                     	;# 
   183  0318                     	;# 
   184  0318                     	;# 
   185  0319                     	;# 
   186  031A                     	;# 
   187  031C                     	;# 
   188  031C                     	;# 
   189  031D                     	;# 
   190  031E                     	;# 
   191  0394                     	;# 
   192  0395                     	;# 
   193  0396                     	;# 
   194  0415                     	;# 
   195  0416                     	;# 
   196  0417                     	;# 
   197  041C                     	;# 
   198  041D                     	;# 
   199  041E                     	;# 
   200  0791                     	;# 
   201  0792                     	;# 
   202  0793                     	;# 
   203  0794                     	;# 
   204  0795                     	;# 
   205  0798                     	;# 
   206  0799                     	;# 
   207  07A0                     	;# 
   208  07A1                     	;# 
   209  07A3                     	;# 
   210  07A4                     	;# 
   211  07A6                     	;# 
   212  07A7                     	;# 
   213  07A9                     	;# 
   214  07AA                     	;# 
   215  0FE4                     	;# 
   216  0FE5                     	;# 
   217  0FE6                     	;# 
   218  0FE7                     	;# 
   219  0FE8                     	;# 
   220  0FE9                     	;# 
   221  0FEA                     	;# 
   222  0FEB                     	;# 
   223  0FED                     	;# 
   224  0FEE                     	;# 
   225  0FEF                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  0110                     	;# 
   278  0111                     	;# 
   279  0112                     	;# 
   280  0113                     	;# 
   281  0114                     	;# 
   282  0115                     	;# 
   283  0116                     	;# 
   284  0117                     	;# 
   285  0118                     	;# 
   286  0119                     	;# 
   287  011A                     	;# 
   288  011B                     	;# 
   289  011D                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0191                     	;# 
   293  0191                     	;# 
   294  0192                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0193                     	;# 
   298  0194                     	;# 
   299  0195                     	;# 
   300  0196                     	;# 
   301  0199                     	;# 
   302  019A                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019C                     	;# 
   308  019C                     	;# 
   309  019D                     	;# 
   310  019E                     	;# 
   311  019F                     	;# 
   312  020D                     	;# 
   313  0210                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0213                     	;# 
   317  0214                     	;# 
   318  0215                     	;# 
   319  0215                     	;# 
   320  0216                     	;# 
   321  0217                     	;# 
   322  0291                     	;# 
   323  0291                     	;# 
   324  0292                     	;# 
   325  0293                     	;# 
   326  0294                     	;# 
   327  0295                     	;# 
   328  0295                     	;# 
   329  0296                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  029A                     	;# 
   334  029B                     	;# 
   335  029C                     	;# 
   336  029C                     	;# 
   337  029D                     	;# 
   338  029E                     	;# 
   339  029F                     	;# 
   340  0311                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0314                     	;# 
   345  0315                     	;# 
   346  0315                     	;# 
   347  0316                     	;# 
   348  0318                     	;# 
   349  0318                     	;# 
   350  0319                     	;# 
   351  031A                     	;# 
   352  031C                     	;# 
   353  031C                     	;# 
   354  031D                     	;# 
   355  031E                     	;# 
   356  0394                     	;# 
   357  0395                     	;# 
   358  0396                     	;# 
   359  0415                     	;# 
   360  0416                     	;# 
   361  0417                     	;# 
   362  041C                     	;# 
   363  041D                     	;# 
   364  041E                     	;# 
   365  0791                     	;# 
   366  0792                     	;# 
   367  0793                     	;# 
   368  0794                     	;# 
   369  0795                     	;# 
   370  0798                     	;# 
   371  0799                     	;# 
   372  07A0                     	;# 
   373  07A1                     	;# 
   374  07A3                     	;# 
   375  07A4                     	;# 
   376  07A6                     	;# 
   377  07A7                     	;# 
   378  07A9                     	;# 
   379  07AA                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391                           
   392                           	psect	stringtext1
   393  0800                     __pstringtext1:	
   394  0800                     Servo_Initialize@F2759:	
   395  0800  3400               	retlw	0
   396  0801  3400               	retlw	0
   397  0802  3400               	retlw	0
   398  0803  3400               	retlw	0
   399  0804  3400               	retlw	0
   400  0805  3400               	retlw	0
   401  0806  3401               	retlw	1
   402  0807  3400               	retlw	0
   403  0808  3401               	retlw	1
   404  0809  3400               	retlw	0
   405  080A  3402               	retlw	2
   406  080B  3400               	retlw	0
   407  080C  3400               	retlw	0
   408  080D  3400               	retlw	0
   409  080E  3401               	retlw	1
   410  080F  3400               	retlw	0
   411  0810  3402               	retlw	2
   412  0811  3400               	retlw	0
   413  0812  3401               	retlw	1
   414  0813  3400               	retlw	0
   415  0814  3402               	retlw	2
   416  0815  3400               	retlw	0
   417  0816  3402               	retlw	2
   418  0817  3400               	retlw	0
   419  0818                     __end_ofServo_Initialize@F2759:	
   420  0016                     _TMR1	set	22
   421  000D                     _PORTB	set	13
   422  000B                     _INTCONbits	set	11
   423  0018                     _T1CON	set	24
   424  000C                     _PORTA	set	12
   425  000E                     _PORTCbits	set	14
   426  0011                     _PIR1bits	set	17
   427  0018                     _T1CONbits	set	24
   428  0091                     _PIE1bits	set	145
   429  008E                     _TRISCbits	set	142
   430  008D                     _TRISB	set	141
   431  008C                     _TRISA	set	140
   432  0099                     _OSCCON	set	153
   433  010E                     _LATCbits	set	270
   434  018D                     _ANSELB	set	397
   435  018C                     _ANSELA	set	396
   436                           
   437                           ; #config settings
   438  0000                     
   439                           	psect	cinit
   440  07EE                     start_initialization:	
   441  07EE                     __initialization:	
   442                           
   443                           ; Clear objects allocated to BANK0
   444  07EE  304B               	movlw	low __pbssBANK0
   445  07EF  0084               	movwf	4
   446  07F0  3000               	movlw	high __pbssBANK0
   447  07F1  0085               	movwf	5
   448  07F2  3022               	movlw	34
   449  07F3  3183  237D  3187   	fcall	clear_ram0
   450                           
   451                           ; Clear objects allocated to BANK1
   452  07F6  30A0               	movlw	low __pbssBANK1
   453  07F7  0084               	movwf	4
   454  07F8  3000               	movlw	high __pbssBANK1
   455  07F9  0085               	movwf	5
   456  07FA  3014               	movlw	20
   457  07FB  3183  237D         	fcall	clear_ram0
   458  07FD                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461  07FD                     __end_of__initialization:	
   462  07FD  0020               	movlb	0
   463  07FE  3184  2C0E         	ljmp	_main	;jump to C main() function
   464                           
   465                           	psect	bssBANK0
   466  004B                     __pbssBANK0:	
   467  004B                     _param:	
   468  004B                     	ds	15
   469  005A                     _servo_duty:	
   470  005A                     	ds	10
   471  0064                     _servo_raw_data:	
   472  0064                     	ds	5
   473  0069                     _data_renew:	
   474  0069                     	ds	4
   475                           
   476                           	psect	bssBANK1
   477  00A0                     __pbssBANK1:	
   478  00A0                     _port:	
   479  00A0                     	ds	20
   480                           
   481                           	psect	clrtext
   482  037D                     clear_ram0:	
   483                           ;	Called with FSR0 containing the base address, and
   484                           ;	WREG with the size to clear
   485                           
   486  037D  0064               	clrwdt	;clear the watchdog before getting into this loop
   487  037E                     clrloop0:	
   488  037E  0180               	clrf	0	;clear RAM location pointed to by FSR
   489  037F  3101               	addfsr 0,1
   490  0380  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   491  0381  2B7E               	goto	clrloop0	;have we reached the end yet?
   492  0382  3400               	retlw	0	;all done for this memory range, return
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:	
   496  0070                     ?_Initialize:	
   497  0070                     ?_Renew_Raw_Data:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ??_Renew_Raw_Data:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_Calc_Duty:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_Servo_Output_OFF:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ??_Servo_Output_OFF:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_Oscillator_Initialize:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_Oscillator_Initialize:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_Pin_Initialize:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ??_Pin_Initialize:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Timer_Initialize:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ??_Timer_Initialize:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_Servo_Initialize:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?___bmul:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?___ftpack:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ___bmul@multiplicand:	
   540                           ; 3 bytes @ 0x0
   541                           
   542  0070                     ___ftpack@arg:	
   543                           ; 1 bytes @ 0x0
   544                           
   545                           
   546                           ; 3 bytes @ 0x0
   547  0070                     	ds	1
   548  0071                     ??___bmul:	
   549                           
   550                           ; 1 bytes @ 0x1
   551  0071                     	ds	1
   552  0072                     ___bmul@product:	
   553                           
   554                           ; 1 bytes @ 0x2
   555  0072                     	ds	1
   556  0073                     ___bmul@multiplier:	
   557  0073                     ___ftpack@exp:	
   558                           ; 1 bytes @ 0x3
   559                           
   560                           
   561                           ; 1 bytes @ 0x3
   562  0073                     	ds	1
   563  0074                     ??_Servo_Initialize:	
   564  0074                     ___ftpack@sign:	
   565                           ; 1 bytes @ 0x4
   566                           
   567                           
   568                           ; 1 bytes @ 0x4
   569  0074                     	ds	1
   570  0075                     ??___ftpack:	
   571                           
   572                           ; 1 bytes @ 0x5
   573  0075                     	ds	1
   574  0076                     ??_Initialize:	
   575                           
   576                           ; 1 bytes @ 0x6
   577  0076                     	ds	2
   578  0078                     ?___lbtoft:	
   579                           
   580                           ; 3 bytes @ 0x8
   581  0078                     	ds	3
   582  007B                     ___lbtoft@c:	
   583                           
   584                           ; 1 bytes @ 0xB
   585  007B                     	ds	1
   586  007C                     ??_Calc_Duty:	
   587                           
   588                           ; 1 bytes @ 0xC
   589  007C                     	ds	1
   590  007D                     ??_main:	
   591                           
   592                           	psect	cstackBANK0
   593  0020                     __pcstackBANK0:	
   594                           ; 1 bytes @ 0xD
   595                           
   596  0020                     ??___lbtoft:	
   597  0020                     Servo_Initialize@num:	
   598                           ; 1 bytes @ 0x0
   599                           
   600                           
   601                           ; 24 bytes @ 0x0
   602  0020                     	ds	4
   603  0024                     ?___ftmul:	
   604  0024                     ___ftmul@f1:	
   605                           ; 3 bytes @ 0x4
   606                           
   607                           
   608                           ; 3 bytes @ 0x4
   609  0024                     	ds	3
   610  0027                     ___ftmul@f2:	
   611                           
   612                           ; 3 bytes @ 0x7
   613  0027                     	ds	3
   614  002A                     ??___ftmul:	
   615                           
   616                           ; 1 bytes @ 0xA
   617  002A                     	ds	4
   618  002E                     ___ftmul@exp:	
   619                           
   620                           ; 1 bytes @ 0xE
   621  002E                     	ds	1
   622  002F                     ___ftmul@f3_as_product:	
   623                           
   624                           ; 3 bytes @ 0xF
   625  002F                     	ds	3
   626  0032                     ___ftmul@cntr:	
   627                           
   628                           ; 1 bytes @ 0x12
   629  0032                     	ds	1
   630  0033                     ___ftmul@sign:	
   631                           
   632                           ; 1 bytes @ 0x13
   633  0033                     	ds	1
   634  0034                     ?___fttol:	
   635  0034                     ___fttol@f1:	
   636                           ; 4 bytes @ 0x14
   637                           
   638                           
   639                           ; 3 bytes @ 0x14
   640  0034                     	ds	4
   641  0038                     ??___fttol:	
   642                           
   643                           ; 1 bytes @ 0x18
   644  0038                     	ds	4
   645  003C                     ___fttol@sign1:	
   646                           
   647                           ; 1 bytes @ 0x1C
   648  003C                     	ds	1
   649  003D                     ___fttol@lval:	
   650                           
   651                           ; 4 bytes @ 0x1D
   652  003D                     	ds	4
   653  0041                     ___fttol@exp1:	
   654                           
   655                           ; 1 bytes @ 0x21
   656  0041                     	ds	1
   657  0042                     _Calc_Duty$817:	
   658                           
   659                           ; 3 bytes @ 0x22
   660  0042                     	ds	3
   661  0045                     Calc_Duty@i:	
   662                           
   663                           ; 2 bytes @ 0x25
   664  0045                     	ds	2
   665  0047                     ?_main:	
   666  0047                     main@argc:	
   667                           ; 2 bytes @ 0x27
   668                           
   669                           
   670                           ; 2 bytes @ 0x27
   671  0047                     	ds	2
   672  0049                     main@argv:	
   673                           
   674                           ; 2 bytes @ 0x29
   675  0049                     	ds	2
   676                           
   677                           	psect	maintext
   678  040E                     __pmaintext:	
   679 ;;
   680 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   681 ;;
   682 ;; *************** function _main *****************
   683 ;; Defined at:
   684 ;;		line 89 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  argc            2   39[BANK0 ] int 
   687 ;;  argv            2   41[BANK0 ] PTR PTR unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2   39[BANK0 ] int 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : B1F/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   699 ;;      Params:         0       4       0       0
   700 ;;      Locals:         0       0       0       0
   701 ;;      Temps:          0       0       0       0
   702 ;;      Totals:         0       4       0       0
   703 ;;Total ram usage:        4 bytes
   704 ;; Hardware stack levels required when called:    3
   705 ;; This function calls:
   706 ;;		_Calc_Duty
   707 ;;		_Initialize
   708 ;;		_Renew_Raw_Data
   709 ;;		_Servo_Output_OFF
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _main
   717  040E                     _main:	
   718                           
   719                           ;main.c: 91: Initialize();
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   723  040E  3183  238A  3184   	fcall	_Initialize
   724  0411                     l1139:	
   725                           ;main.c: 94: while (1)
   726                           
   727                           
   728                           ;main.c: 95: {;main.c: 96: Renew_Raw_Data();
   729  0411  3183  23D2  3184   	fcall	_Renew_Raw_Data
   730                           
   731                           ;main.c: 97: if (;main.c: 98: data_renew[0] ==;main.c: 99: data_renew[1] ==;main.c: 100:
      +                           data_renew[2] ==;main.c: 101: data_renew[3];main.c: 102: )break;
   732  0414  0020               	movlb	0	; select bank0
   733  0415  086A               	movf	_data_renew+1,w
   734  0416  0669               	xorwf	_data_renew,w
   735  0417  1D03               	btfss	3,2
   736  0418  2C1B               	goto	u1120
   737  0419  3001               	movlw	1
   738  041A  2C1C               	goto	u1130
   739  041B                     u1120:	
   740  041B  3000               	movlw	0
   741  041C                     u1130:	
   742  041C  066B               	xorwf	_data_renew+2,w
   743  041D  1D03               	btfss	3,2
   744  041E  2C21               	goto	u1140
   745  041F  3001               	movlw	1
   746  0420  2C22               	goto	u1150
   747  0421                     u1140:	
   748  0421  3000               	movlw	0
   749  0422                     u1150:	
   750  0422  066C               	xorwf	_data_renew+3,w
   751  0423  1D03               	skipz
   752  0424  2C11               	goto	l1139
   753                           
   754                           ;main.c: 103: };main.c: 104: Calc_Duty();
   755  0425  3184  24AE  3184   	fcall	_Calc_Duty
   756  0428                     L1:	
   757                           
   758                           ;main.c: 107: LATCbits.LATC3 = 1;
   759  0428  0022               	movlb	2	; select bank2
   760  0429  158E               	bsf	14,3	;volatile
   761                           
   762                           ;main.c: 108: LATCbits.LATC6 = 1;
   763  042A  170E               	bsf	14,6	;volatile
   764                           
   765                           ;main.c: 109: LATCbits.LATC5 = 1;
   766  042B  168E               	bsf	14,5	;volatile
   767                           
   768                           ;main.c: 110: LATCbits.LATC4 = 1;
   769  042C  160E               	bsf	14,4	;volatile
   770                           
   771                           ;main.c: 114: {;main.c: 116: TMR1 = 25536;
   772                           
   773                           ;main.c: 113: while (1)
   774  042D  3063               	movlw	99
   775  042E  0020               	movlb	0	; select bank0
   776  042F  0097               	movwf	23	;volatile
   777  0430  30C0               	movlw	192
   778  0431  0096               	movwf	22	;volatile
   779                           
   780                           ;main.c: 117: T1CONbits.TMR1ON = 1;
   781  0432  1418               	bsf	24,0	;volatile
   782  0433                     l1165:	
   783                           ;main.c: 119: while (!PIR1bits.TMR1IF)
   784                           
   785  0433  0020               	movlb	0	; select bank0
   786  0434  1811               	btfsc	17,0	;volatile
   787  0435  2C48               	goto	l71
   788                           
   789                           ;main.c: 120: {;main.c: 122: Servo_Output_OFF();
   790  0436  3185  2512  3184   	fcall	_Servo_Output_OFF
   791                           
   792                           ;main.c: 125: if (TMR1 >= 45536)
   793  0439  30B1               	movlw	177
   794  043A  0020               	movlb	0	; select bank0
   795  043B  0217               	subwf	23,w	;volatile
   796  043C  30E0               	movlw	224
   797  043D  1903               	skipnz
   798  043E  0216               	subwf	22,w	;volatile
   799  043F  1C03               	skipc
   800  0440  2C33               	goto	l1165
   801                           
   802                           ;main.c: 126: {;main.c: 128: Renew_Raw_Data();
   803  0441  3183  23D2  3184   	fcall	_Renew_Raw_Data
   804                           
   805                           ;main.c: 129: Calc_Duty();
   806  0444  3184  24AE  3184   	fcall	_Calc_Duty
   807  0447  2C33               	goto	l1165
   808  0448                     l71:	
   809                           
   810                           ;main.c: 130: };main.c: 131: };main.c: 133: PIR1bits.TMR1IF = 0;
   811  0448  1011               	bcf	17,0	;volatile
   812  0449  2C28               	goto	L1
   813  044A                     __end_of_main:	
   814                           ;main.c: 139: };main.c: 140: return (0);;	Return value of _main is never used
   815                           
   816                           ;main.c: 138: LATCbits.LATC4 = 1;
   817                           
   818                           ;main.c: 137: LATCbits.LATC5 = 1;
   819                           
   820                           ;main.c: 136: LATCbits.LATC6 = 1;
   821                           
   822                           ;main.c: 135: LATCbits.LATC3 = 1;
   823                           
   824                           
   825                           	psect	text1
   826  0512                     __ptext1:	
   827 ;; *************** function _Servo_Output_OFF *****************
   828 ;; Defined at:
   829 ;;		line 165 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   843 ;;      Params:         0       0       0       0
   844 ;;      Locals:         0       0       0       0
   845 ;;      Temps:          4       0       0       0
   846 ;;      Totals:         4       0       0       0
   847 ;;Total ram usage:        4 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _Servo_Output_OFF
   858  0512                     _Servo_Output_OFF:	
   859                           
   860                           ;main.c: 168: if (TMR1 >= (25536 + port[0].min + servo_duty[1])) LATCbits.LATC3 = 0;
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _Servo_Output_OFF: [wreg-fsr1h+status,2+status,0]
   864  0512  3002               	movlw	2
   865  0513  3E5A               	addlw	(low (_servo_duty| 0))& (0+255)
   866  0514  0086               	movwf	6
   867  0515  0187               	clrf	7
   868  0516  3003               	movlw	3
   869  0517  3EA0               	addlw	(low (_port| 0))& (0+255)
   870  0518  0084               	movwf	4
   871  0519  0185               	clrf	5
   872  051A  3F40               	moviw [0]fsr1
   873  051B  0700               	addwf	0,w
   874  051C  00F0               	movwf	??_Servo_Output_OFF
   875  051D  3101               	addfsr 0,1
   876  051E  3F41               	moviw [1]fsr1
   877  051F  3D00               	addwfc	0,w
   878  0520  00F1               	movwf	??_Servo_Output_OFF+1
   879  0521  0870               	movf	??_Servo_Output_OFF,w
   880  0522  3EC0               	addlw	192
   881  0523  00F2               	movwf	??_Servo_Output_OFF+2
   882  0524  3063               	movlw	99
   883  0525  3D71               	addwfc	??_Servo_Output_OFF+1,w
   884  0526  00F3               	movwf	??_Servo_Output_OFF+3
   885  0527  0873               	movf	??_Servo_Output_OFF+3,w
   886  0528  0020               	movlb	0	; select bank0
   887  0529  0217               	subwf	23,w	;volatile
   888  052A  1D03               	skipz
   889  052B  2D2E               	goto	u1085
   890  052C  0872               	movf	??_Servo_Output_OFF+2,w
   891  052D  0216               	subwf	22,w	;volatile
   892  052E                     u1085:	
   893  052E  1C03               	skipc
   894  052F  2D32               	goto	l1125
   895  0530  0022               	movlb	2	; select bank2
   896  0531  118E               	bcf	14,3	;volatile
   897  0532                     l1125:	
   898                           
   899                           ;main.c: 169: if (TMR1 >= (25536 + port[1].min + servo_duty[2])) LATCbits.LATC6 = 0;
   900  0532  3004               	movlw	4
   901  0533  3E5A               	addlw	(low (_servo_duty| 0))& (0+255)
   902  0534  0086               	movwf	6
   903  0535  0187               	clrf	7
   904  0536  3008               	movlw	8
   905  0537  3EA0               	addlw	(low (_port| 0))& (0+255)
   906  0538  0084               	movwf	4
   907  0539  0185               	clrf	5
   908  053A  3F40               	moviw [0]fsr1
   909  053B  0700               	addwf	0,w
   910  053C  00F0               	movwf	??_Servo_Output_OFF
   911  053D  3101               	addfsr 0,1
   912  053E  3F41               	moviw [1]fsr1
   913  053F  3D00               	addwfc	0,w
   914  0540  00F1               	movwf	??_Servo_Output_OFF+1
   915  0541  0870               	movf	??_Servo_Output_OFF,w
   916  0542  3EC0               	addlw	192
   917  0543  00F2               	movwf	??_Servo_Output_OFF+2
   918  0544  3063               	movlw	99
   919  0545  3D71               	addwfc	??_Servo_Output_OFF+1,w
   920  0546  00F3               	movwf	??_Servo_Output_OFF+3
   921  0547  0873               	movf	??_Servo_Output_OFF+3,w
   922  0548  0020               	movlb	0	; select bank0
   923  0549  0217               	subwf	23,w	;volatile
   924  054A  1D03               	skipz
   925  054B  2D4E               	goto	u1095
   926  054C  0872               	movf	??_Servo_Output_OFF+2,w
   927  054D  0216               	subwf	22,w	;volatile
   928  054E                     u1095:	
   929  054E  1C03               	skipc
   930  054F  2D52               	goto	l1129
   931  0550  0022               	movlb	2	; select bank2
   932  0551  130E               	bcf	14,6	;volatile
   933  0552                     l1129:	
   934                           
   935                           ;main.c: 170: if (TMR1 >= (25536 + port[2].min + servo_duty[3])) LATCbits.LATC5 = 0;
   936  0552  3006               	movlw	6
   937  0553  3E5A               	addlw	(low (_servo_duty| 0))& (0+255)
   938  0554  0086               	movwf	6
   939  0555  0187               	clrf	7
   940  0556  300D               	movlw	13
   941  0557  3EA0               	addlw	(low (_port| 0))& (0+255)
   942  0558  0084               	movwf	4
   943  0559  0185               	clrf	5
   944  055A  3F40               	moviw [0]fsr1
   945  055B  0700               	addwf	0,w
   946  055C  00F0               	movwf	??_Servo_Output_OFF
   947  055D  3101               	addfsr 0,1
   948  055E  3F41               	moviw [1]fsr1
   949  055F  3D00               	addwfc	0,w
   950  0560  00F1               	movwf	??_Servo_Output_OFF+1
   951  0561  0870               	movf	??_Servo_Output_OFF,w
   952  0562  3EC0               	addlw	192
   953  0563  00F2               	movwf	??_Servo_Output_OFF+2
   954  0564  3063               	movlw	99
   955  0565  3D71               	addwfc	??_Servo_Output_OFF+1,w
   956  0566  00F3               	movwf	??_Servo_Output_OFF+3
   957  0567  0873               	movf	??_Servo_Output_OFF+3,w
   958  0568  0020               	movlb	0	; select bank0
   959  0569  0217               	subwf	23,w	;volatile
   960  056A  1D03               	skipz
   961  056B  2D6E               	goto	u1105
   962  056C  0872               	movf	??_Servo_Output_OFF+2,w
   963  056D  0216               	subwf	22,w	;volatile
   964  056E                     u1105:	
   965  056E  1C03               	skipc
   966  056F  2D72               	goto	l1133
   967  0570  0022               	movlb	2	; select bank2
   968  0571  128E               	bcf	14,5	;volatile
   969  0572                     l1133:	
   970                           
   971                           ;main.c: 171: if (TMR1 >= (25536 + port[3].min + servo_duty[4])) LATCbits.LATC4 = 0;
   972  0572  3008               	movlw	8
   973  0573  3E5A               	addlw	(low (_servo_duty| 0))& (0+255)
   974  0574  0086               	movwf	6
   975  0575  0187               	clrf	7
   976  0576  3012               	movlw	18
   977  0577  3EA0               	addlw	(low (_port| 0))& (0+255)
   978  0578  0084               	movwf	4
   979  0579  0185               	clrf	5
   980  057A  3F40               	moviw [0]fsr1
   981  057B  0700               	addwf	0,w
   982  057C  00F0               	movwf	??_Servo_Output_OFF
   983  057D  3101               	addfsr 0,1
   984  057E  3F41               	moviw [1]fsr1
   985  057F  3D00               	addwfc	0,w
   986  0580  00F1               	movwf	??_Servo_Output_OFF+1
   987  0581  0870               	movf	??_Servo_Output_OFF,w
   988  0582  3EC0               	addlw	192
   989  0583  00F2               	movwf	??_Servo_Output_OFF+2
   990  0584  3063               	movlw	99
   991  0585  3D71               	addwfc	??_Servo_Output_OFF+1,w
   992  0586  00F3               	movwf	??_Servo_Output_OFF+3
   993  0587  0873               	movf	??_Servo_Output_OFF+3,w
   994  0588  0020               	movlb	0	; select bank0
   995  0589  0217               	subwf	23,w	;volatile
   996  058A  1D03               	skipz
   997  058B  2D8E               	goto	u1115
   998  058C  0872               	movf	??_Servo_Output_OFF+2,w
   999  058D  0216               	subwf	22,w	;volatile
  1000  058E                     u1115:	
  1001  058E  1C03               	skipc
  1002  058F  0008               	return
  1003  0590  0022               	movlb	2	; select bank2
  1004  0591  120E               	bcf	14,4	;volatile
  1005  0592  0008               	return
  1006  0593                     __end_of_Servo_Output_OFF:	
  1007                           ;main.c: 173: else;
  1008                           
  1009                           
  1010                           	psect	text2
  1011  03D2                     __ptext2:	
  1012 ;; *************** function _Renew_Raw_Data *****************
  1013 ;; Defined at:
  1014 ;;		line 143 in file "main.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1028 ;;      Params:         0       0       0       0
  1029 ;;      Locals:         0       0       0       0
  1030 ;;      Temps:          4       0       0       0
  1031 ;;      Totals:         4       0       0       0
  1032 ;;Total ram usage:        4 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _Renew_Raw_Data
  1043  03D2                     _Renew_Raw_Data:	
  1044                           
  1045                           ;main.c: 146: servo_raw_data[((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits.R
      +                          C0))] = PORTA;
  1046                           
  1047                           ;incstack = 0
  1048                           ; Regs used in _Renew_Raw_Data: [wreg+fsr1l+fsr1h+status,2+status,0]
  1049  03D2  0020               	movlb	0	; select bank0
  1050  03D3  080C               	movf	12,w	;volatile
  1051  03D4  00F0               	movwf	??_Renew_Raw_Data
  1052  03D5  080E               	movf	14,w	;volatile
  1053  03D6  3901               	andlw	1
  1054  03D7  00F1               	movwf	??_Renew_Raw_Data+1
  1055  03D8  0C0E               	rrf	14,w	;volatile
  1056  03D9  3901               	andlw	1
  1057  03DA  00F2               	movwf	??_Renew_Raw_Data+2
  1058  03DB  3001               	movlw	1
  1059  03DC                     u1025:	
  1060  03DC  35F2               	lslf	??_Renew_Raw_Data+2,f
  1061  03DD  0B89               	decfsz	9,f
  1062  03DE  2BDC               	goto	u1025
  1063  03DF  0C0E               	rrf	14,w	;volatile
  1064  03E0  0C89               	rrf	9,f
  1065  03E1  3901               	andlw	1
  1066  03E2  00F3               	movwf	??_Renew_Raw_Data+3
  1067  03E3  3001               	movlw	1
  1068  03E4                     u1035:	
  1069  03E4  35F3               	lslf	??_Renew_Raw_Data+3,f
  1070  03E5  3EFF               	addlw	-1
  1071  03E6  1D03               	skipz
  1072  03E7  2BE4               	goto	u1035
  1073  03E8  3573               	lslf	??_Renew_Raw_Data+3,w
  1074  03E9  0472               	iorwf	??_Renew_Raw_Data+2,w
  1075  03EA  0471               	iorwf	??_Renew_Raw_Data+1,w
  1076  03EB  3E64               	addlw	(low (_servo_raw_data| 0))& (0+255)
  1077  03EC  0086               	movwf	6
  1078  03ED  0187               	clrf	7
  1079  03EE  0870               	movf	??_Renew_Raw_Data,w
  1080  03EF  0081               	movwf	1
  1081                           
  1082                           ;main.c: 149: data_renew[((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits.RC0))
      +                          ] ^= 1;
  1083  03F0  3001               	movlw	1
  1084  03F1  00F0               	movwf	??_Renew_Raw_Data
  1085  03F2  080E               	movf	14,w	;volatile
  1086  03F3  3901               	andlw	1
  1087  03F4  00F1               	movwf	??_Renew_Raw_Data+1
  1088  03F5  0C0E               	rrf	14,w	;volatile
  1089  03F6  3901               	andlw	1
  1090  03F7  00F2               	movwf	??_Renew_Raw_Data+2
  1091  03F8  3001               	movlw	1
  1092  03F9                     u1045:	
  1093  03F9  35F2               	lslf	??_Renew_Raw_Data+2,f
  1094  03FA  0B89               	decfsz	9,f
  1095  03FB  2BF9               	goto	u1045
  1096  03FC  0C0E               	rrf	14,w	;volatile
  1097  03FD  0C89               	rrf	9,f
  1098  03FE  3901               	andlw	1
  1099  03FF  00F3               	movwf	??_Renew_Raw_Data+3
  1100  0400  3001               	movlw	1
  1101  0401                     u1055:	
  1102  0401  35F3               	lslf	??_Renew_Raw_Data+3,f
  1103  0402  3EFF               	addlw	-1
  1104  0403  1D03               	skipz
  1105  0404  2C01               	goto	u1055
  1106  0405  3573               	lslf	??_Renew_Raw_Data+3,w
  1107  0406  0472               	iorwf	??_Renew_Raw_Data+2,w
  1108  0407  0471               	iorwf	??_Renew_Raw_Data+1,w
  1109  0408  3E69               	addlw	(low (_data_renew| 0))& (0+255)
  1110  0409  0086               	movwf	6
  1111  040A  0187               	clrf	7
  1112  040B  0870               	movf	??_Renew_Raw_Data,w
  1113  040C  0681               	xorwf	1,f
  1114  040D  0008               	return
  1115  040E                     __end_of_Renew_Raw_Data:	
  1116                           
  1117                           	psect	text3
  1118  038A                     __ptext3:	
  1119 ;; *************** function _Initialize *****************
  1120 ;; Defined at:
  1121 ;;		line 180 in file "main.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1135 ;;      Params:         0       0       0       0
  1136 ;;      Locals:         0       0       0       0
  1137 ;;      Temps:          0       0       0       0
  1138 ;;      Totals:         0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		_Oscillator_Initialize
  1144 ;;		_Pin_Initialize
  1145 ;;		_Servo_Initialize
  1146 ;;		_Timer_Initialize
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _Initialize
  1154  038A                     _Initialize:	
  1155                           
  1156                           ;main.c: 182: Oscillator_Initialize();
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1160  038A  3183  2379  3183   	fcall	_Oscillator_Initialize
  1161                           
  1162                           ;main.c: 183: Pin_Initialize();
  1163  038D  3183  23A7  3183   	fcall	_Pin_Initialize
  1164                           
  1165                           ;main.c: 184: Timer_Initialize();
  1166  0390  3183  2383  3183   	fcall	_Timer_Initialize
  1167                           
  1168                           ;main.c: 185: Servo_Initialize();
  1169  0393  3186  26CE         	fcall	_Servo_Initialize
  1170  0395  0008               	return
  1171  0396                     __end_of_Initialize:	
  1172                           
  1173                           	psect	text4
  1174  0383                     __ptext4:	
  1175 ;; *************** function _Timer_Initialize *****************
  1176 ;; Defined at:
  1177 ;;		line 218 in file "main.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		status,2
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1191 ;;      Params:         0       0       0       0
  1192 ;;      Locals:         0       0       0       0
  1193 ;;      Temps:          0       0       0       0
  1194 ;;      Totals:         0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_Initialize
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _Timer_Initialize
  1206  0383                     _Timer_Initialize:	
  1207                           
  1208                           ;main.c: 222: T1CON = 0x00;
  1209                           
  1210                           ;incstack = 0
  1211                           ; Regs used in _Timer_Initialize: [status,2]
  1212  0383  0020               	movlb	0	; select bank0
  1213  0384  0198               	clrf	24	;volatile
  1214                           
  1215                           ;main.c: 225: INTCONbits.GIE = 0;
  1216  0385  138B               	bcf	11,7	;volatile
  1217                           
  1218                           ;main.c: 226: INTCONbits.PEIE = 0;
  1219  0386  130B               	bcf	11,6	;volatile
  1220                           
  1221                           ;main.c: 228: PIE1bits.TMR1IE = 0;
  1222  0387  0021               	movlb	1	; select bank1
  1223  0388  1011               	bcf	17,0	;volatile
  1224  0389  0008               	return
  1225  038A                     __end_of_Timer_Initialize:	
  1226                           
  1227                           	psect	text5
  1228  06CE                     __ptext5:	
  1229 ;; *************** function _Servo_Initialize *****************
  1230 ;; Defined at:
  1231 ;;		line 231 in file "main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  num            24    0[BANK0 ] const int [6][2]
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1245 ;;      Params:         0       0       0       0
  1246 ;;      Locals:         0      24       0       0
  1247 ;;      Temps:          2       0       0       0
  1248 ;;      Totals:         2      24       0       0
  1249 ;;Total ram usage:       26 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    1
  1252 ;; This function calls:
  1253 ;;		___bmul
  1254 ;; This function is called by:
  1255 ;;		_Initialize
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _Servo_Initialize
  1261  06CE                     _Servo_Initialize:	
  1262                           
  1263                           ;main.c: 233: const int num[2][6] = {;main.c: 234: {0, 0, 0, 1, 1, 2},;main.c: 235: {0, 
      +                          1, 2, 1, 2, 2};main.c: 236: };
  1264                           
  1265                           ;incstack = 0
  1266                           ; Regs used in _Servo_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1267  06CE  3000               	movlw	low (Servo_Initialize@F2759| (0+32768))
  1268  06CF  0084               	movwf	4
  1269  06D0  3088               	movlw	high (Servo_Initialize@F2759| (0+32768))
  1270  06D1  0085               	movwf	5
  1271  06D2  3020               	movlw	low Servo_Initialize@num
  1272  06D3  0086               	movwf	6
  1273  06D4  3000               	movlw	high Servo_Initialize@num
  1274  06D5  0087               	movwf	7
  1275  06D6  3018               	movlw	24
  1276  06D7  00F4               	movwf	??_Servo_Initialize
  1277  06D8                     u740:	
  1278  06D8  0012               	moviw fsr0++
  1279  06D9  001E               	movwi fsr1++
  1280  06DA  0BF4               	decfsz	??_Servo_Initialize,f
  1281  06DB  2ED8               	goto	u740
  1282                           
  1283                           ;main.c: 239: param[0].conv = 667E-8;
  1284  06DC  30CF               	movlw	207
  1285  06DD  0020               	movlb	0	; select bank0
  1286  06DE  00CB               	movwf	_param
  1287  06DF  30DF               	movlw	223
  1288  06E0  00CC               	movwf	_param+1
  1289  06E1  3036               	movlw	54
  1290  06E2  00CD               	movwf	_param+2
  1291                           
  1292                           ;main.c: 240: param[0].min = 1800;
  1293  06E3  3008               	movlw	8
  1294  06E4  00CE               	movwf	_param+3
  1295  06E5  3007               	movlw	7
  1296  06E6  00CF               	movwf	_param+4
  1297                           
  1298                           ;main.c: 242: param[1].conv = 1056E-8;
  1299  06E7  302B               	movlw	43
  1300  06E8  00D0               	movwf	_param+5
  1301  06E9  3031               	movlw	49
  1302  06EA  00D1               	movwf	_param+6
  1303  06EB  3037               	movlw	55
  1304  06EC  00D2               	movwf	_param+7
  1305                           
  1306                           ;main.c: 243: param[1].min = 1000;
  1307  06ED  30E8               	movlw	232
  1308  06EE  00D3               	movwf	_param+8
  1309  06EF  3003               	movlw	3
  1310  06F0  00D4               	movwf	_param+9
  1311                           
  1312                           ;main.c: 245: param[2].conv = 5926E-9;
  1313  06F1  30D8               	movlw	216
  1314  06F2  00D5               	movwf	_param+10
  1315  06F3  30C6               	movlw	198
  1316  06F4  00D6               	movwf	_param+11
  1317  06F5  3036               	movlw	54
  1318  06F6  00D7               	movwf	_param+12
  1319                           
  1320                           ;main.c: 246: param[2].min = 1400;
  1321  06F7  3078               	movlw	120
  1322  06F8  00D8               	movwf	_param+13
  1323  06F9  3005               	movlw	5
  1324  06FA  00D9               	movwf	_param+14
  1325                           
  1326                           ;main.c: 250: port[0].conv = param[num[0][(PORTB&0b00000111)]].conv;
  1327  06FB  3005               	movlw	5
  1328  06FC  00F4               	movwf	??_Servo_Initialize
  1329  06FD  0874               	movf	??_Servo_Initialize,w
  1330  06FE  00F0               	movwf	___bmul@multiplicand
  1331  06FF  080D               	movf	13,w	;volatile
  1332  0700  3907               	andlw	7
  1333  0701  0709               	addwf	9,w
  1334  0702  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1335  0703  0086               	movwf	6
  1336  0704  0187               	clrf	7
  1337  0705  0801               	movf	1,w
  1338  0706  3183  2396  3186   	fcall	___bmul
  1339  0709  3E4B               	addlw	(low (_param| 0))& (0+255)
  1340  070A  0086               	movwf	6
  1341  070B  0187               	clrf	7
  1342  070C  3F40               	moviw [0]fsr1
  1343  070D  0021               	movlb	1	; select bank1
  1344  070E  00A0               	movwf	_port^(0+128)
  1345  070F  3F41               	moviw [1]fsr1
  1346  0710  00A1               	movwf	(_port+1)^(0+128)
  1347  0711  3F42               	moviw [2]fsr1
  1348  0712  00A2               	movwf	(_port+2)^(0+128)
  1349                           
  1350                           ;main.c: 251: port[0].min = param[num[0][(PORTB&0b00000111)]].min;
  1351  0713  3005               	movlw	5
  1352  0714  00F4               	movwf	??_Servo_Initialize
  1353  0715  0874               	movf	??_Servo_Initialize,w
  1354  0716  00F0               	movwf	___bmul@multiplicand
  1355  0717  0020               	movlb	0	; select bank0
  1356  0718  080D               	movf	13,w	;volatile
  1357  0719  3907               	andlw	7
  1358  071A  0709               	addwf	9,w
  1359  071B  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1360  071C  0086               	movwf	6
  1361  071D  0187               	clrf	7
  1362  071E  0801               	movf	1,w
  1363  071F  3183  2396  3186   	fcall	___bmul
  1364  0722  3E03               	addlw	3
  1365  0723  3E4B               	addlw	(low (_param| 0))& (0+255)
  1366  0724  0086               	movwf	6
  1367  0725  0187               	clrf	7
  1368  0726  3F40               	moviw [0]fsr1
  1369  0727  0021               	movlb	1	; select bank1
  1370  0728  00A3               	movwf	(_port^(0+128)+3)
  1371  0729  3F41               	moviw [1]fsr1
  1372  072A  00A4               	movwf	((_port+1)^(0+128)+3)
  1373                           
  1374                           ;main.c: 253: port[1].conv = param[num[1][(PORTB&0b00000111)]].conv;
  1375  072B  3005               	movlw	5
  1376  072C  00F4               	movwf	??_Servo_Initialize
  1377  072D  0874               	movf	??_Servo_Initialize,w
  1378  072E  00F0               	movwf	___bmul@multiplicand
  1379  072F  0020               	movlb	0	; select bank0
  1380  0730  080D               	movf	13,w	;volatile
  1381  0731  3907               	andlw	7
  1382  0732  0709               	addwf	9,w
  1383  0733  3E0C               	addlw	12
  1384  0734  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1385  0735  0086               	movwf	6
  1386  0736  0187               	clrf	7
  1387  0737  0801               	movf	1,w
  1388  0738  3183  2396  3186   	fcall	___bmul
  1389  073B  3E4B               	addlw	(low (_param| 0))& (0+255)
  1390  073C  0086               	movwf	6
  1391  073D  0187               	clrf	7
  1392  073E  3F40               	moviw [0]fsr1
  1393  073F  0021               	movlb	1	; select bank1
  1394  0740  00A5               	movwf	(_port^(0+128)+5)
  1395  0741  3F41               	moviw [1]fsr1
  1396  0742  00A6               	movwf	((_port+1)^(0+128)+5)
  1397  0743  3F42               	moviw [2]fsr1
  1398  0744  00A7               	movwf	((_port+2)^(0+128)+5)
  1399                           
  1400                           ;main.c: 254: port[1].min = param[num[1][(PORTB&0b00000111)]].min;
  1401  0745  3005               	movlw	5
  1402  0746  00F4               	movwf	??_Servo_Initialize
  1403  0747  0874               	movf	??_Servo_Initialize,w
  1404  0748  00F0               	movwf	___bmul@multiplicand
  1405  0749  0020               	movlb	0	; select bank0
  1406  074A  080D               	movf	13,w	;volatile
  1407  074B  3907               	andlw	7
  1408  074C  0709               	addwf	9,w
  1409  074D  3E0C               	addlw	12
  1410  074E  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1411  074F  0086               	movwf	6
  1412  0750  0187               	clrf	7
  1413  0751  0801               	movf	1,w
  1414  0752  3183  2396  3186   	fcall	___bmul
  1415  0755  3E03               	addlw	3
  1416  0756  3E4B               	addlw	(low (_param| 0))& (0+255)
  1417  0757  0086               	movwf	6
  1418  0758  0187               	clrf	7
  1419  0759  3F40               	moviw [0]fsr1
  1420  075A  0021               	movlb	1	; select bank1
  1421  075B  00A8               	movwf	(_port^(0+128)+8)
  1422  075C  3F41               	moviw [1]fsr1
  1423  075D  00A9               	movwf	((_port+1)^(0+128)+8)
  1424                           
  1425                           ;main.c: 256: port[2].conv = param[num[0][((PORTB&0b00111000)>>3)]].conv;
  1426  075E  3005               	movlw	5
  1427  075F  00F4               	movwf	??_Servo_Initialize
  1428  0760  0874               	movf	??_Servo_Initialize,w
  1429  0761  00F0               	movwf	___bmul@multiplicand
  1430  0762  0020               	movlb	0	; select bank0
  1431  0763  080D               	movf	13,w	;volatile
  1432  0764  00F5               	movwf	??_Servo_Initialize+1
  1433  0765  3003               	movlw	3
  1434  0766                     u755:	
  1435  0766  36F5               	lsrf	??_Servo_Initialize+1,f
  1436  0767  0B89               	decfsz	9,f
  1437  0768  2F66               	goto	u755
  1438  0769  0875               	movf	??_Servo_Initialize+1,w
  1439  076A  3907               	andlw	7
  1440  076B  0709               	addwf	9,w
  1441  076C  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1442  076D  0086               	movwf	6
  1443  076E  0187               	clrf	7
  1444  076F  0801               	movf	1,w
  1445  0770  3183  2396  3186   	fcall	___bmul
  1446  0773  3E4B               	addlw	(low (_param| 0))& (0+255)
  1447  0774  0086               	movwf	6
  1448  0775  0187               	clrf	7
  1449  0776  3F40               	moviw [0]fsr1
  1450  0777  0021               	movlb	1	; select bank1
  1451  0778  00AA               	movwf	(_port^(0+128)+10)
  1452  0779  3F41               	moviw [1]fsr1
  1453  077A  00AB               	movwf	((_port+1)^(0+128)+10)
  1454  077B  3F42               	moviw [2]fsr1
  1455  077C  00AC               	movwf	((_port+2)^(0+128)+10)
  1456                           
  1457                           ;main.c: 257: port[2].min = param[num[0][((PORTB&0b00111000)>>3)]].min;
  1458  077D  3005               	movlw	5
  1459  077E  00F4               	movwf	??_Servo_Initialize
  1460  077F  0874               	movf	??_Servo_Initialize,w
  1461  0780  00F0               	movwf	___bmul@multiplicand
  1462  0781  0020               	movlb	0	; select bank0
  1463  0782  080D               	movf	13,w	;volatile
  1464  0783  00F5               	movwf	??_Servo_Initialize+1
  1465  0784  3003               	movlw	3
  1466  0785                     u765:	
  1467  0785  36F5               	lsrf	??_Servo_Initialize+1,f
  1468  0786  0B89               	decfsz	9,f
  1469  0787  2F85               	goto	u765
  1470  0788  0875               	movf	??_Servo_Initialize+1,w
  1471  0789  3907               	andlw	7
  1472  078A  0709               	addwf	9,w
  1473  078B  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1474  078C  0086               	movwf	6
  1475  078D  0187               	clrf	7
  1476  078E  0801               	movf	1,w
  1477  078F  3183  2396  3186   	fcall	___bmul
  1478  0792  3E03               	addlw	3
  1479  0793  3E4B               	addlw	(low (_param| 0))& (0+255)
  1480  0794  0086               	movwf	6
  1481  0795  0187               	clrf	7
  1482  0796  3F40               	moviw [0]fsr1
  1483  0797  0021               	movlb	1	; select bank1
  1484  0798  00AD               	movwf	(_port^(0+128)+13)
  1485  0799  3F41               	moviw [1]fsr1
  1486  079A  00AE               	movwf	((_port+1)^(0+128)+13)
  1487                           
  1488                           ;main.c: 259: port[3].conv = param[num[1][((PORTB&0b00111000)>>3)]].conv;
  1489  079B  3005               	movlw	5
  1490  079C  00F4               	movwf	??_Servo_Initialize
  1491  079D  0874               	movf	??_Servo_Initialize,w
  1492  079E  00F0               	movwf	___bmul@multiplicand
  1493  079F  0020               	movlb	0	; select bank0
  1494  07A0  080D               	movf	13,w	;volatile
  1495  07A1  00F5               	movwf	??_Servo_Initialize+1
  1496  07A2  3003               	movlw	3
  1497  07A3                     u775:	
  1498  07A3  36F5               	lsrf	??_Servo_Initialize+1,f
  1499  07A4  0B89               	decfsz	9,f
  1500  07A5  2FA3               	goto	u775
  1501  07A6  0875               	movf	??_Servo_Initialize+1,w
  1502  07A7  3907               	andlw	7
  1503  07A8  0709               	addwf	9,w
  1504  07A9  3E0C               	addlw	12
  1505  07AA  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1506  07AB  0086               	movwf	6
  1507  07AC  0187               	clrf	7
  1508  07AD  0801               	movf	1,w
  1509  07AE  3183  2396  3186   	fcall	___bmul
  1510  07B1  3E4B               	addlw	(low (_param| 0))& (0+255)
  1511  07B2  0086               	movwf	6
  1512  07B3  0187               	clrf	7
  1513  07B4  3F40               	moviw [0]fsr1
  1514  07B5  0021               	movlb	1	; select bank1
  1515  07B6  00AF               	movwf	(_port^(0+128)+15)
  1516  07B7  3F41               	moviw [1]fsr1
  1517  07B8  00B0               	movwf	((_port+1)^(0+128)+15)
  1518  07B9  3F42               	moviw [2]fsr1
  1519  07BA  00B1               	movwf	((_port+2)^(0+128)+15)
  1520                           
  1521                           ;main.c: 260: port[3].min = param[num[1][((PORTB&0b00111000)>>3)]].min;
  1522  07BB  3005               	movlw	5
  1523  07BC  00F4               	movwf	??_Servo_Initialize
  1524  07BD  0874               	movf	??_Servo_Initialize,w
  1525  07BE  00F0               	movwf	___bmul@multiplicand
  1526  07BF  0020               	movlb	0	; select bank0
  1527  07C0  080D               	movf	13,w	;volatile
  1528  07C1  00F5               	movwf	??_Servo_Initialize+1
  1529  07C2  3003               	movlw	3
  1530  07C3                     u785:	
  1531  07C3  36F5               	lsrf	??_Servo_Initialize+1,f
  1532  07C4  0B89               	decfsz	9,f
  1533  07C5  2FC3               	goto	u785
  1534  07C6  0875               	movf	??_Servo_Initialize+1,w
  1535  07C7  3907               	andlw	7
  1536  07C8  0709               	addwf	9,w
  1537  07C9  3E0C               	addlw	12
  1538  07CA  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1539  07CB  0086               	movwf	6
  1540  07CC  0187               	clrf	7
  1541  07CD  0801               	movf	1,w
  1542  07CE  3183  2396  3186   	fcall	___bmul
  1543  07D1  3E03               	addlw	3
  1544  07D2  3E4B               	addlw	(low (_param| 0))& (0+255)
  1545  07D3  0086               	movwf	6
  1546  07D4  0187               	clrf	7
  1547  07D5  3F40               	moviw [0]fsr1
  1548  07D6  0021               	movlb	1	; select bank1
  1549  07D7  00B2               	movwf	(_port^(0+128)+18)
  1550  07D8  3F41               	moviw [1]fsr1
  1551  07D9  00B3               	movwf	((_port+1)^(0+128)+18)
  1552                           
  1553                           ;main.c: 263: if (num[0][(PORTB&0b00000111)] == 2)LATCbits.LATC7 = 1;
  1554  07DA  0020               	movlb	0	; select bank0
  1555  07DB  080D               	movf	13,w	;volatile
  1556  07DC  3907               	andlw	7
  1557  07DD  0709               	addwf	9,w
  1558  07DE  3E20               	addlw	(low (Servo_Initialize@num| 0))& (0+255)
  1559  07DF  0086               	movwf	6
  1560  07E0  0187               	clrf	7
  1561  07E1  0016               	moviw fsr1++
  1562  07E2  3A02               	xorlw	2
  1563  07E3  00F4               	movwf	??_Servo_Initialize
  1564  07E4  0016               	moviw fsr1++
  1565  07E5  04F4               	iorwf	??_Servo_Initialize,f
  1566  07E6  1D03               	btfss	3,2
  1567  07E7  2FEB               	goto	l107
  1568  07E8  0022               	movlb	2	; select bank2
  1569  07E9  178E               	bsf	14,7	;volatile
  1570  07EA  0008               	return
  1571  07EB                     l107:	
  1572                           
  1573                           ;main.c: 264: else LATCbits.LATC7 = 0;
  1574  07EB  0022               	movlb	2	; select bank2
  1575  07EC  138E               	bcf	14,7	;volatile
  1576  07ED  0008               	return
  1577  07EE                     __end_of_Servo_Initialize:	
  1578                           
  1579                           	psect	text6
  1580  03A7                     __ptext6:	
  1581 ;; *************** function _Pin_Initialize *****************
  1582 ;; Defined at:
  1583 ;;		line 193 in file "main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1597 ;;      Params:         0       0       0       0
  1598 ;;      Locals:         0       0       0       0
  1599 ;;      Temps:          0       0       0       0
  1600 ;;      Totals:         0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_Initialize
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function _Pin_Initialize
  1612  03A7                     _Pin_Initialize:	
  1613                           
  1614                           ;main.c: 197: ANSELA = 0x00;
  1615                           
  1616                           ;incstack = 0
  1617                           ; Regs used in _Pin_Initialize: [wreg+status,2]
  1618  03A7  0023               	movlb	3	; select bank3
  1619  03A8  018C               	clrf	12	;volatile
  1620                           
  1621                           ;main.c: 198: ANSELB = 0x00;
  1622  03A9  018D               	clrf	13	;volatile
  1623                           
  1624                           ;main.c: 200: TRISA = 0xFF;
  1625  03AA  30FF               	movlw	255
  1626  03AB  0021               	movlb	1	; select bank1
  1627  03AC  008C               	movwf	12	;volatile
  1628                           
  1629                           ;main.c: 201: TRISB = 0xFF;
  1630  03AD  30FF               	movlw	255
  1631  03AE  008D               	movwf	13	;volatile
  1632                           
  1633                           ;main.c: 204: TRISCbits.TRISC0 = 1;
  1634  03AF  140E               	bsf	14,0	;volatile
  1635                           
  1636                           ;main.c: 205: TRISCbits.TRISC1 = 1;
  1637  03B0  148E               	bsf	14,1	;volatile
  1638                           
  1639                           ;main.c: 206: TRISCbits.TRISC2 = 1;
  1640  03B1  150E               	bsf	14,2	;volatile
  1641                           
  1642                           ;main.c: 209: TRISCbits.TRISC3 = 0;
  1643  03B2  118E               	bcf	14,3	;volatile
  1644                           
  1645                           ;main.c: 210: TRISCbits.TRISC4 = 0;
  1646  03B3  120E               	bcf	14,4	;volatile
  1647                           
  1648                           ;main.c: 211: TRISCbits.TRISC5 = 0;
  1649  03B4  128E               	bcf	14,5	;volatile
  1650                           
  1651                           ;main.c: 212: TRISCbits.TRISC6 = 0;
  1652  03B5  130E               	bcf	14,6	;volatile
  1653                           
  1654                           ;main.c: 215: TRISCbits.TRISC7 = 0;
  1655  03B6  138E               	bcf	14,7	;volatile
  1656  03B7  0008               	return
  1657  03B8                     __end_of_Pin_Initialize:	
  1658                           
  1659                           	psect	text7
  1660  0379                     __ptext7:	
  1661 ;; *************** function _Oscillator_Initialize *****************
  1662 ;; Defined at:
  1663 ;;		line 188 in file "main.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;		None
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;		None
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1677 ;;      Params:         0       0       0       0
  1678 ;;      Locals:         0       0       0       0
  1679 ;;      Temps:          0       0       0       0
  1680 ;;      Totals:         0       0       0       0
  1681 ;;Total ram usage:        0 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; This function calls:
  1684 ;;		Nothing
  1685 ;; This function is called by:
  1686 ;;		_Initialize
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           
  1691                           ;psect for function _Oscillator_Initialize
  1692  0379                     _Oscillator_Initialize:	
  1693                           
  1694                           ;main.c: 190: OSCCON = 0x73;
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _Oscillator_Initialize: [wreg]
  1698  0379  3073               	movlw	115
  1699  037A  0021               	movlb	1	; select bank1
  1700  037B  0099               	movwf	25	;volatile
  1701  037C  0008               	return
  1702  037D                     __end_of_Oscillator_Initialize:	
  1703                           
  1704                           	psect	text8
  1705  04AE                     __ptext8:	
  1706 ;; *************** function _Calc_Duty *****************
  1707 ;; Defined at:
  1708 ;;		line 152 in file "main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  i               2   37[BANK0 ] int 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1722 ;;      Params:         0       0       0       0
  1723 ;;      Locals:         0       5       0       0
  1724 ;;      Temps:          1       0       0       0
  1725 ;;      Totals:         1       5       0       0
  1726 ;;Total ram usage:        6 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    2
  1729 ;; This function calls:
  1730 ;;		___bmul
  1731 ;;		___ftmul
  1732 ;;		___fttol
  1733 ;;		___lbtoft
  1734 ;; This function is called by:
  1735 ;;		_main
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _Calc_Duty
  1741  04AE                     _Calc_Duty:	
  1742                           
  1743                           ;main.c: 154: int i;;main.c: 158: for (i = 1; i < 5; i++)
  1744                           
  1745                           ;incstack = 0
  1746                           ; Regs used in _Calc_Duty: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1747  04AE  3001               	movlw	1
  1748  04AF  0020               	movlb	0	; select bank0
  1749  04B0  00C5               	movwf	Calc_Duty@i
  1750  04B1  3000               	movlw	0
  1751  04B2  00C6               	movwf	Calc_Duty@i+1
  1752  04B3                     L2:	
  1753  04B3  0846               	movf	Calc_Duty@i+1,w
  1754  04B4  3A80               	xorlw	128
  1755  04B5  00FC               	movwf	??_Calc_Duty
  1756  04B6  3080               	movlw	128
  1757  04B7  027C               	subwf	??_Calc_Duty,w
  1758  04B8  1D03               	skipz
  1759  04B9  2CBC               	goto	u1065
  1760  04BA  3005               	movlw	5
  1761  04BB  0245               	subwf	Calc_Duty@i,w
  1762  04BC                     u1065:	
  1763  04BC  1803               	btfsc	3,0
  1764  04BD  0008               	return
  1765                           
  1766                           ;main.c: 159: {;main.c: 160: servo_duty[i] = ((servo_raw_data[i] * port[i - 1].conv) * 2
      +                          000000);
  1767  04BE  0020               	movlb	0	; select bank0
  1768  04BF  0845               	movf	Calc_Duty@i,w
  1769  04C0  3E64               	addlw	(low (_servo_raw_data| 0))& (0+255)
  1770  04C1  0086               	movwf	6
  1771  04C2  0187               	clrf	7
  1772  04C3  0801               	movf	1,w
  1773  04C4  3183  23B8  3184   	fcall	___lbtoft
  1774  04C7  0878               	movf	?___lbtoft,w
  1775  04C8  0020               	movlb	0	; select bank0
  1776  04C9  00A7               	movwf	___ftmul@f2
  1777  04CA  0879               	movf	?___lbtoft+1,w
  1778  04CB  00A8               	movwf	___ftmul@f2+1
  1779  04CC  087A               	movf	?___lbtoft+2,w
  1780  04CD  00A9               	movwf	___ftmul@f2+2
  1781  04CE  3005               	movlw	5
  1782  04CF  00FC               	movwf	??_Calc_Duty
  1783  04D0  087C               	movf	??_Calc_Duty,w
  1784  04D1  00F0               	movwf	___bmul@multiplicand
  1785  04D2  0845               	movf	Calc_Duty@i,w
  1786  04D3  3EFF               	addlw	255
  1787  04D4  3183  2396  3184   	fcall	___bmul
  1788  04D7  3EA0               	addlw	(low (_port| 0))& (0+255)
  1789  04D8  0086               	movwf	6
  1790  04D9  0187               	clrf	7
  1791  04DA  3F40               	moviw [0]fsr1
  1792  04DB  0020               	movlb	0	; select bank0
  1793  04DC  00A4               	movwf	___ftmul@f1
  1794  04DD  3F41               	moviw [1]fsr1
  1795  04DE  00A5               	movwf	___ftmul@f1+1
  1796  04DF  3F42               	moviw [2]fsr1
  1797  04E0  00A6               	movwf	___ftmul@f1+2
  1798  04E1  3186  261A  3184   	fcall	___ftmul
  1799  04E4  0020               	movlb	0	; select bank0
  1800  04E5  0824               	movf	?___ftmul,w
  1801  04E6  00C2               	movwf	_Calc_Duty$817
  1802  04E7  0825               	movf	?___ftmul+1,w
  1803  04E8  00C3               	movwf	_Calc_Duty$817+1
  1804  04E9  0826               	movf	?___ftmul+2,w
  1805  04EA  00C4               	movwf	_Calc_Duty$817+2
  1806                           
  1807                           ;main.c: 159: {;main.c: 160: servo_duty[i] = ((servo_raw_data[i] * port[i - 1].conv) * 2
      +                          000000);
  1808  04EB  0842               	movf	_Calc_Duty$817,w
  1809  04EC  00A7               	movwf	___ftmul@f2
  1810  04ED  0843               	movf	_Calc_Duty$817+1,w
  1811  04EE  00A8               	movwf	___ftmul@f2+1
  1812  04EF  0844               	movf	_Calc_Duty$817+2,w
  1813  04F0  00A9               	movwf	___ftmul@f2+2
  1814  04F1  3024               	movlw	36
  1815  04F2  00A4               	movwf	___ftmul@f1
  1816  04F3  30F4               	movlw	244
  1817  04F4  00A5               	movwf	___ftmul@f1+1
  1818  04F5  3049               	movlw	73
  1819  04F6  00A6               	movwf	___ftmul@f1+2
  1820  04F7  3186  261A  3184   	fcall	___ftmul
  1821  04FA  0020               	movlb	0	; select bank0
  1822  04FB  0824               	movf	?___ftmul,w
  1823  04FC  00B4               	movwf	___fttol@f1
  1824  04FD  0825               	movf	?___ftmul+1,w
  1825  04FE  00B5               	movwf	___fttol@f1+1
  1826  04FF  0826               	movf	?___ftmul+2,w
  1827  0500  00B6               	movwf	___fttol@f1+2
  1828  0501  3185  2593  3184   	fcall	___fttol
  1829  0504  0020               	movlb	0	; select bank0
  1830  0505  3545               	lslf	Calc_Duty@i,w
  1831  0506  3E5A               	addlw	(low (_servo_duty| 0))& (0+255)
  1832  0507  0086               	movwf	6
  1833  0508  0187               	clrf	7
  1834  0509  0834               	movf	?___fttol,w
  1835  050A  3FC0               	movwi [0]fsr1
  1836  050B  0835               	movf	?___fttol+1,w
  1837  050C  3FC1               	movwi [1]fsr1
  1838  050D  3001               	movlw	1
  1839  050E  07C5               	addwf	Calc_Duty@i,f
  1840  050F  3000               	movlw	0
  1841  0510  3DC6               	addwfc	Calc_Duty@i+1,f
  1842  0511  2CB3               	goto	L2
  1843  0512                     __end_of_Calc_Duty:	
  1844                           
  1845                           	psect	text9
  1846  03B8                     __ptext9:	
  1847 ;; *************** function ___lbtoft *****************
  1848 ;; Defined at:
  1849 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lbtoft.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  c               1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  c               1   11[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  3    8[COMMON] float 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1863 ;;      Params:         3       0       0       0
  1864 ;;      Locals:         1       0       0       0
  1865 ;;      Temps:          0       4       0       0
  1866 ;;      Totals:         4       4       0       0
  1867 ;;Total ram usage:        8 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    1
  1870 ;; This function calls:
  1871 ;;		___ftpack
  1872 ;; This function is called by:
  1873 ;;		_Calc_Duty
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function ___lbtoft
  1879  03B8                     ___lbtoft:	
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1883                           ;___lbtoft@c stored from wreg
  1884  03B8  00FB               	movwf	___lbtoft@c
  1885  03B9  087B               	movf	___lbtoft@c,w
  1886  03BA  0020               	movlb	0	; select bank0
  1887  03BB  00A0               	movwf	??___lbtoft
  1888  03BC  01A1               	clrf	??___lbtoft+1
  1889  03BD  01A2               	clrf	??___lbtoft+2
  1890  03BE  0820               	movf	??___lbtoft,w
  1891  03BF  00F0               	movwf	___ftpack@arg
  1892  03C0  0821               	movf	??___lbtoft+1,w
  1893  03C1  00F1               	movwf	___ftpack@arg+1
  1894  03C2  0822               	movf	??___lbtoft+2,w
  1895  03C3  00F2               	movwf	___ftpack@arg+2
  1896  03C4  308E               	movlw	142
  1897  03C5  00A3               	movwf	??___lbtoft+3
  1898  03C6  0823               	movf	??___lbtoft+3,w
  1899  03C7  00F3               	movwf	___ftpack@exp
  1900  03C8  01F4               	clrf	___ftpack@sign
  1901  03C9  3184  244A         	fcall	___ftpack
  1902  03CB  0870               	movf	?___ftpack,w
  1903  03CC  00F8               	movwf	?___lbtoft
  1904  03CD  0871               	movf	?___ftpack+1,w
  1905  03CE  00F9               	movwf	?___lbtoft+1
  1906  03CF  0872               	movf	?___ftpack+2,w
  1907  03D0  00FA               	movwf	?___lbtoft+2
  1908  03D1  0008               	return
  1909  03D2                     __end_of___lbtoft:	
  1910                           
  1911                           	psect	text10
  1912  0593                     __ptext10:	
  1913 ;; *************** function ___fttol *****************
  1914 ;; Defined at:
  1915 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fttol.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  f1              3   20[BANK0 ] float 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  lval            4   29[BANK0 ] unsigned long 
  1920 ;;  exp1            1   33[BANK0 ] unsigned char 
  1921 ;;  sign1           1   28[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  4   20[BANK0 ] long 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1931 ;;      Params:         0       4       0       0
  1932 ;;      Locals:         0       6       0       0
  1933 ;;      Temps:          0       4       0       0
  1934 ;;      Totals:         0      14       0       0
  1935 ;;Total ram usage:       14 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_Calc_Duty
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           
  1945                           ;psect for function ___fttol
  1946  0593                     ___fttol:	
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1950  0593  0020               	movlb	0	; select bank0
  1951  0594  0834               	movf	___fttol@f1,w
  1952  0595  00B8               	movwf	??___fttol
  1953  0596  0835               	movf	___fttol@f1+1,w
  1954  0597  00B9               	movwf	??___fttol+1
  1955  0598  0836               	movf	___fttol@f1+2,w
  1956  0599  00BA               	movwf	??___fttol+2
  1957  059A  1003               	clrc
  1958  059B  0D39               	rlf	??___fttol+1,w
  1959  059C  0D3A               	rlf	??___fttol+2,w
  1960  059D  00BB               	movwf	??___fttol+3
  1961  059E  083B               	movf	??___fttol+3,w
  1962  059F  00C1               	movwf	___fttol@exp1
  1963  05A0  0841               	movf	___fttol@exp1,w
  1964  05A1  1D03               	btfss	3,2
  1965  05A2  2DAC               	goto	l1063
  1966  05A3  3000               	movlw	0
  1967  05A4  00B7               	movwf	?___fttol+3
  1968  05A5  3000               	movlw	0
  1969  05A6  00B6               	movwf	?___fttol+2
  1970  05A7  3000               	movlw	0
  1971  05A8  00B5               	movwf	?___fttol+1
  1972  05A9  3000               	movlw	0
  1973  05AA  00B4               	movwf	?___fttol
  1974  05AB  0008               	return
  1975  05AC                     l1063:	
  1976  05AC  0834               	movf	___fttol@f1,w
  1977  05AD  00B8               	movwf	??___fttol
  1978  05AE  0835               	movf	___fttol@f1+1,w
  1979  05AF  00B9               	movwf	??___fttol+1
  1980  05B0  0836               	movf	___fttol@f1+2,w
  1981  05B1  00BA               	movwf	??___fttol+2
  1982  05B2  3017               	movlw	23
  1983  05B3                     u935:	
  1984  05B3  36BA               	lsrf	??___fttol+2,f
  1985  05B4  0CB9               	rrf	??___fttol+1,f
  1986  05B5  0CB8               	rrf	??___fttol,f
  1987  05B6  0B89               	decfsz	9,f
  1988  05B7  2DB3               	goto	u935
  1989  05B8  0838               	movf	??___fttol,w
  1990  05B9  00BB               	movwf	??___fttol+3
  1991  05BA  083B               	movf	??___fttol+3,w
  1992  05BB  00BC               	movwf	___fttol@sign1
  1993  05BC  17B5               	bsf	___fttol@f1+1,7
  1994  05BD  30FF               	movlw	255
  1995  05BE  05B4               	andwf	___fttol@f1,f
  1996  05BF  30FF               	movlw	255
  1997  05C0  05B5               	andwf	___fttol@f1+1,f
  1998  05C1  3000               	movlw	0
  1999  05C2  05B6               	andwf	___fttol@f1+2,f
  2000  05C3  0834               	movf	___fttol@f1,w
  2001  05C4  00BD               	movwf	___fttol@lval
  2002  05C5  0835               	movf	___fttol@f1+1,w
  2003  05C6  00BE               	movwf	___fttol@lval+1
  2004  05C7  0836               	movf	___fttol@f1+2,w
  2005  05C8  00BF               	movwf	___fttol@lval+2
  2006  05C9  01C0               	clrf	___fttol@lval+3
  2007  05CA  308E               	movlw	142
  2008  05CB  02C1               	subwf	___fttol@exp1,f
  2009  05CC  1FC1               	btfss	___fttol@exp1,7
  2010  05CD  2DEA               	goto	l1083
  2011  05CE  0841               	movf	___fttol@exp1,w
  2012  05CF  3A80               	xorlw	128
  2013  05D0  3E8F               	addlw	143
  2014  05D1  1803               	skipnc
  2015  05D2  2DDC               	goto	l1081
  2016  05D3  3000               	movlw	0
  2017  05D4  00B7               	movwf	?___fttol+3
  2018  05D5  3000               	movlw	0
  2019  05D6  00B6               	movwf	?___fttol+2
  2020  05D7  3000               	movlw	0
  2021  05D8  00B5               	movwf	?___fttol+1
  2022  05D9  3000               	movlw	0
  2023  05DA  00B4               	movwf	?___fttol
  2024  05DB  0008               	return
  2025  05DC                     l1081:	
  2026  05DC  3001               	movlw	1
  2027  05DD                     u965:	
  2028  05DD  36C0               	lsrf	___fttol@lval+3,f
  2029  05DE  0CBF               	rrf	___fttol@lval+2,f
  2030  05DF  0CBE               	rrf	___fttol@lval+1,f
  2031  05E0  0CBD               	rrf	___fttol@lval,f
  2032  05E1  0B89               	decfsz	9,f
  2033  05E2  2DDD               	goto	u965
  2034  05E3  3001               	movlw	1
  2035  05E4  00B8               	movwf	??___fttol
  2036  05E5  0838               	movf	??___fttol,w
  2037  05E6  07C1               	addwf	___fttol@exp1,f
  2038  05E7  1903               	btfsc	3,2
  2039  05E8  2E03               	goto	l1091
  2040  05E9  2DDC               	goto	l1081
  2041  05EA                     l1083:	
  2042  05EA  3018               	movlw	24
  2043  05EB  0241               	subwf	___fttol@exp1,w
  2044  05EC  1C03               	skipc
  2045  05ED  2E00               	goto	l489
  2046  05EE  3000               	movlw	0
  2047  05EF  00B7               	movwf	?___fttol+3
  2048  05F0  3000               	movlw	0
  2049  05F1  00B6               	movwf	?___fttol+2
  2050  05F2  3000               	movlw	0
  2051  05F3  00B5               	movwf	?___fttol+1
  2052  05F4  3000               	movlw	0
  2053  05F5  00B4               	movwf	?___fttol
  2054  05F6  0008               	return
  2055  05F7                     l1089:	
  2056  05F7  3001               	movlw	1
  2057  05F8                     u995:	
  2058  05F8  35BD               	lslf	___fttol@lval,f
  2059  05F9  0DBE               	rlf	___fttol@lval+1,f
  2060  05FA  0DBF               	rlf	___fttol@lval+2,f
  2061  05FB  0DC0               	rlf	___fttol@lval+3,f
  2062  05FC  0B89               	decfsz	9,f
  2063  05FD  2DF8               	goto	u995
  2064  05FE  3001               	movlw	1
  2065  05FF  02C1               	subwf	___fttol@exp1,f
  2066  0600                     l489:	
  2067  0600  0841               	movf	___fttol@exp1,w
  2068  0601  1D03               	btfss	3,2
  2069  0602  2DF7               	goto	l1089
  2070  0603                     l1091:	
  2071  0603  083C               	movf	___fttol@sign1,w
  2072  0604  1903               	btfsc	3,2
  2073  0605  2E11               	goto	l1095
  2074  0606  09BD               	comf	___fttol@lval,f
  2075  0607  09BE               	comf	___fttol@lval+1,f
  2076  0608  09BF               	comf	___fttol@lval+2,f
  2077  0609  09C0               	comf	___fttol@lval+3,f
  2078  060A  0ABD               	incf	___fttol@lval,f
  2079  060B  1903               	skipnz
  2080  060C  0ABE               	incf	___fttol@lval+1,f
  2081  060D  1903               	skipnz
  2082  060E  0ABF               	incf	___fttol@lval+2,f
  2083  060F  1903               	skipnz
  2084  0610  0AC0               	incf	___fttol@lval+3,f
  2085  0611                     l1095:	
  2086  0611  0840               	movf	___fttol@lval+3,w
  2087  0612  00B7               	movwf	?___fttol+3
  2088  0613  083F               	movf	___fttol@lval+2,w
  2089  0614  00B6               	movwf	?___fttol+2
  2090  0615  083E               	movf	___fttol@lval+1,w
  2091  0616  00B5               	movwf	?___fttol+1
  2092  0617  083D               	movf	___fttol@lval,w
  2093  0618  00B4               	movwf	?___fttol
  2094  0619  0008               	return
  2095  061A                     __end_of___fttol:	
  2096                           
  2097                           	psect	text11
  2098  061A                     __ptext11:	
  2099 ;; *************** function ___ftmul *****************
  2100 ;; Defined at:
  2101 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ftmul.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  f1              3    4[BANK0 ] float 
  2104 ;;  f2              3    7[BANK0 ] float 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  f3_as_produc    3   15[BANK0 ] unsigned um
  2107 ;;  sign            1   19[BANK0 ] unsigned char 
  2108 ;;  cntr            1   18[BANK0 ] unsigned char 
  2109 ;;  exp             1   14[BANK0 ] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  3    4[BANK0 ] float 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2119 ;;      Params:         0       6       0       0
  2120 ;;      Locals:         0       6       0       0
  2121 ;;      Temps:          0       4       0       0
  2122 ;;      Totals:         0      16       0       0
  2123 ;;Total ram usage:       16 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		___ftpack
  2128 ;; This function is called by:
  2129 ;;		_Calc_Duty
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function ___ftmul
  2135  061A                     ___ftmul:	
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2139  061A  0020               	movlb	0	; select bank0
  2140  061B  0824               	movf	___ftmul@f1,w
  2141  061C  00AA               	movwf	??___ftmul
  2142  061D  0825               	movf	___ftmul@f1+1,w
  2143  061E  00AB               	movwf	??___ftmul+1
  2144  061F  0826               	movf	___ftmul@f1+2,w
  2145  0620  00AC               	movwf	??___ftmul+2
  2146  0621  1003               	clrc
  2147  0622  0D2B               	rlf	??___ftmul+1,w
  2148  0623  0D2C               	rlf	??___ftmul+2,w
  2149  0624  00AD               	movwf	??___ftmul+3
  2150  0625  082D               	movf	??___ftmul+3,w
  2151  0626  00AE               	movwf	___ftmul@exp
  2152  0627  082E               	movf	___ftmul@exp,w
  2153  0628  1D03               	btfss	3,2
  2154  0629  2E31               	goto	l1013
  2155  062A  3000               	movlw	0
  2156  062B  00A4               	movwf	?___ftmul
  2157  062C  3000               	movlw	0
  2158  062D  00A5               	movwf	?___ftmul+1
  2159  062E  3000               	movlw	0
  2160  062F  00A6               	movwf	?___ftmul+2
  2161  0630  0008               	return
  2162  0631                     l1013:	
  2163  0631  0827               	movf	___ftmul@f2,w
  2164  0632  00AA               	movwf	??___ftmul
  2165  0633  0828               	movf	___ftmul@f2+1,w
  2166  0634  00AB               	movwf	??___ftmul+1
  2167  0635  0829               	movf	___ftmul@f2+2,w
  2168  0636  00AC               	movwf	??___ftmul+2
  2169  0637  1003               	clrc
  2170  0638  0D2B               	rlf	??___ftmul+1,w
  2171  0639  0D2C               	rlf	??___ftmul+2,w
  2172  063A  00AD               	movwf	??___ftmul+3
  2173  063B  082D               	movf	??___ftmul+3,w
  2174  063C  00B3               	movwf	___ftmul@sign
  2175  063D  0833               	movf	___ftmul@sign,w
  2176  063E  1D03               	btfss	3,2
  2177  063F  2E47               	goto	l1019
  2178  0640  3000               	movlw	0
  2179  0641  00A4               	movwf	?___ftmul
  2180  0642  3000               	movlw	0
  2181  0643  00A5               	movwf	?___ftmul+1
  2182  0644  3000               	movlw	0
  2183  0645  00A6               	movwf	?___ftmul+2
  2184  0646  0008               	return
  2185  0647                     l1019:	
  2186  0647  0833               	movf	___ftmul@sign,w
  2187  0648  3E7B               	addlw	123
  2188  0649  00AA               	movwf	??___ftmul
  2189  064A  082A               	movf	??___ftmul,w
  2190  064B  07AE               	addwf	___ftmul@exp,f
  2191  064C  0824               	movf	___ftmul@f1,w
  2192  064D  00AA               	movwf	??___ftmul
  2193  064E  0825               	movf	___ftmul@f1+1,w
  2194  064F  00AB               	movwf	??___ftmul+1
  2195  0650  0826               	movf	___ftmul@f1+2,w
  2196  0651  00AC               	movwf	??___ftmul+2
  2197  0652  3010               	movlw	16
  2198  0653                     u825:	
  2199  0653  36AC               	lsrf	??___ftmul+2,f
  2200  0654  0CAB               	rrf	??___ftmul+1,f
  2201  0655  0CAA               	rrf	??___ftmul,f
  2202  0656  0B89               	decfsz	9,f
  2203  0657  2E53               	goto	u825
  2204  0658  082A               	movf	??___ftmul,w
  2205  0659  00AD               	movwf	??___ftmul+3
  2206  065A  082D               	movf	??___ftmul+3,w
  2207  065B  00B3               	movwf	___ftmul@sign
  2208  065C  0827               	movf	___ftmul@f2,w
  2209  065D  00AA               	movwf	??___ftmul
  2210  065E  0828               	movf	___ftmul@f2+1,w
  2211  065F  00AB               	movwf	??___ftmul+1
  2212  0660  0829               	movf	___ftmul@f2+2,w
  2213  0661  00AC               	movwf	??___ftmul+2
  2214  0662  3010               	movlw	16
  2215  0663                     u835:	
  2216  0663  36AC               	lsrf	??___ftmul+2,f
  2217  0664  0CAB               	rrf	??___ftmul+1,f
  2218  0665  0CAA               	rrf	??___ftmul,f
  2219  0666  0B89               	decfsz	9,f
  2220  0667  2E63               	goto	u835
  2221  0668  082A               	movf	??___ftmul,w
  2222  0669  00AD               	movwf	??___ftmul+3
  2223  066A  082D               	movf	??___ftmul+3,w
  2224  066B  06B3               	xorwf	___ftmul@sign,f
  2225  066C  3080               	movlw	128
  2226  066D  00AA               	movwf	??___ftmul
  2227  066E  082A               	movf	??___ftmul,w
  2228  066F  05B3               	andwf	___ftmul@sign,f
  2229  0670  17A5               	bsf	___ftmul@f1+1,7
  2230  0671  17A8               	bsf	___ftmul@f2+1,7
  2231  0672  30FF               	movlw	255
  2232  0673  05A7               	andwf	___ftmul@f2,f
  2233  0674  30FF               	movlw	255
  2234  0675  05A8               	andwf	___ftmul@f2+1,f
  2235  0676  3000               	movlw	0
  2236  0677  05A9               	andwf	___ftmul@f2+2,f
  2237  0678  3000               	movlw	0
  2238  0679  00AF               	movwf	___ftmul@f3_as_product
  2239  067A  3000               	movlw	0
  2240  067B  00B0               	movwf	___ftmul@f3_as_product+1
  2241  067C  3000               	movlw	0
  2242  067D  00B1               	movwf	___ftmul@f3_as_product+2
  2243  067E  3007               	movlw	7
  2244  067F  00AA               	movwf	??___ftmul
  2245  0680  082A               	movf	??___ftmul,w
  2246  0681  00B2               	movwf	___ftmul@cntr
  2247  0682                     l1031:	
  2248  0682  1C24               	btfss	___ftmul@f1,0
  2249  0683  2E8A               	goto	l1035
  2250  0684  0827               	movf	___ftmul@f2,w
  2251  0685  07AF               	addwf	___ftmul@f3_as_product,f
  2252  0686  0828               	movf	___ftmul@f2+1,w
  2253  0687  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  2254  0688  0829               	movf	___ftmul@f2+2,w
  2255  0689  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  2256  068A                     l1035:	
  2257  068A  3001               	movlw	1
  2258  068B                     u855:	
  2259  068B  36A6               	lsrf	___ftmul@f1+2,f
  2260  068C  0CA5               	rrf	___ftmul@f1+1,f
  2261  068D  0CA4               	rrf	___ftmul@f1,f
  2262  068E  0B89               	decfsz	9,f
  2263  068F  2E8B               	goto	u855
  2264  0690  3001               	movlw	1
  2265  0691                     u865:	
  2266  0691  35A7               	lslf	___ftmul@f2,f
  2267  0692  0DA8               	rlf	___ftmul@f2+1,f
  2268  0693  0DA9               	rlf	___ftmul@f2+2,f
  2269  0694  0B89               	decfsz	9,f
  2270  0695  2E91               	goto	u865
  2271  0696  3001               	movlw	1
  2272  0697  02B2               	subwf	___ftmul@cntr,f
  2273  0698  1D03               	btfss	3,2
  2274  0699  2E82               	goto	l1031
  2275  069A  3009               	movlw	9
  2276  069B  00AA               	movwf	??___ftmul
  2277  069C  082A               	movf	??___ftmul,w
  2278  069D  00B2               	movwf	___ftmul@cntr
  2279  069E                     l1043:	
  2280  069E  1C24               	btfss	___ftmul@f1,0
  2281  069F  2EA6               	goto	l1047
  2282  06A0  0827               	movf	___ftmul@f2,w
  2283  06A1  07AF               	addwf	___ftmul@f3_as_product,f
  2284  06A2  0828               	movf	___ftmul@f2+1,w
  2285  06A3  3DB0               	addwfc	___ftmul@f3_as_product+1,f
  2286  06A4  0829               	movf	___ftmul@f2+2,w
  2287  06A5  3DB1               	addwfc	___ftmul@f3_as_product+2,f
  2288  06A6                     l1047:	
  2289  06A6  3001               	movlw	1
  2290  06A7                     u895:	
  2291  06A7  36A6               	lsrf	___ftmul@f1+2,f
  2292  06A8  0CA5               	rrf	___ftmul@f1+1,f
  2293  06A9  0CA4               	rrf	___ftmul@f1,f
  2294  06AA  0B89               	decfsz	9,f
  2295  06AB  2EA7               	goto	u895
  2296  06AC  3001               	movlw	1
  2297  06AD                     u905:	
  2298  06AD  36B1               	lsrf	___ftmul@f3_as_product+2,f
  2299  06AE  0CB0               	rrf	___ftmul@f3_as_product+1,f
  2300  06AF  0CAF               	rrf	___ftmul@f3_as_product,f
  2301  06B0  0B89               	decfsz	9,f
  2302  06B1  2EAD               	goto	u905
  2303  06B2  3001               	movlw	1
  2304  06B3  02B2               	subwf	___ftmul@cntr,f
  2305  06B4  1D03               	btfss	3,2
  2306  06B5  2E9E               	goto	l1043
  2307  06B6  082F               	movf	___ftmul@f3_as_product,w
  2308  06B7  00F0               	movwf	___ftpack@arg
  2309  06B8  0830               	movf	___ftmul@f3_as_product+1,w
  2310  06B9  00F1               	movwf	___ftpack@arg+1
  2311  06BA  0831               	movf	___ftmul@f3_as_product+2,w
  2312  06BB  00F2               	movwf	___ftpack@arg+2
  2313  06BC  082E               	movf	___ftmul@exp,w
  2314  06BD  00AA               	movwf	??___ftmul
  2315  06BE  082A               	movf	??___ftmul,w
  2316  06BF  00F3               	movwf	___ftpack@exp
  2317  06C0  0833               	movf	___ftmul@sign,w
  2318  06C1  00AB               	movwf	??___ftmul+1
  2319  06C2  082B               	movf	??___ftmul+1,w
  2320  06C3  00F4               	movwf	___ftpack@sign
  2321  06C4  3184  244A         	fcall	___ftpack
  2322  06C6  0870               	movf	?___ftpack,w
  2323  06C7  0020               	movlb	0	; select bank0
  2324  06C8  00A4               	movwf	?___ftmul
  2325  06C9  0871               	movf	?___ftpack+1,w
  2326  06CA  00A5               	movwf	?___ftmul+1
  2327  06CB  0872               	movf	?___ftpack+2,w
  2328  06CC  00A6               	movwf	?___ftmul+2
  2329  06CD  0008               	return
  2330  06CE                     __end_of___ftmul:	
  2331                           
  2332                           	psect	text12
  2333  044A                     __ptext12:	
  2334 ;; *************** function ___ftpack *****************
  2335 ;; Defined at:
  2336 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\float.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  arg             3    0[COMMON] unsigned um
  2339 ;;  exp             1    3[COMMON] unsigned char 
  2340 ;;  sign            1    4[COMMON] unsigned char 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  3    0[COMMON] float 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2352 ;;      Params:         5       0       0       0
  2353 ;;      Locals:         0       0       0       0
  2354 ;;      Temps:          3       0       0       0
  2355 ;;      Totals:         8       0       0       0
  2356 ;;Total ram usage:        8 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		___ftmul
  2362 ;;		___lbtoft
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           
  2367                           ;psect for function ___ftpack
  2368  044A                     ___ftpack:	
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2372  044A  0873               	movf	___ftpack@exp,w
  2373  044B  1903               	btfsc	3,2
  2374  044C  2C52               	goto	l913
  2375  044D  0872               	movf	___ftpack@arg+2,w
  2376  044E  0471               	iorwf	___ftpack@arg+1,w
  2377  044F  0470               	iorwf	___ftpack@arg,w
  2378  0450  1D03               	skipz
  2379  0451  2C63               	goto	l919
  2380  0452                     l913:	
  2381  0452  3000               	movlw	0
  2382  0453  00F0               	movwf	?___ftpack
  2383  0454  3000               	movlw	0
  2384  0455  00F1               	movwf	?___ftpack+1
  2385  0456  3000               	movlw	0
  2386  0457  00F2               	movwf	?___ftpack+2
  2387  0458  0008               	return
  2388  0459                     l917:	
  2389  0459  3001               	movlw	1
  2390  045A  00F5               	movwf	??___ftpack
  2391  045B  0875               	movf	??___ftpack,w
  2392  045C  07F3               	addwf	___ftpack@exp,f
  2393  045D  3001               	movlw	1
  2394  045E                     u645:	
  2395  045E  36F2               	lsrf	___ftpack@arg+2,f
  2396  045F  0CF1               	rrf	___ftpack@arg+1,f
  2397  0460  0CF0               	rrf	___ftpack@arg,f
  2398  0461  0B89               	decfsz	9,f
  2399  0462  2C5E               	goto	u645
  2400  0463                     l919:	
  2401  0463  30FE               	movlw	254
  2402  0464  0572               	andwf	___ftpack@arg+2,w
  2403  0465  1903               	btfsc	3,2
  2404  0466  2C7C               	goto	l398
  2405  0467  2C59               	goto	l917
  2406  0468                     l921:	
  2407  0468  3001               	movlw	1
  2408  0469  00F5               	movwf	??___ftpack
  2409  046A  0875               	movf	??___ftpack,w
  2410  046B  07F3               	addwf	___ftpack@exp,f
  2411  046C  3001               	movlw	1
  2412  046D  07F0               	addwf	___ftpack@arg,f
  2413  046E  3000               	movlw	0
  2414  046F  1803               	skipnc
  2415  0470  3001               	movlw	1
  2416  0471  07F1               	addwf	___ftpack@arg+1,f
  2417  0472  3000               	movlw	0
  2418  0473  1803               	skipnc
  2419  0474  3001               	movlw	1
  2420  0475  07F2               	addwf	___ftpack@arg+2,f
  2421  0476  3001               	movlw	1
  2422  0477                     u665:	
  2423  0477  36F2               	lsrf	___ftpack@arg+2,f
  2424  0478  0CF1               	rrf	___ftpack@arg+1,f
  2425  0479  0CF0               	rrf	___ftpack@arg,f
  2426  047A  0B89               	decfsz	9,f
  2427  047B  2C77               	goto	u665
  2428  047C                     l398:	
  2429  047C  30FF               	movlw	255
  2430  047D  0572               	andwf	___ftpack@arg+2,w
  2431  047E  1903               	btfsc	3,2
  2432  047F  2C89               	goto	l929
  2433  0480  2C68               	goto	l921
  2434  0481                     l927:	
  2435  0481  3001               	movlw	1
  2436  0482  02F3               	subwf	___ftpack@exp,f
  2437  0483  3001               	movlw	1
  2438  0484                     u685:	
  2439  0484  35F0               	lslf	___ftpack@arg,f
  2440  0485  0DF1               	rlf	___ftpack@arg+1,f
  2441  0486  0DF2               	rlf	___ftpack@arg+2,f
  2442  0487  0B89               	decfsz	9,f
  2443  0488  2C84               	goto	u685
  2444  0489                     l929:	
  2445  0489  1BF1               	btfsc	___ftpack@arg+1,7
  2446  048A  2C8F               	goto	l405
  2447  048B  3002               	movlw	2
  2448  048C  0273               	subwf	___ftpack@exp,w
  2449  048D  1803               	skipnc
  2450  048E  2C81               	goto	l927
  2451  048F                     l405:	
  2452  048F  1873               	btfsc	___ftpack@exp,0
  2453  0490  2C97               	goto	l406
  2454  0491  30FF               	movlw	255
  2455  0492  05F0               	andwf	___ftpack@arg,f
  2456  0493  307F               	movlw	127
  2457  0494  05F1               	andwf	___ftpack@arg+1,f
  2458  0495  30FF               	movlw	255
  2459  0496  05F2               	andwf	___ftpack@arg+2,f
  2460  0497                     l406:	
  2461  0497  1003               	clrc
  2462  0498  0CF3               	rrf	___ftpack@exp,f
  2463  0499  0873               	movf	___ftpack@exp,w
  2464  049A  00F5               	movwf	??___ftpack
  2465  049B  01F6               	clrf	??___ftpack+1
  2466  049C  01F7               	clrf	??___ftpack+2
  2467  049D  3010               	movlw	16
  2468  049E                     u725:	
  2469  049E  35F5               	lslf	??___ftpack,f
  2470  049F  0DF6               	rlf	??___ftpack+1,f
  2471  04A0  0DF7               	rlf	??___ftpack+2,f
  2472  04A1  0B89               	decfsz	9,f
  2473  04A2  2C9E               	goto	u725
  2474  04A3  0875               	movf	??___ftpack,w
  2475  04A4  04F0               	iorwf	___ftpack@arg,f
  2476  04A5  0876               	movf	??___ftpack+1,w
  2477  04A6  04F1               	iorwf	___ftpack@arg+1,f
  2478  04A7  0877               	movf	??___ftpack+2,w
  2479  04A8  04F2               	iorwf	___ftpack@arg+2,f
  2480  04A9  0874               	movf	___ftpack@sign,w
  2481  04AA  1903               	btfsc	3,2
  2482  04AB  0008               	return
  2483  04AC  17F2               	bsf	___ftpack@arg+2,7
  2484  04AD  0008               	return
  2485  04AE                     __end_of___ftpack:	
  2486                           
  2487                           	psect	text13
  2488  0396                     __ptext13:	
  2489 ;; *************** function ___bmul *****************
  2490 ;; Defined at:
  2491 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  multiplier      1    wreg     unsigned char 
  2494 ;;  multiplicand    1    0[COMMON] unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  multiplier      1    3[COMMON] unsigned char 
  2497 ;;  product         1    2[COMMON] unsigned char 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      unsigned char 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2507 ;;      Params:         1       0       0       0
  2508 ;;      Locals:         2       0       0       0
  2509 ;;      Temps:          1       0       0       0
  2510 ;;      Totals:         4       0       0       0
  2511 ;;Total ram usage:        4 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_Calc_Duty
  2517 ;;		_Servo_Initialize
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function ___bmul
  2523  0396                     ___bmul:	
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2527                           ;___bmul@multiplier stored from wreg
  2528  0396  00F3               	movwf	___bmul@multiplier
  2529  0397  01F2               	clrf	___bmul@product
  2530  0398                     l897:	
  2531  0398  1C73               	btfss	___bmul@multiplier,0
  2532  0399  2B9E               	goto	l901
  2533  039A  0870               	movf	___bmul@multiplicand,w
  2534  039B  00F1               	movwf	??___bmul
  2535  039C  0871               	movf	??___bmul,w
  2536  039D  07F2               	addwf	___bmul@product,f
  2537  039E                     l901:	
  2538  039E  1003               	clrc
  2539  039F  0DF0               	rlf	___bmul@multiplicand,f
  2540  03A0  1003               	clrc
  2541  03A1  0CF3               	rrf	___bmul@multiplier,f
  2542  03A2  0873               	movf	___bmul@multiplier,w
  2543  03A3  1D03               	btfss	3,2
  2544  03A4  2B98               	goto	l897
  2545  03A5  0872               	movf	___bmul@product,w
  2546  03A6  0008               	return
  2547  03A7                     __end_of___bmul:	
  2548  007E                     btemp	set	126	;btemp
  2549  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     43      77
    BANK1            80      0      20
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Calc_Duty
    _Initialize->_Servo_Initialize
    _Servo_Initialize->___bmul
    _Calc_Duty->___lbtoft
    ___lbtoft->___ftpack
    ___fttol->___lbtoft
    ___ftmul->___lbtoft

Critical Paths under _main in BANK0

    _main->_Calc_Duty
    _Initialize->_Servo_Initialize
    _Calc_Duty->___fttol
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    5118
                                             39 BANK0      4     0      4
                          _Calc_Duty
                         _Initialize
                     _Renew_Raw_Data
                   _Servo_Output_OFF
 ---------------------------------------------------------------------------------
 (1) _Servo_Output_OFF                                     4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Renew_Raw_Data                                       4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0     534
              _Oscillator_Initialize
                     _Pin_Initialize
                   _Servo_Initialize
                   _Timer_Initialize
 ---------------------------------------------------------------------------------
 (2) _Timer_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Servo_Initialize                                    26    26      0     534
                                              4 COMMON     2     2      0
                                              0 BANK0     24    24      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _Pin_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Calc_Duty                                            6     6      0    4584
                                             12 COMMON     1     1      0
                                             34 BANK0      5     5      0
                             ___bmul
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    1651
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             20 BANK0     14    10      4
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2167
                                              4 BANK0     16    10      6
                             ___bmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     326
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Calc_Duty
     ___bmul
     ___ftmul
       ___bmul (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___bmul (ARG)
       ___ftmul (ARG)
         ___bmul (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _Initialize
     _Oscillator_Initialize
     _Pin_Initialize
     _Servo_Initialize
       ___bmul
     _Timer_Initialize
   _Renew_Raw_Data
   _Servo_Output_OFF

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      6E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2B      4D       6       96.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      14       8       25.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      6E      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Aug 19 16:51:39 2019

                ___bmul@product 0072                     __CFG_CP$OFF 0000                              l71 0448  
                           l107 07EB                             l405 048F                             l406 0497  
                           l901 039E                             l398 047C                             l921 0468  
                           l913 0452                             l489 0600                             l917 0459  
                           l927 0481                             l919 0463                             l929 0489  
                           l897 0398                    __CFG_CPD$OFF 0000                             u740 06D8  
                           u725 049E                             u645 045E                             u665 0477  
                           u905 06AD                             u825 0653                             u835 0663  
                           u755 0766                             u685 0484                             u765 0785  
                           u855 068B                             u935 05B3                             u775 07A3  
                           u865 0691                             u785 07C3                             u965 05DD  
                           u895 06A7                             u995 05F8           _Oscillator_Initialize 0379  
               ?_Renew_Raw_Data 0070                    __CFG_BORV$HI 0000                             wreg 0009  
                  __CFG_LVP$OFF 0000                            l1013 0631                            l1031 0682  
                          l1043 069E                            l1035 068A                            l1019 0647  
                          l1133 0572                            l1125 0532                            l1047 06A6  
                          l1063 05AC                            l1081 05DC                            l1129 0552  
                          l1091 0603                            l1083 05EA                            l1139 0411  
                          l1165 0433                            l1095 0611                            l1089 05F7  
                          u1120 041B                            u1025 03DC                            u1105 056E  
                          u1130 041C                            u1035 03E4                            u1115 058E  
                          u1140 0421                            u1045 03F9                            u1150 0422  
                          u1055 0401                            u1065 04BC                            u1085 052E  
                          u1095 054E                            _TMR1 0016                    __CFG_WRT$OFF 0000  
                          _main 040E                    ___ftpack@arg 0070                    ___ftpack@exp 0073  
                          _port 00A0                            fsr0h 0005                            fsr1h 0007  
                          indf0 0000                            fsr0l 0004                            indf1 0001  
                          fsr1l 0006                            btemp 007E                            start 0002  
                 __CFG_IESO$OFF 0000               ___bmul@multiplier 0073                    ___ftmul@cntr 0032  
                  ___ftmul@sign 0033               ?_Servo_Initialize 0070                    ___fttol@exp1 0041  
                  ___fttol@lval 003D              ??_Servo_Initialize 0074                           ?_main 0047  
                 __CFG_WDTE$OFF 0000                 __end_of___ftmul 06CE                           _T1CON 0018  
               __end_of___fttol 061A                           _PORTA 000C                           _PORTB 000D  
                         _TRISA 008C                           _TRISB 008D                  __CFG_FCMEN$OFF 0000  
                         _param 004B                   ___ftpack@sign 0074                  __CFG_BOREN$OFF 0000  
                         status 0003                           wtemp0 007E                   _Calc_Duty$817 0042  
            __size_of_Calc_Duty 0064                  __CFG_MCLRE$OFF 0000                 __initialization 07EE  
                  __end_of_main 044A                      _Initialize 038A          ?_Oscillator_Initialize 0070  
                        ??_main 007D                   ___fttol@sign1 003C                  __CFG_PLLEN$OFF 0000  
             ?_Servo_Output_OFF 0070                          _ANSELA 018C                          _ANSELB 018D  
              __end_of___ftpack 04AE                __end_of___lbtoft 03D2                          _OSCCON 0099  
            ??_Servo_Output_OFF 0070                  __CFG_PWRTE$OFF 0000                          ___bmul 0396  
                     ??___ftmul 002A                       ??___fttol 0038           ___ftmul@f3_as_product 002F  
             __end_of_Calc_Duty 0512         __end_of__initialization 07FD                      ___lbtoft@c 007B  
           ___bmul@multiplicand 0070       __size_of_Timer_Initialize 0007                      ___ftmul@f1 0024  
                    ___ftmul@f2 0027                      ___fttol@f1 0034                  __pcstackCOMMON 0070  
                   ?_Initialize 0070                ??_Renew_Raw_Data 0070                      __pbssBANK0 004B  
                    __pbssBANK1 00A0                 __CFG_VCAPEN$OFF 0000                      _data_renew 0069  
                    __pmaintext 040E           Servo_Initialize@F2759 0800                         ?___bmul 0070  
           Servo_Initialize@num 0020         __size_of_Pin_Initialize 0011                       ?___ftpack 0070  
                     ?___lbtoft 0078       __size_of_Servo_Initialize 0120             __size_of_Initialize 000C  
               __size_of___bmul 0011         ??_Oscillator_Initialize 0070                         ___ftmul 061A  
                       ___fttol 0593                 __CFG_STVREN$OFF 0000                      ??___ftpack 0075  
                    ??___lbtoft 0020                         __ptext1 0512                         __ptext2 03D2  
                       __ptext3 038A                         __ptext4 0383                         __ptext5 06CE  
                       __ptext6 03A7                         __ptext7 0379                         __ptext8 04AE  
                       __ptext9 03B8                       _T1CONbits 0018                         clrloop0 037E  
          end_of_initialization 07FD                _Timer_Initialize 0383       __size_of_Servo_Output_OFF 0081  
                     _PORTCbits 000E                      _servo_duty 005A                __CFG_FOSC$INTOSC 0000  
                     _TRISCbits 008E                       _Calc_Duty 04AE                     ___ftmul@exp 002E  
                _Pin_Initialize 03A7                  __end_of___bmul 03A7                    ??_Initialize 0076  
           start_initialization 07EE                _Servo_Initialize 06CE                      ?_Calc_Duty 0070  
            __end_of_Initialize 0396          __end_of_Pin_Initialize 03B8                        ??___bmul 0071  
             __size_of___ftpack 0064               __size_of___lbtoft 001A                       ___latbits 0001  
                 __pcstackBANK0 0020                 ?_Pin_Initialize 0070                _Servo_Output_OFF 0512  
                      ?___ftmul 0024                        ?___fttol 0034  __size_of_Oscillator_Initialize 0004  
 __end_of_Oscillator_Initialize 037D        __end_of_Timer_Initialize 038A         __size_of_Renew_Raw_Data 003C  
                   ??_Calc_Duty 007C                        _LATCbits 010E                       clear_ram0 037D  
                      _PIE1bits 0091                        _PIR1bits 0011                  _servo_raw_data 0064  
      __end_of_Servo_Initialize 07EE                __size_of___ftmul 00B4                __size_of___fttol 0087  
                      ___ftpack 044A                        ___lbtoft 03B8                      Calc_Duty@i 0045  
                      __ptext10 0593                        __ptext11 061A                        __ptext12 044A  
                      __ptext13 0396                   __size_of_main 003C                        main@argc 0047  
                      main@argv 0049                      _INTCONbits 000B                  _Renew_Raw_Data 03D2  
      __end_of_Servo_Output_OFF 0593                ??_Pin_Initialize 0070               __CFG_CLKOUTEN$OFF 0000  
                 __pstringtext1 0800          __end_of_Renew_Raw_Data 040E               ?_Timer_Initialize 0070  
            ??_Timer_Initialize 0070   __end_ofServo_Initialize@F2759 0818  
