

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Wed Oct 02 17:28:39 2019

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 1.42
    46                           ; Generated 13/04/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F1933 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000D                     	;# 
    93  000E                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  0110                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0191                     	;# 
   146  0191                     	;# 
   147  0192                     	;# 
   148  0193                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0199                     	;# 
   155  019A                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019C                     	;# 
   162  019D                     	;# 
   163  019E                     	;# 
   164  019F                     	;# 
   165  020D                     	;# 
   166  0210                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0291                     	;# 
   176  0291                     	;# 
   177  0292                     	;# 
   178  0293                     	;# 
   179  0294                     	;# 
   180  0295                     	;# 
   181  0295                     	;# 
   182  0296                     	;# 
   183  0298                     	;# 
   184  0298                     	;# 
   185  0299                     	;# 
   186  029A                     	;# 
   187  029B                     	;# 
   188  029C                     	;# 
   189  029C                     	;# 
   190  029D                     	;# 
   191  029E                     	;# 
   192  029F                     	;# 
   193  0311                     	;# 
   194  0311                     	;# 
   195  0312                     	;# 
   196  0313                     	;# 
   197  0314                     	;# 
   198  0315                     	;# 
   199  0315                     	;# 
   200  0316                     	;# 
   201  0318                     	;# 
   202  0318                     	;# 
   203  0319                     	;# 
   204  031A                     	;# 
   205  031C                     	;# 
   206  031C                     	;# 
   207  031D                     	;# 
   208  031E                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  0415                     	;# 
   213  0416                     	;# 
   214  0417                     	;# 
   215  041C                     	;# 
   216  041D                     	;# 
   217  041E                     	;# 
   218  0791                     	;# 
   219  0792                     	;# 
   220  0793                     	;# 
   221  0794                     	;# 
   222  0795                     	;# 
   223  0798                     	;# 
   224  0799                     	;# 
   225  07A0                     	;# 
   226  07A1                     	;# 
   227  07A3                     	;# 
   228  07A4                     	;# 
   229  07A6                     	;# 
   230  07A7                     	;# 
   231  07A9                     	;# 
   232  07AA                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE9                     	;# 
   239  0FEA                     	;# 
   240  0FEB                     	;# 
   241  0FED                     	;# 
   242  0FEE                     	;# 
   243  0FEF                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  0110                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  0191                     	;# 
   311  0191                     	;# 
   312  0192                     	;# 
   313  0193                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0194                     	;# 
   317  0195                     	;# 
   318  0196                     	;# 
   319  0199                     	;# 
   320  019A                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019E                     	;# 
   329  019F                     	;# 
   330  020D                     	;# 
   331  0210                     	;# 
   332  0211                     	;# 
   333  0212                     	;# 
   334  0213                     	;# 
   335  0214                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0216                     	;# 
   339  0217                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029F                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0314                     	;# 
   363  0315                     	;# 
   364  0315                     	;# 
   365  0316                     	;# 
   366  0318                     	;# 
   367  0318                     	;# 
   368  0319                     	;# 
   369  031A                     	;# 
   370  031C                     	;# 
   371  031C                     	;# 
   372  031D                     	;# 
   373  031E                     	;# 
   374  0394                     	;# 
   375  0395                     	;# 
   376  0396                     	;# 
   377  0415                     	;# 
   378  0416                     	;# 
   379  0417                     	;# 
   380  041C                     	;# 
   381  041D                     	;# 
   382  041E                     	;# 
   383  0791                     	;# 
   384  0792                     	;# 
   385  0793                     	;# 
   386  0794                     	;# 
   387  0795                     	;# 
   388  0798                     	;# 
   389  0799                     	;# 
   390  07A0                     	;# 
   391  07A1                     	;# 
   392  07A3                     	;# 
   393  07A4                     	;# 
   394  07A6                     	;# 
   395  07A7                     	;# 
   396  07A9                     	;# 
   397  07AA                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000D                     	;# 
   423  000E                     	;# 
   424  0010                     	;# 
   425  0011                     	;# 
   426  0012                     	;# 
   427  0013                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  001A                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  008C                     	;# 
   440  008D                     	;# 
   441  008E                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  010C                     	;# 
   458  010D                     	;# 
   459  010E                     	;# 
   460  0110                     	;# 
   461  0111                     	;# 
   462  0112                     	;# 
   463  0113                     	;# 
   464  0114                     	;# 
   465  0115                     	;# 
   466  0116                     	;# 
   467  0117                     	;# 
   468  0118                     	;# 
   469  0119                     	;# 
   470  011A                     	;# 
   471  011B                     	;# 
   472  011D                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  0191                     	;# 
   476  0191                     	;# 
   477  0192                     	;# 
   478  0193                     	;# 
   479  0193                     	;# 
   480  0193                     	;# 
   481  0194                     	;# 
   482  0195                     	;# 
   483  0196                     	;# 
   484  0199                     	;# 
   485  019A                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019C                     	;# 
   491  019C                     	;# 
   492  019D                     	;# 
   493  019E                     	;# 
   494  019F                     	;# 
   495  020D                     	;# 
   496  0210                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0213                     	;# 
   500  0214                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0291                     	;# 
   506  0291                     	;# 
   507  0292                     	;# 
   508  0293                     	;# 
   509  0294                     	;# 
   510  0295                     	;# 
   511  0295                     	;# 
   512  0296                     	;# 
   513  0298                     	;# 
   514  0298                     	;# 
   515  0299                     	;# 
   516  029A                     	;# 
   517  029B                     	;# 
   518  029C                     	;# 
   519  029C                     	;# 
   520  029D                     	;# 
   521  029E                     	;# 
   522  029F                     	;# 
   523  0311                     	;# 
   524  0311                     	;# 
   525  0312                     	;# 
   526  0313                     	;# 
   527  0314                     	;# 
   528  0315                     	;# 
   529  0315                     	;# 
   530  0316                     	;# 
   531  0318                     	;# 
   532  0318                     	;# 
   533  0319                     	;# 
   534  031A                     	;# 
   535  031C                     	;# 
   536  031C                     	;# 
   537  031D                     	;# 
   538  031E                     	;# 
   539  0394                     	;# 
   540  0395                     	;# 
   541  0396                     	;# 
   542  0415                     	;# 
   543  0416                     	;# 
   544  0417                     	;# 
   545  041C                     	;# 
   546  041D                     	;# 
   547  041E                     	;# 
   548  0791                     	;# 
   549  0792                     	;# 
   550  0793                     	;# 
   551  0794                     	;# 
   552  0795                     	;# 
   553  0798                     	;# 
   554  0799                     	;# 
   555  07A0                     	;# 
   556  07A1                     	;# 
   557  07A3                     	;# 
   558  07A4                     	;# 
   559  07A6                     	;# 
   560  07A7                     	;# 
   561  07A9                     	;# 
   562  07AA                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  0019                     	;# 
   599  001A                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  0090                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0095                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  010C                     	;# 
   623  010D                     	;# 
   624  010E                     	;# 
   625  0110                     	;# 
   626  0111                     	;# 
   627  0112                     	;# 
   628  0113                     	;# 
   629  0114                     	;# 
   630  0115                     	;# 
   631  0116                     	;# 
   632  0117                     	;# 
   633  0118                     	;# 
   634  0119                     	;# 
   635  011A                     	;# 
   636  011B                     	;# 
   637  011D                     	;# 
   638  018C                     	;# 
   639  018D                     	;# 
   640  0191                     	;# 
   641  0191                     	;# 
   642  0192                     	;# 
   643  0193                     	;# 
   644  0193                     	;# 
   645  0193                     	;# 
   646  0194                     	;# 
   647  0195                     	;# 
   648  0196                     	;# 
   649  0199                     	;# 
   650  019A                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019B                     	;# 
   654  019B                     	;# 
   655  019C                     	;# 
   656  019C                     	;# 
   657  019D                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  020D                     	;# 
   661  0210                     	;# 
   662  0211                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0217                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029C                     	;# 
   684  029C                     	;# 
   685  029D                     	;# 
   686  029E                     	;# 
   687  029F                     	;# 
   688  0311                     	;# 
   689  0311                     	;# 
   690  0312                     	;# 
   691  0313                     	;# 
   692  0314                     	;# 
   693  0315                     	;# 
   694  0315                     	;# 
   695  0316                     	;# 
   696  0318                     	;# 
   697  0318                     	;# 
   698  0319                     	;# 
   699  031A                     	;# 
   700  031C                     	;# 
   701  031C                     	;# 
   702  031D                     	;# 
   703  031E                     	;# 
   704  0394                     	;# 
   705  0395                     	;# 
   706  0396                     	;# 
   707  0415                     	;# 
   708  0416                     	;# 
   709  0417                     	;# 
   710  041C                     	;# 
   711  041D                     	;# 
   712  041E                     	;# 
   713  0791                     	;# 
   714  0792                     	;# 
   715  0793                     	;# 
   716  0794                     	;# 
   717  0795                     	;# 
   718  0798                     	;# 
   719  0799                     	;# 
   720  07A0                     	;# 
   721  07A1                     	;# 
   722  07A3                     	;# 
   723  07A4                     	;# 
   724  07A6                     	;# 
   725  07A7                     	;# 
   726  07A9                     	;# 
   727  07AA                     	;# 
   728  0FE4                     	;# 
   729  0FE5                     	;# 
   730  0FE6                     	;# 
   731  0FE7                     	;# 
   732  0FE8                     	;# 
   733  0FE9                     	;# 
   734  0FEA                     	;# 
   735  0FEB                     	;# 
   736  0FED                     	;# 
   737  0FEE                     	;# 
   738  0FEF                     	;# 
   739                           
   740                           	psect	idataBANK1
   741  07E2                     __pidataBANK1:	
   742                           
   743                           ;initializer for SetParameter@isFirst
   744  07E2  3401               	retlw	1
   745                           
   746                           	psect	idataBANK2
   747  0695                     __pidataBANK2:	
   748                           
   749                           ;initializer for __Parameters
   750  0695  3498               	retlw	152
   751  0696  3408               	retlw	8
   752  0697  3458               	retlw	88
   753  0698  3402               	retlw	2
   754  0699  3498               	retlw	152
   755  069A  3408               	retlw	8
   756  069B  3458               	retlw	88
   757  069C  3402               	retlw	2
   758  069D  3498               	retlw	152
   759  069E  3408               	retlw	8
   760  069F  3458               	retlw	88
   761  06A0  3402               	retlw	2
   762  06A1  3498               	retlw	152
   763  06A2  3408               	retlw	8
   764  06A3  3458               	retlw	88
   765  06A4  3402               	retlw	2
   766  06A5  348A               	retlw	138
   767  06A6  3407               	retlw	7
   768  06A7  3484               	retlw	132
   769  06A8  3403               	retlw	3
   770  06A9  348A               	retlw	138
   771  06AA  3407               	retlw	7
   772  06AB  3484               	retlw	132
   773  06AC  3403               	retlw	3
   774  06AD  346C               	retlw	108
   775  06AE  3407               	retlw	7
   776  06AF  3420               	retlw	32
   777  06B0  3403               	retlw	3
   778  06B1  346C               	retlw	108
   779  06B2  3407               	retlw	7
   780  06B3  3420               	retlw	32
   781  06B4  3403               	retlw	3
   782  06B5  348A               	retlw	138
   783  06B6  3407               	retlw	7
   784  06B7  3484               	retlw	132
   785  06B8  3403               	retlw	3
   786  06B9  34F6               	retlw	246
   787  06BA  3409               	retlw	9
   788  06BB  3458               	retlw	88
   789  06BC  3402               	retlw	2
   790  06BD  34F6               	retlw	246
   791  06BE  3409               	retlw	9
   792  06BF  3458               	retlw	88
   793  06C0  3402               	retlw	2
   794  06C1  34F6               	retlw	246
   795  06C2  3409               	retlw	9
   796  06C3  3458               	retlw	88
   797  06C4  3402               	retlw	2
   798                           
   799                           	psect	stringtext1
   800  07DE                     __pstringtext1:	
   801  07DE                     __CHs:	
   802  07DE  3401               	retlw	1
   803  07DF  3402               	retlw	2
   804  07E0  3404               	retlw	4
   805  07E1  3408               	retlw	8
   806  07E2                     __end_of__CHs:	
   807  0016                     _TMR1	set	22
   808  001A                     _TMR2	set	26
   809  001C                     _T2CONbits	set	28
   810  0018                     _T1CONbits	set	24
   811  0011                     _PIR1bits	set	17
   812  000B                     _INTCONbits	set	11
   813  000D                     _PORTB	set	13
   814  000C                     _PORTA	set	12
   815  000E                     _PORTCbits	set	14
   816  00E2                     _TMR2ON	set	226
   817  00C0                     _TMR1ON	set	192
   818  008C                     _TXIF	set	140
   819  0089                     _TMR2IF	set	137
   820  0088                     _TMR1IF	set	136
   821  008E                     _TRISCbits	set	142
   822  008D                     _TRISB	set	141
   823  008C                     _TRISA	set	140
   824  0099                     _OSCCONbits	set	153
   825  0091                     _PIE1bits	set	145
   826  010E                     _LATCbits	set	270
   827  019A                     _TXREG	set	410
   828  019D                     _RCSTAbits	set	413
   829  019E                     _TXSTAbits	set	414
   830  019B                     _SPBRG	set	411
   831  018D                     _ANSELB	set	397
   832  018C                     _ANSELA	set	396
   833  0CF2                     _BRGH	set	3314
   834  0CFB                     _BRG16	set	3323
   835  0CF4                     _SYNC	set	3316
   836                           
   837                           ; #config settings
   838  0000                     
   839                           	psect	cinit
   840  004F                     start_initialization:	
   841  004F                     __initialization:	
   842                           
   843                           ; Initialize objects allocated to BANK1
   844  004F  0021               	movlb	1	; select bank1
   845  0050  3187  27E2  3180   	fcall	__pidataBANK1	;fetch initializer
   846  0053  00E8               	movwf	__pdataBANK1& (0+127)
   847                           
   848                           ; Initialize objects allocated to BANK2
   849  0054  3095               	movlw	low __pidataBANK2
   850  0055  0084               	movwf	4
   851  0056  3086               	movlw	(high __pidataBANK2)| (0+128)
   852  0057  0085               	movwf	5
   853  0058  3020               	movlw	low __pdataBANK2
   854  0059  0086               	movwf	6
   855  005A  3001               	movlw	high __pdataBANK2
   856  005B  0087               	movwf	7
   857  005C  3030               	movlw	48
   858  005D  3187  27D2  3180   	fcall	init_ram
   859                           
   860                           ; Clear objects allocated to COMMON
   861  0060  01F6               	clrf	__pbssCOMMON& (0+127)
   862  0061  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   863  0062  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   864                           
   865                           ; Clear objects allocated to BANK1
   866  0063  30C5               	movlw	low __pbssBANK1
   867  0064  0084               	movwf	4
   868  0065  3000               	movlw	high __pbssBANK1
   869  0066  0085               	movwf	5
   870  0067  3023               	movlw	35
   871  0068  3187  27D8  3180   	fcall	clear_ram0
   872                           
   873                           ; Clear objects allocated to BANK2
   874  006B  3050               	movlw	low __pbssBANK2
   875  006C  0084               	movwf	4
   876  006D  3001               	movlw	high __pbssBANK2
   877  006E  0085               	movwf	5
   878  006F  3010               	movlw	16
   879  0070  3187  27D8         	fcall	clear_ram0
   880  0072                     end_of_initialization:	
   881                           ;End of C runtime variable initialization code
   882                           
   883  0072                     __end_of__initialization:	
   884  0072  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   885  0073  0020               	movlb	0
   886  0074  3187  2F41         	ljmp	_main	;jump to C main() function
   887                           
   888                           	psect	bssCOMMON
   889  0076                     __pbssCOMMON:	
   890  0076                     _IntCnt:	
   891  0076                     	ds	2
   892  0078                     __isBusy:	
   893  0078                     	ds	1
   894                           
   895                           	psect	bssBANK1
   896  00C5                     __pbssBANK1:	
   897  00C5                     __TMRCnt:	
   898  00C5                     	ds	10
   899  00CF                     ReceiveTargetAngle@pre_angle:	
   900  00CF                     	ds	8
   901  00D7                     __DebugTxData:	
   902  00D7                     	ds	5
   903  00DC                     __CHq:	
   904  00DC                     	ds	4
   905  00E0                     ReceiveTargetAngle@F3434:	
   906  00E0                     	ds	4
   907  00E4                     __IntNum:	
   908  00E4                     	ds	2
   909  00E6                     Interrupt_TX@cnt:	
   910  00E6                     	ds	2
   911                           
   912                           	psect	dataBANK1
   913  00E8                     __pdataBANK1:	
   914  00E8                     SetParameter@isFirst:	
   915  00E8                     	ds	1
   916                           
   917                           	psect	bssBANK2
   918  0150                     __pbssBANK2:	
   919  0150                     SetParameter@Parameter:	
   920  0150                     	ds	16
   921                           
   922                           	psect	dataBANK2
   923  0120                     __pdataBANK2:	
   924  0120                     __Parameters:	
   925  0120                     	ds	48
   926                           
   927                           	psect	inittext
   928  07D2                     init_ram:	
   929  07D2  00FE               	movwf	126
   930  07D3                     initloop:	
   931  07D3  0012               	moviw fsr0++
   932  07D4  001E               	movwi fsr1++
   933  07D5  0BFE               	decfsz	126,f
   934  07D6  2FD3               	goto	initloop
   935  07D7  3400               	retlw	0
   936                           
   937                           	psect	clrtext
   938  07D8                     clear_ram0:	
   939                           ;	Called with FSR0 containing the base address, and
   940                           ;	WREG with the size to clear
   941                           
   942  07D8  0064               	clrwdt	;clear the watchdog before getting into this loop
   943  07D9                     clrloop0:	
   944  07D9  0180               	clrf	0	;clear RAM location pointed to by FSR
   945  07DA  3101               	addfsr 0,1
   946  07DB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   947  07DC  2FD9               	goto	clrloop0	;have we reached the end yet?
   948  07DD  3400               	retlw	0	;all done for this memory range, return
   949                           
   950                           	psect	cstackBANK1
   951  00A0                     __pcstackBANK1:	
   952  00A0                     CalcWidth@width:	
   953                           
   954                           ; 2 bytes @ 0x0
   955  00A0                     	ds	2
   956  00A2                     CalcWidth@angle:	
   957                           
   958                           ; 1 bytes @ 0x2
   959  00A2                     	ds	1
   960  00A3                     ??_SetParameter:	
   961                           
   962                           ; 1 bytes @ 0x3
   963  00A3                     	ds	9
   964  00AC                     SetParameter@Mode:	
   965                           
   966                           ; 1 bytes @ 0xC
   967  00AC                     	ds	1
   968  00AD                     SetParameter@Servo:	
   969                           
   970                           ; 1 bytes @ 0xD
   971  00AD                     	ds	1
   972  00AE                     SetParameter@i:	
   973                           
   974                           ; 2 bytes @ 0xE
   975  00AE                     	ds	2
   976  00B0                     main@isFirst:	
   977                           
   978                           ; 1 bytes @ 0x10
   979  00B0                     	ds	1
   980  00B1                     main@Servo:	
   981                           
   982                           ; 20 bytes @ 0x11
   983  00B1                     	ds	20
   984                           
   985                           	psect	cstackCOMMON
   986  0070                     __pcstackCOMMON:	
   987  0070                     ?_Init:	
   988  0070                     ?_ReceiveTargetAngle:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_SetParameter:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_CalcNextCnt:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?_Interrupt_TMR1:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?_Interrupt_TMR2:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?_Interrupt_TX:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ??_Interrupt_TX:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_InitOsc:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_InitPin:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_InitTmr1:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?_InitTmr2:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?_INTERRUPT_HANDLER:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?i1_Output:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_main:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     i1Output@value:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033                           
  1034                           ; 1 bytes @ 0x0
  1035  0070                     	ds	1
  1036  0071                     ??i1_Output:	
  1037                           
  1038                           ; 1 bytes @ 0x1
  1039  0071                     	ds	1
  1040  0072                     i1Output@ch:	
  1041                           
  1042                           ; 1 bytes @ 0x2
  1043  0072                     	ds	1
  1044  0073                     ??_Interrupt_TMR1:	
  1045  0073                     ??_Interrupt_TMR2:	
  1046                           ; 1 bytes @ 0x3
  1047                           
  1048  0073                     ??_INTERRUPT_HANDLER:	
  1049                           ; 1 bytes @ 0x3
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x3
  1053  0073                     	ds	3
  1054                           
  1055                           	psect	cstackBANK0
  1056  0020                     __pcstackBANK0:	
  1057  0020                     ??_Init:	
  1058  0020                     ?_Output:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0020                     ??_InitOsc:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0020                     ??_InitPin:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0020                     ??_InitTmr1:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0020                     ??_InitTmr2:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0020                     ?___bmul:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0020                     ?_CalcTMRCnt:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0020                     ?___ftpack:	
  1080                           ; 2 bytes @ 0x0
  1081                           
  1082  0020                     Output@value:	
  1083                           ; 3 bytes @ 0x0
  1084                           
  1085  0020                     ___bmul@multiplicand:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0020                     CalcTMRCnt@pulse_width:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0020                     ___ftpack@arg:	
  1092                           ; 2 bytes @ 0x0
  1093                           
  1094                           
  1095                           ; 3 bytes @ 0x0
  1096  0020                     	ds	1
  1097  0021                     ??_Output:	
  1098  0021                     ??___bmul:	
  1099                           ; 1 bytes @ 0x1
  1100                           
  1101                           
  1102                           ; 1 bytes @ 0x1
  1103  0021                     	ds	1
  1104  0022                     ??_CalcTMRCnt:	
  1105  0022                     Output@ch:	
  1106                           ; 1 bytes @ 0x2
  1107                           
  1108  0022                     ___bmul@product:	
  1109                           ; 1 bytes @ 0x2
  1110                           
  1111                           
  1112                           ; 1 bytes @ 0x2
  1113  0022                     	ds	1
  1114  0023                     ___bmul@multiplier:	
  1115  0023                     ___ftpack@exp:	
  1116                           ; 1 bytes @ 0x3
  1117                           
  1118                           
  1119                           ; 1 bytes @ 0x3
  1120  0023                     	ds	1
  1121  0024                     ??_ReceiveTargetAngle:	
  1122  0024                     ___ftpack@sign:	
  1123                           ; 1 bytes @ 0x4
  1124                           
  1125  0024                     CalcTMRCnt@cnt:	
  1126                           ; 1 bytes @ 0x4
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x4
  1130  0024                     	ds	1
  1131  0025                     ??___ftpack:	
  1132                           
  1133                           ; 1 bytes @ 0x5
  1134  0025                     	ds	1
  1135  0026                     ??_CalcNextCnt:	
  1136  0026                     CalcNextCnt@Servo:	
  1137                           ; 1 bytes @ 0x6
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x6
  1141  0026                     	ds	2
  1142  0028                     ?___awtoft:	
  1143  0028                     ?___lbtoft:	
  1144                           ; 3 bytes @ 0x8
  1145                           
  1146  0028                     ___awtoft@c:	
  1147                           ; 3 bytes @ 0x8
  1148                           
  1149                           
  1150                           ; 2 bytes @ 0x8
  1151  0028                     	ds	3
  1152  002B                     ??___awtoft:	
  1153  002B                     ??___lbtoft:	
  1154                           ; 1 bytes @ 0xB
  1155                           
  1156                           
  1157                           ; 1 bytes @ 0xB
  1158  002B                     	ds	2
  1159  002D                     ___awtoft@sign:	
  1160                           
  1161                           ; 1 bytes @ 0xD
  1162  002D                     	ds	1
  1163  002E                     ?___ftdiv:	
  1164  002E                     ___ftdiv@f2:	
  1165                           ; 3 bytes @ 0xE
  1166                           
  1167                           
  1168                           ; 3 bytes @ 0xE
  1169  002E                     	ds	1
  1170  002F                     ___lbtoft@c:	
  1171  002F                     ReceiveTargetAngle@angle_buf:	
  1172                           ; 1 bytes @ 0xF
  1173                           
  1174                           
  1175                           ; 8 bytes @ 0xF
  1176  002F                     	ds	2
  1177  0031                     ___ftdiv@f1:	
  1178                           
  1179                           ; 3 bytes @ 0x11
  1180  0031                     	ds	3
  1181  0034                     ??___ftdiv:	
  1182                           
  1183                           ; 1 bytes @ 0x14
  1184  0034                     	ds	3
  1185  0037                     ReceiveTargetAngle@rx:	
  1186                           
  1187                           ; 4 bytes @ 0x17
  1188  0037                     	ds	1
  1189  0038                     ___ftdiv@cntr:	
  1190                           
  1191                           ; 1 bytes @ 0x18
  1192  0038                     	ds	1
  1193  0039                     ___ftdiv@f3:	
  1194                           
  1195                           ; 3 bytes @ 0x19
  1196  0039                     	ds	2
  1197  003B                     ReceiveTargetAngle@Servo:	
  1198                           
  1199                           ; 1 bytes @ 0x1B
  1200  003B                     	ds	1
  1201  003C                     ___ftdiv@exp:	
  1202  003C                     ReceiveTargetAngle@i:	
  1203                           ; 1 bytes @ 0x1C
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x1C
  1207  003C                     	ds	1
  1208  003D                     ___ftdiv@sign:	
  1209                           
  1210                           ; 1 bytes @ 0x1D
  1211  003D                     	ds	1
  1212  003E                     ?___ftmul:	
  1213  003E                     ___ftmul@f1:	
  1214                           ; 3 bytes @ 0x1E
  1215                           
  1216                           
  1217                           ; 3 bytes @ 0x1E
  1218  003E                     	ds	3
  1219  0041                     ___ftmul@f2:	
  1220                           
  1221                           ; 3 bytes @ 0x21
  1222  0041                     	ds	3
  1223  0044                     ??___ftmul:	
  1224                           
  1225                           ; 1 bytes @ 0x24
  1226  0044                     	ds	4
  1227  0048                     ___ftmul@exp:	
  1228                           
  1229                           ; 1 bytes @ 0x28
  1230  0048                     	ds	1
  1231  0049                     ___ftmul@f3_as_product:	
  1232                           
  1233                           ; 3 bytes @ 0x29
  1234  0049                     	ds	3
  1235  004C                     ___ftmul@cntr:	
  1236                           
  1237                           ; 1 bytes @ 0x2C
  1238  004C                     	ds	1
  1239  004D                     ___ftmul@sign:	
  1240                           
  1241                           ; 1 bytes @ 0x2D
  1242  004D                     	ds	1
  1243  004E                     ?___ftadd:	
  1244  004E                     ___ftadd@f1:	
  1245                           ; 3 bytes @ 0x2E
  1246                           
  1247                           
  1248                           ; 3 bytes @ 0x2E
  1249  004E                     	ds	3
  1250  0051                     ___ftadd@f2:	
  1251                           
  1252                           ; 3 bytes @ 0x31
  1253  0051                     	ds	3
  1254  0054                     ??___ftadd:	
  1255                           
  1256                           ; 1 bytes @ 0x34
  1257  0054                     	ds	4
  1258  0058                     ___ftadd@sign:	
  1259                           
  1260                           ; 1 bytes @ 0x38
  1261  0058                     	ds	1
  1262  0059                     ___ftadd@exp2:	
  1263                           
  1264                           ; 1 bytes @ 0x39
  1265  0059                     	ds	1
  1266  005A                     ___ftadd@exp1:	
  1267                           
  1268                           ; 1 bytes @ 0x3A
  1269  005A                     	ds	1
  1270  005B                     ?___fttol:	
  1271  005B                     ___fttol@f1:	
  1272                           ; 4 bytes @ 0x3B
  1273                           
  1274                           
  1275                           ; 3 bytes @ 0x3B
  1276  005B                     	ds	4
  1277  005F                     ??___fttol:	
  1278                           
  1279                           ; 1 bytes @ 0x3F
  1280  005F                     	ds	4
  1281  0063                     ___fttol@sign1:	
  1282                           
  1283                           ; 1 bytes @ 0x43
  1284  0063                     	ds	1
  1285  0064                     ___fttol@lval:	
  1286                           
  1287                           ; 4 bytes @ 0x44
  1288  0064                     	ds	4
  1289  0068                     ___fttol@exp1:	
  1290                           
  1291                           ; 1 bytes @ 0x48
  1292  0068                     	ds	1
  1293  0069                     ?_CalcWidth:	
  1294  0069                     CalcWidth@Parameter:	
  1295                           ; 2 bytes @ 0x49
  1296                           
  1297                           
  1298                           ; 4 bytes @ 0x49
  1299  0069                     	ds	4
  1300  006D                     ??_CalcWidth:	
  1301                           
  1302                           ; 1 bytes @ 0x4D
  1303  006D                     	ds	2
  1304  006F                     ??_main:	
  1305                           
  1306                           	psect	maintext
  1307  0741                     __pmaintext:	
  1308                           ; 1 bytes @ 0x4F
  1309 ;;
  1310 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1311 ;;
  1312 ;; *************** function _main *****************
  1313 ;; Defined at:
  1314 ;;		line 21 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  Servo          20   17[BANK1 ] struct .[4]
  1319 ;;  isFirst         1   16[BANK1 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2   48[None  ] int 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : B1F/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1329 ;;      Params:         0       0       0       0
  1330 ;;      Locals:         0       0      21       0
  1331 ;;      Temps:          0       0       0       0
  1332 ;;      Totals:         0       0      21       0
  1333 ;;Total ram usage:       21 bytes
  1334 ;; Hardware stack levels required when called:    7
  1335 ;; This function calls:
  1336 ;;		_CalcNextCnt
  1337 ;;		_Init
  1338 ;;		_Output
  1339 ;;		_ReceiveTargetAngle
  1340 ;;		_SetParameter
  1341 ;; This function is called by:
  1342 ;;		Startup code after reset
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _main
  1348  0741                     _main:	
  1349                           
  1350                           ;main.c: 23: bool isFirst = 1;
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1354  0741  0021               	movlb	1	; select bank1
  1355  0742  01B0               	clrf	main@isFirst^(0+128)
  1356  0743  0AB0               	incf	main@isFirst^(0+128),f
  1357                           
  1358                           ;main.c: 24: SERVO Servo[4];
  1359                           ;main.c: 26: Init();
  1360  0744  3187  27A7  3187   	fcall	_Init
  1361                           
  1362                           ;main.c: 27: Output(0b1111, 0);
  1363  0747  0020               	movlb	0	; select bank0
  1364  0748  01A0               	clrf	Output@value
  1365  0749  300F               	movlw	15
  1366  074A  3186  2619  3187   	fcall	_Output
  1367  074D                     l1619:	
  1368                           ;main.c: 29: while (1)
  1369                           
  1370                           
  1371                           ;main.c: 30: {
  1372                           ;main.c: 32: ReceiveTargetAngle(Servo);
  1373  074D  30B1               	movlw	(low (main@Servo| 0))& (0+255)
  1374  074E  3182  2241  3187   	fcall	_ReceiveTargetAngle
  1375                           
  1376                           ;main.c: 33: SetParameter(Servo);
  1377  0751  30B1               	movlw	(low (main@Servo| 0))& (0+255)
  1378  0752  3181  216C  3187   	fcall	_SetParameter
  1379                           
  1380                           ;main.c: 34: CalcNextCnt(Servo);
  1381  0755  30B1               	movlw	(low (main@Servo| 0))& (0+255)
  1382  0756  3185  25C8  3187   	fcall	_CalcNextCnt
  1383  0759  2F4D               	goto	l1619
  1384  075A                     __end_of_main:	
  1385                           ;main.c: 36: }
  1386                           ;main.c: 37: return 0;
  1387                           ;	Return value of _main is never used
  1388                           
  1389                           
  1390                           	psect	text1
  1391  016C                     __ptext1:	
  1392 ;; *************** function _SetParameter *****************
  1393 ;; Defined at:
  1394 ;;		line 76 in file "main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  Servo           1    wreg     PTR struct .
  1397 ;;		 -> main@Servo(20), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  Servo           1   13[BANK1 ] PTR struct .
  1400 ;;		 -> main@Servo(20), 
  1401 ;;  Mode            1   12[BANK1 ] unsigned char 
  1402 ;;  i               2   14[BANK1 ] int 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1412 ;;      Params:         0       0       0       0
  1413 ;;      Locals:         0       0       4       0
  1414 ;;      Temps:          0       0       9       0
  1415 ;;      Totals:         0       0      13       0
  1416 ;;Total ram usage:       13 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    6
  1419 ;; This function calls:
  1420 ;;		_CalcWidth
  1421 ;;		___bmul
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _SetParameter
  1429  016C                     _SetParameter:	
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _SetParameter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1433                           ;SetParameter@Servo stored from wreg
  1434  016C  0021               	movlb	1	; select bank1
  1435  016D  00AD               	movwf	SetParameter@Servo^(0+128)
  1436                           
  1437                           ;main.c: 78: static PARAMETER Parameter[4];
  1438                           ;main.c: 79: static bool isFirst = 1;
  1439                           ;main.c: 80: int i;
  1440                           ;main.c: 83: if (isFirst == 1)
  1441  016E  0368               	decf	SetParameter@isFirst^(0+128),w
  1442  016F  1D03               	btfss	3,2
  1443  0170  29C9               	goto	l1571
  1444                           
  1445                           ;main.c: 84: {
  1446                           ;main.c: 85: isFirst = 0;
  1447  0171  01E8               	clrf	SetParameter@isFirst^(0+128)
  1448                           
  1449                           ;main.c: 86: uint8_t Mode = (PORTB & 0b00111111);
  1450  0172  0020               	movlb	0	; select bank0
  1451  0173  080D               	movf	13,w	;volatile
  1452  0174  393F               	andlw	63
  1453  0175  0021               	movlb	1	; select bank1
  1454  0176  00A3               	movwf	??_SetParameter^(0+128)
  1455  0177  0823               	movf	??_SetParameter^(0+128),w
  1456  0178  00AC               	movwf	SetParameter@Mode^(0+128)
  1457                           
  1458                           ;main.c: 87: for (i = 0; i < 4; i++)
  1459  0179  01AE               	clrf	SetParameter@i^(0+128)
  1460  017A  01AF               	clrf	(SetParameter@i+1)^(0+128)
  1461  017B  082F               	movf	(SetParameter@i+1)^(0+128),w
  1462  017C  3A80               	xorlw	128
  1463  017D  00A3               	movwf	??_SetParameter^(0+128)
  1464  017E  3080               	movlw	128
  1465  017F  0223               	subwf	??_SetParameter^(0+128),w
  1466  0180  1D03               	skipz
  1467  0181  2984               	goto	u1875
  1468  0182  3004               	movlw	4
  1469  0183  022E               	subwf	SetParameter@i^(0+128),w
  1470  0184                     u1875:	
  1471  0184  1803               	btfsc	3,0
  1472  0185  29C9               	goto	l1571
  1473  0186                     l1565:	
  1474                           
  1475                           ;main.c: 88: {
  1476                           ;main.c: 89: Parameter[i] = _Parameters[Mode][i];
  1477  0186  0021               	movlb	1	; select bank1
  1478  0187  082C               	movf	SetParameter@Mode^(0+128),w
  1479  0188  00A3               	movwf	??_SetParameter^(0+128)
  1480  0189  3004               	movlw	4
  1481  018A                     u1885:	
  1482  018A  35A3               	lslf	??_SetParameter^(0+128),f
  1483  018B  0B89               	decfsz	9,f
  1484  018C  298A               	goto	u1885
  1485  018D  3020               	movlw	(low (__Parameters| (0+256)))& (0+255)
  1486  018E  0723               	addwf	??_SetParameter^(0+128),w
  1487  018F  00A4               	movwf	(??_SetParameter+1)^(0+128)
  1488  0190  082E               	movf	SetParameter@i^(0+128),w
  1489  0191  00A5               	movwf	(??_SetParameter+2)^(0+128)
  1490  0192  3001               	movlw	1
  1491  0193                     u1895:	
  1492  0193  35A5               	lslf	(??_SetParameter+2)^(0+128),f
  1493  0194  3EFF               	addlw	-1
  1494  0195  1D03               	skipz
  1495  0196  2993               	goto	u1895
  1496  0197  3525               	lslf	(??_SetParameter+2)^(0+128),w
  1497  0198  0724               	addwf	(??_SetParameter+1)^(0+128),w
  1498  0199  00A6               	movwf	(??_SetParameter+3)^(0+128)
  1499  019A  0826               	movf	(??_SetParameter+3)^(0+128),w
  1500  019B  0086               	movwf	6
  1501  019C  3001               	movlw	1	; select bank2/3
  1502  019D  0087               	movwf	7
  1503  019E  3F40               	moviw [0]fsr1
  1504  019F  00A7               	movwf	(??_SetParameter+4)^(0+128)
  1505  01A0  3F41               	moviw [1]fsr1
  1506  01A1  00A8               	movwf	((??_SetParameter+4)^(0+128)+1)
  1507  01A2  3F42               	moviw [2]fsr1
  1508  01A3  00A9               	movwf	((??_SetParameter+4)^(0+128)+2)
  1509  01A4  3F43               	moviw [3]fsr1
  1510  01A5  00AA               	movwf	((??_SetParameter+4)^(0+128)+3)
  1511  01A6  082E               	movf	SetParameter@i^(0+128),w
  1512  01A7  00AB               	movwf	(??_SetParameter+8)^(0+128)
  1513  01A8  3001               	movlw	1
  1514  01A9                     u1905:	
  1515  01A9  35AB               	lslf	(??_SetParameter+8)^(0+128),f
  1516  01AA  3EFF               	addlw	-1
  1517  01AB  1D03               	skipz
  1518  01AC  29A9               	goto	u1905
  1519  01AD  352B               	lslf	(??_SetParameter+8)^(0+128),w
  1520  01AE  3E50               	addlw	(low (SetParameter@Parameter| (0+256)))& (0+255)
  1521  01AF  0086               	movwf	6
  1522  01B0  3001               	movlw	1	; select bank2/3
  1523  01B1  0087               	movwf	7
  1524  01B2  0827               	movf	(??_SetParameter+4)^(0+128),w
  1525  01B3  3FC0               	movwi [0]fsr1
  1526  01B4  0828               	movf	(??_SetParameter+5)^(0+128),w
  1527  01B5  3FC1               	movwi [1]fsr1
  1528  01B6  0829               	movf	(??_SetParameter+6)^(0+128),w
  1529  01B7  3FC2               	movwi [2]fsr1
  1530  01B8  082A               	movf	(??_SetParameter+7)^(0+128),w
  1531  01B9  3FC3               	movwi [3]fsr1
  1532  01BA  3001               	movlw	1
  1533  01BB  07AE               	addwf	SetParameter@i^(0+128),f
  1534  01BC  3000               	movlw	0
  1535  01BD  3DAF               	addwfc	(SetParameter@i+1)^(0+128),f
  1536  01BE  082F               	movf	(SetParameter@i+1)^(0+128),w
  1537  01BF  3A80               	xorlw	128
  1538  01C0  00A3               	movwf	??_SetParameter^(0+128)
  1539  01C1  3080               	movlw	128
  1540  01C2  0223               	subwf	??_SetParameter^(0+128),w
  1541  01C3  1D03               	skipz
  1542  01C4  29C7               	goto	u1915
  1543  01C5  3004               	movlw	4
  1544  01C6  022E               	subwf	SetParameter@i^(0+128),w
  1545  01C7                     u1915:	
  1546  01C7  1C03               	skipc
  1547  01C8  2986               	goto	l1565
  1548  01C9                     l1571:	
  1549                           
  1550                           ;main.c: 90: }
  1551                           ;main.c: 91: }
  1552                           ;main.c: 94: for (i = 0; i < 4; i++)
  1553  01C9  0021               	movlb	1	; select bank1
  1554  01CA  01AE               	clrf	SetParameter@i^(0+128)
  1555  01CB  01AF               	clrf	(SetParameter@i+1)^(0+128)
  1556  01CC                     L1:	
  1557  01CC  082F               	movf	(SetParameter@i+1)^(0+128),w
  1558  01CD  3A80               	xorlw	128
  1559  01CE  00A3               	movwf	??_SetParameter^(0+128)
  1560  01CF  3080               	movlw	128
  1561  01D0  0223               	subwf	??_SetParameter^(0+128),w
  1562  01D1  1D03               	skipz
  1563  01D2  29D5               	goto	u1925
  1564  01D3  3004               	movlw	4
  1565  01D4  022E               	subwf	SetParameter@i^(0+128),w
  1566  01D5                     u1925:	
  1567  01D5  1803               	btfsc	3,0
  1568  01D6  0008               	return
  1569                           
  1570                           ;main.c: 95: {
  1571                           ;main.c: 96: Servo[i].width = CalcWidth(Servo[i].angle, Parameter[i]);
  1572  01D7  0021               	movlb	1	; select bank1
  1573  01D8  082E               	movf	SetParameter@i^(0+128),w
  1574  01D9  00A3               	movwf	??_SetParameter^(0+128)
  1575  01DA  3001               	movlw	1
  1576  01DB                     u1935:	
  1577  01DB  35A3               	lslf	??_SetParameter^(0+128),f
  1578  01DC  3EFF               	addlw	-1
  1579  01DD  1D03               	skipz
  1580  01DE  29DB               	goto	u1935
  1581  01DF  3523               	lslf	??_SetParameter^(0+128),w
  1582  01E0  3E50               	addlw	(low (SetParameter@Parameter| (0+256)))& (0+255)
  1583  01E1  0086               	movwf	6
  1584  01E2  3001               	movlw	1	; select bank2/3
  1585  01E3  0087               	movwf	7
  1586  01E4  3F40               	moviw [0]fsr1
  1587  01E5  0020               	movlb	0	; select bank0
  1588  01E6  00E9               	movwf	CalcWidth@Parameter
  1589  01E7  3F41               	moviw [1]fsr1
  1590  01E8  00EA               	movwf	CalcWidth@Parameter+1
  1591  01E9  3F42               	moviw [2]fsr1
  1592  01EA  00EB               	movwf	CalcWidth@Parameter+2
  1593  01EB  3F43               	moviw [3]fsr1
  1594  01EC  00EC               	movwf	CalcWidth@Parameter+3
  1595  01ED  3005               	movlw	5
  1596  01EE  0021               	movlb	1	; select bank1
  1597  01EF  00A4               	movwf	(??_SetParameter+1)^(0+128)
  1598  01F0  0824               	movf	(??_SetParameter+1)^(0+128),w
  1599  01F1  0020               	movlb	0	; select bank0
  1600  01F2  00A0               	movwf	___bmul@multiplicand
  1601  01F3  0021               	movlb	1	; select bank1
  1602  01F4  082E               	movf	SetParameter@i^(0+128),w
  1603  01F5  3187  2784  3181   	fcall	___bmul
  1604  01F8  0021               	movlb	1	; select bank1
  1605  01F9  072D               	addwf	SetParameter@Servo^(0+128),w
  1606  01FA  00A5               	movwf	(??_SetParameter+2)^(0+128)
  1607  01FB  0825               	movf	(??_SetParameter+2)^(0+128),w
  1608  01FC  0086               	movwf	6
  1609  01FD  0187               	clrf	7
  1610  01FE  0801               	movf	1,w
  1611  01FF  3184  24F5  3181   	fcall	_CalcWidth
  1612  0202  0020               	movlb	0	; select bank0
  1613  0203  0869               	movf	?_CalcWidth,w
  1614  0204  0021               	movlb	1	; select bank1
  1615  0205  00A6               	movwf	(??_SetParameter+3)^(0+128)
  1616  0206  0020               	movlb	0	; select bank0
  1617  0207  086A               	movf	?_CalcWidth+1,w
  1618  0208  0021               	movlb	1	; select bank1
  1619  0209  00A7               	movwf	((??_SetParameter+3)^(0+128)+1)
  1620  020A  3005               	movlw	5
  1621  020B  00A8               	movwf	(??_SetParameter+5)^(0+128)
  1622  020C  0828               	movf	(??_SetParameter+5)^(0+128),w
  1623  020D  0020               	movlb	0	; select bank0
  1624  020E  00A0               	movwf	___bmul@multiplicand
  1625  020F  0021               	movlb	1	; select bank1
  1626  0210  082E               	movf	SetParameter@i^(0+128),w
  1627  0211  3187  2784  3181   	fcall	___bmul
  1628  0214  0021               	movlb	1	; select bank1
  1629  0215  072D               	addwf	SetParameter@Servo^(0+128),w
  1630  0216  00A9               	movwf	(??_SetParameter+6)^(0+128)
  1631  0217  0829               	movf	(??_SetParameter+6)^(0+128),w
  1632  0218  3E02               	addlw	2
  1633  0219  0086               	movwf	6
  1634  021A  0187               	clrf	7
  1635  021B  0826               	movf	(??_SetParameter+3)^(0+128),w
  1636  021C  3FC0               	movwi [0]fsr1
  1637  021D  0827               	movf	(??_SetParameter+4)^(0+128),w
  1638  021E  3FC1               	movwi [1]fsr1
  1639                           
  1640                           ;main.c: 98: Servo[i].ch = _CHs[i];
  1641  021F  082F               	movf	(SetParameter@i+1)^(0+128),w
  1642  0220  0085               	movwf	5
  1643  0221  082E               	movf	SetParameter@i^(0+128),w
  1644  0222  0084               	movwf	4
  1645  0223  30DE               	movlw	low (__CHs| (0+32768))
  1646  0224  0784               	addwf	4,f
  1647  0225  3087               	movlw	high (__CHs| (0+32768))
  1648  0226  3D85               	addwfc	5,f
  1649  0227  0800               	movf	0,w	;code access
  1650  0228  00A3               	movwf	??_SetParameter^(0+128)
  1651  0229  3005               	movlw	5
  1652  022A  00A4               	movwf	(??_SetParameter+1)^(0+128)
  1653  022B  0824               	movf	(??_SetParameter+1)^(0+128),w
  1654  022C  0020               	movlb	0	; select bank0
  1655  022D  00A0               	movwf	___bmul@multiplicand
  1656  022E  0021               	movlb	1	; select bank1
  1657  022F  082E               	movf	SetParameter@i^(0+128),w
  1658  0230  3187  2784  3181   	fcall	___bmul
  1659  0233  0021               	movlb	1	; select bank1
  1660  0234  072D               	addwf	SetParameter@Servo^(0+128),w
  1661  0235  00A5               	movwf	(??_SetParameter+2)^(0+128)
  1662  0236  0825               	movf	(??_SetParameter+2)^(0+128),w
  1663  0237  3E04               	addlw	4
  1664  0238  0086               	movwf	6
  1665  0239  0187               	clrf	7
  1666  023A  0823               	movf	??_SetParameter^(0+128),w
  1667  023B  0081               	movwf	1
  1668  023C  3001               	movlw	1
  1669  023D  07AE               	addwf	SetParameter@i^(0+128),f
  1670  023E  3000               	movlw	0
  1671  023F  3DAF               	addwfc	(SetParameter@i+1)^(0+128),f
  1672  0240  29CC               	goto	L1
  1673  0241                     __end_of_SetParameter:	
  1674                           
  1675                           	psect	text2
  1676  04F5                     __ptext2:	
  1677 ;; *************** function _CalcWidth *****************
  1678 ;; Defined at:
  1679 ;;		line 132 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  angle           1    wreg     unsigned char 
  1682 ;;  Parameter       4   73[BANK0 ] struct .
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  angle           1    2[BANK1 ] unsigned char 
  1685 ;;  width           2    0[BANK1 ] unsigned int 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  2   73[BANK0 ] unsigned int 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1695 ;;      Params:         0       4       0       0
  1696 ;;      Locals:         0       0       3       0
  1697 ;;      Temps:          0       2       0       0
  1698 ;;      Totals:         0       6       3       0
  1699 ;;Total ram usage:        9 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    5
  1702 ;; This function calls:
  1703 ;;		___awtoft
  1704 ;;		___ftadd
  1705 ;;		___ftdiv
  1706 ;;		___ftmul
  1707 ;;		___fttol
  1708 ;;		___lbtoft
  1709 ;; This function is called by:
  1710 ;;		_SetParameter
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           
  1715                           ;psect for function _CalcWidth
  1716  04F5                     _CalcWidth:	
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in _CalcWidth: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1720                           ;CalcWidth@angle stored from wreg
  1721  04F5  0021               	movlb	1	; select bank1
  1722  04F6  00A2               	movwf	CalcWidth@angle^(0+128)
  1723                           
  1724                           ;main.c: 134: uint16_t width = (uint16_t) ((Parameter.max - Parameter.min) / 180.0 * ang
      +                          le + Parameter.min);
  1725  04F7  3002               	movlw	2
  1726  04F8  3E69               	addlw	(low (CalcWidth@Parameter| 0))& (0+255)
  1727  04F9  0086               	movwf	6
  1728  04FA  0187               	clrf	7
  1729  04FB  0020               	movlb	0	; select bank0
  1730  04FC  0969               	comf	CalcWidth@Parameter,w
  1731  04FD  00ED               	movwf	??_CalcWidth
  1732  04FE  096A               	comf	CalcWidth@Parameter+1,w
  1733  04FF  00EE               	movwf	??_CalcWidth+1
  1734  0500  0AED               	incf	??_CalcWidth,f
  1735  0501  1903               	skipnz
  1736  0502  0AEE               	incf	??_CalcWidth+1,f
  1737  0503  3F40               	moviw [0]fsr1
  1738  0504  076D               	addwf	??_CalcWidth,w
  1739  0505  00A8               	movwf	___awtoft@c
  1740  0506  3F41               	moviw [1]fsr1
  1741  0507  3D6E               	addwfc	??_CalcWidth+1,w
  1742  0508  00A9               	movwf	___awtoft@c+1
  1743  0509  3186  26E8  3184   	fcall	___awtoft
  1744  050C  0020               	movlb	0	; select bank0
  1745  050D  0828               	movf	?___awtoft,w
  1746  050E  00B1               	movwf	___ftdiv@f1
  1747  050F  0829               	movf	?___awtoft+1,w
  1748  0510  00B2               	movwf	___ftdiv@f1+1
  1749  0511  082A               	movf	?___awtoft+2,w
  1750  0512  00B3               	movwf	___ftdiv@f1+2
  1751  0513  3000               	movlw	0
  1752  0514  00AE               	movwf	___ftdiv@f2
  1753  0515  3034               	movlw	52
  1754  0516  00AF               	movwf	___ftdiv@f2+1
  1755  0517  3043               	movlw	67
  1756  0518  00B0               	movwf	___ftdiv@f2+2
  1757  0519  3183  23C5  3184   	fcall	___ftdiv
  1758  051C  0020               	movlb	0	; select bank0
  1759  051D  082E               	movf	?___ftdiv,w
  1760  051E  00C1               	movwf	___ftmul@f2
  1761  051F  082F               	movf	?___ftdiv+1,w
  1762  0520  00C2               	movwf	___ftmul@f2+1
  1763  0521  0830               	movf	?___ftdiv+2,w
  1764  0522  00C3               	movwf	___ftmul@f2+2
  1765  0523  0021               	movlb	1	; select bank1
  1766  0524  0822               	movf	CalcWidth@angle^(0+128),w
  1767  0525  3187  2726  3184   	fcall	___lbtoft
  1768  0528  0020               	movlb	0	; select bank0
  1769  0529  0828               	movf	?___lbtoft,w
  1770  052A  00BE               	movwf	___ftmul@f1
  1771  052B  0829               	movf	?___lbtoft+1,w
  1772  052C  00BF               	movwf	___ftmul@f1+1
  1773  052D  082A               	movf	?___lbtoft+2,w
  1774  052E  00C0               	movwf	___ftmul@f1+2
  1775  052F  3183  2311  3184   	fcall	___ftmul
  1776  0532  0020               	movlb	0	; select bank0
  1777  0533  083E               	movf	?___ftmul,w
  1778  0534  00D1               	movwf	___ftadd@f2
  1779  0535  083F               	movf	?___ftmul+1,w
  1780  0536  00D2               	movwf	___ftadd@f2+1
  1781  0537  0840               	movf	?___ftmul+2,w
  1782  0538  00D3               	movwf	___ftadd@f2+2
  1783  0539  086A               	movf	CalcWidth@Parameter+1,w
  1784  053A  00A9               	movwf	___awtoft@c+1
  1785  053B  0869               	movf	CalcWidth@Parameter,w
  1786  053C  00A8               	movwf	___awtoft@c
  1787  053D  3186  26E8  3184   	fcall	___awtoft
  1788  0540  0020               	movlb	0	; select bank0
  1789  0541  0828               	movf	?___awtoft,w
  1790  0542  00CE               	movwf	___ftadd@f1
  1791  0543  0829               	movf	?___awtoft+1,w
  1792  0544  00CF               	movwf	___ftadd@f1+1
  1793  0545  082A               	movf	?___awtoft+2,w
  1794  0546  00D0               	movwf	___ftadd@f1+2
  1795  0547  3180  2076  3184   	fcall	___ftadd
  1796  054A  0020               	movlb	0	; select bank0
  1797  054B  084E               	movf	?___ftadd,w
  1798  054C  00DB               	movwf	___fttol@f1
  1799  054D  084F               	movf	?___ftadd+1,w
  1800  054E  00DC               	movwf	___fttol@f1+1
  1801  054F  0850               	movf	?___ftadd+2,w
  1802  0550  00DD               	movwf	___fttol@f1+2
  1803  0551  3184  246E         	fcall	___fttol
  1804  0553  0020               	movlb	0	; select bank0
  1805  0554  085C               	movf	?___fttol+1,w
  1806  0555  0021               	movlb	1	; select bank1
  1807  0556  00A1               	movwf	(CalcWidth@width+1)^(0+128)
  1808  0557  0020               	movlb	0	; select bank0
  1809  0558  085B               	movf	?___fttol,w
  1810  0559  0021               	movlb	1	; select bank1
  1811  055A  00A0               	movwf	CalcWidth@width^(0+128)
  1812                           
  1813                           ;main.c: 135: return width;
  1814  055B  0821               	movf	(CalcWidth@width+1)^(0+128),w
  1815  055C  0020               	movlb	0	; select bank0
  1816  055D  00EA               	movwf	?_CalcWidth+1
  1817  055E  0021               	movlb	1	; select bank1
  1818  055F  0820               	movf	CalcWidth@width^(0+128),w
  1819  0560  0020               	movlb	0	; select bank0
  1820  0561  00E9               	movwf	?_CalcWidth
  1821  0562  0008               	return
  1822  0563                     __end_of_CalcWidth:	
  1823                           
  1824                           	psect	text3
  1825  0726                     __ptext3:	
  1826 ;; *************** function ___lbtoft *****************
  1827 ;; Defined at:
  1828 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lbtoft.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  c               1    wreg     unsigned char 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  c               1   15[BANK0 ] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  3    8[BANK0 ] float 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1842 ;;      Params:         0       3       0       0
  1843 ;;      Locals:         0       1       0       0
  1844 ;;      Temps:          0       4       0       0
  1845 ;;      Totals:         0       8       0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    4
  1849 ;; This function calls:
  1850 ;;		___ftpack
  1851 ;; This function is called by:
  1852 ;;		_CalcWidth
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function ___lbtoft
  1858  0726                     ___lbtoft:	
  1859                           
  1860                           ;incstack = 0
  1861                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1862                           ;___lbtoft@c stored from wreg
  1863  0726  0020               	movlb	0	; select bank0
  1864  0727  00AF               	movwf	___lbtoft@c
  1865  0728  082F               	movf	___lbtoft@c,w
  1866  0729  00AB               	movwf	??___lbtoft
  1867  072A  01AC               	clrf	??___lbtoft+1
  1868  072B  01AD               	clrf	??___lbtoft+2
  1869  072C  082B               	movf	??___lbtoft,w
  1870  072D  00A0               	movwf	___ftpack@arg
  1871  072E  082C               	movf	??___lbtoft+1,w
  1872  072F  00A1               	movwf	___ftpack@arg+1
  1873  0730  082D               	movf	??___lbtoft+2,w
  1874  0731  00A2               	movwf	___ftpack@arg+2
  1875  0732  308E               	movlw	142
  1876  0733  00AE               	movwf	??___lbtoft+3
  1877  0734  082E               	movf	??___lbtoft+3,w
  1878  0735  00A3               	movwf	___ftpack@exp
  1879  0736  01A4               	clrf	___ftpack@sign
  1880  0737  3185  2563         	fcall	___ftpack
  1881  0739  0020               	movlb	0	; select bank0
  1882  073A  0820               	movf	?___ftpack,w
  1883  073B  00A8               	movwf	?___lbtoft
  1884  073C  0821               	movf	?___ftpack+1,w
  1885  073D  00A9               	movwf	?___lbtoft+1
  1886  073E  0822               	movf	?___ftpack+2,w
  1887  073F  00AA               	movwf	?___lbtoft+2
  1888  0740  0008               	return
  1889  0741                     __end_of___lbtoft:	
  1890                           
  1891                           	psect	text4
  1892  046E                     __ptext4:	
  1893 ;; *************** function ___fttol *****************
  1894 ;; Defined at:
  1895 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;  f1              3   59[BANK0 ] float 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  lval            4   68[BANK0 ] unsigned long 
  1900 ;;  exp1            1   72[BANK0 ] unsigned char 
  1901 ;;  sign1           1   67[BANK0 ] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  4   59[BANK0 ] long 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1911 ;;      Params:         0       4       0       0
  1912 ;;      Locals:         0       6       0       0
  1913 ;;      Temps:          0       4       0       0
  1914 ;;      Totals:         0      14       0       0
  1915 ;;Total ram usage:       14 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    3
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_CalcWidth
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function ___fttol
  1927  046E                     ___fttol:	
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1931  046E  0020               	movlb	0	; select bank0
  1932  046F  085B               	movf	___fttol@f1,w
  1933  0470  00DF               	movwf	??___fttol
  1934  0471  085C               	movf	___fttol@f1+1,w
  1935  0472  00E0               	movwf	??___fttol+1
  1936  0473  085D               	movf	___fttol@f1+2,w
  1937  0474  00E1               	movwf	??___fttol+2
  1938  0475  1003               	clrc
  1939  0476  0D60               	rlf	??___fttol+1,w
  1940  0477  0D61               	rlf	??___fttol+2,w
  1941  0478  00E2               	movwf	??___fttol+3
  1942  0479  0862               	movf	??___fttol+3,w
  1943  047A  00E8               	movwf	___fttol@exp1
  1944  047B  0868               	movf	___fttol@exp1,w
  1945  047C  1D03               	btfss	3,2
  1946  047D  2C87               	goto	l1385
  1947  047E  3000               	movlw	0
  1948  047F  00DE               	movwf	?___fttol+3
  1949  0480  3000               	movlw	0
  1950  0481  00DD               	movwf	?___fttol+2
  1951  0482  3000               	movlw	0
  1952  0483  00DC               	movwf	?___fttol+1
  1953  0484  3000               	movlw	0
  1954  0485  00DB               	movwf	?___fttol
  1955  0486  0008               	return
  1956  0487                     l1385:	
  1957  0487  085B               	movf	___fttol@f1,w
  1958  0488  00DF               	movwf	??___fttol
  1959  0489  085C               	movf	___fttol@f1+1,w
  1960  048A  00E0               	movwf	??___fttol+1
  1961  048B  085D               	movf	___fttol@f1+2,w
  1962  048C  00E1               	movwf	??___fttol+2
  1963  048D  3017               	movlw	23
  1964  048E                     u1585:	
  1965  048E  36E1               	lsrf	??___fttol+2,f
  1966  048F  0CE0               	rrf	??___fttol+1,f
  1967  0490  0CDF               	rrf	??___fttol,f
  1968  0491  0B89               	decfsz	9,f
  1969  0492  2C8E               	goto	u1585
  1970  0493  085F               	movf	??___fttol,w
  1971  0494  00E2               	movwf	??___fttol+3
  1972  0495  0862               	movf	??___fttol+3,w
  1973  0496  00E3               	movwf	___fttol@sign1
  1974  0497  17DC               	bsf	___fttol@f1+1,7
  1975  0498  30FF               	movlw	255
  1976  0499  05DB               	andwf	___fttol@f1,f
  1977  049A  30FF               	movlw	255
  1978  049B  05DC               	andwf	___fttol@f1+1,f
  1979  049C  3000               	movlw	0
  1980  049D  05DD               	andwf	___fttol@f1+2,f
  1981  049E  085B               	movf	___fttol@f1,w
  1982  049F  00E4               	movwf	___fttol@lval
  1983  04A0  085C               	movf	___fttol@f1+1,w
  1984  04A1  00E5               	movwf	___fttol@lval+1
  1985  04A2  085D               	movf	___fttol@f1+2,w
  1986  04A3  00E6               	movwf	___fttol@lval+2
  1987  04A4  01E7               	clrf	___fttol@lval+3
  1988  04A5  308E               	movlw	142
  1989  04A6  02E8               	subwf	___fttol@exp1,f
  1990  04A7  1FE8               	btfss	___fttol@exp1,7
  1991  04A8  2CC5               	goto	l1405
  1992  04A9  0868               	movf	___fttol@exp1,w
  1993  04AA  3A80               	xorlw	128
  1994  04AB  3E8F               	addlw	143
  1995  04AC  1803               	skipnc
  1996  04AD  2CB7               	goto	l1403
  1997  04AE  3000               	movlw	0
  1998  04AF  00DE               	movwf	?___fttol+3
  1999  04B0  3000               	movlw	0
  2000  04B1  00DD               	movwf	?___fttol+2
  2001  04B2  3000               	movlw	0
  2002  04B3  00DC               	movwf	?___fttol+1
  2003  04B4  3000               	movlw	0
  2004  04B5  00DB               	movwf	?___fttol
  2005  04B6  0008               	return
  2006  04B7                     l1403:	
  2007  04B7  3001               	movlw	1
  2008  04B8                     u1615:	
  2009  04B8  36E7               	lsrf	___fttol@lval+3,f
  2010  04B9  0CE6               	rrf	___fttol@lval+2,f
  2011  04BA  0CE5               	rrf	___fttol@lval+1,f
  2012  04BB  0CE4               	rrf	___fttol@lval,f
  2013  04BC  0B89               	decfsz	9,f
  2014  04BD  2CB8               	goto	u1615
  2015  04BE  3001               	movlw	1
  2016  04BF  00DF               	movwf	??___fttol
  2017  04C0  085F               	movf	??___fttol,w
  2018  04C1  07E8               	addwf	___fttol@exp1,f
  2019  04C2  1903               	btfsc	3,2
  2020  04C3  2CDE               	goto	l1413
  2021  04C4  2CB7               	goto	l1403
  2022  04C5                     l1405:	
  2023  04C5  3018               	movlw	24
  2024  04C6  0268               	subwf	___fttol@exp1,w
  2025  04C7  1C03               	skipc
  2026  04C8  2CDB               	goto	l557
  2027  04C9  3000               	movlw	0
  2028  04CA  00DE               	movwf	?___fttol+3
  2029  04CB  3000               	movlw	0
  2030  04CC  00DD               	movwf	?___fttol+2
  2031  04CD  3000               	movlw	0
  2032  04CE  00DC               	movwf	?___fttol+1
  2033  04CF  3000               	movlw	0
  2034  04D0  00DB               	movwf	?___fttol
  2035  04D1  0008               	return
  2036  04D2                     l1411:	
  2037  04D2  3001               	movlw	1
  2038  04D3                     u1645:	
  2039  04D3  35E4               	lslf	___fttol@lval,f
  2040  04D4  0DE5               	rlf	___fttol@lval+1,f
  2041  04D5  0DE6               	rlf	___fttol@lval+2,f
  2042  04D6  0DE7               	rlf	___fttol@lval+3,f
  2043  04D7  0B89               	decfsz	9,f
  2044  04D8  2CD3               	goto	u1645
  2045  04D9  3001               	movlw	1
  2046  04DA  02E8               	subwf	___fttol@exp1,f
  2047  04DB                     l557:	
  2048  04DB  0868               	movf	___fttol@exp1,w
  2049  04DC  1D03               	btfss	3,2
  2050  04DD  2CD2               	goto	l1411
  2051  04DE                     l1413:	
  2052  04DE  0863               	movf	___fttol@sign1,w
  2053  04DF  1903               	btfsc	3,2
  2054  04E0  2CEC               	goto	l1417
  2055  04E1  09E4               	comf	___fttol@lval,f
  2056  04E2  09E5               	comf	___fttol@lval+1,f
  2057  04E3  09E6               	comf	___fttol@lval+2,f
  2058  04E4  09E7               	comf	___fttol@lval+3,f
  2059  04E5  0AE4               	incf	___fttol@lval,f
  2060  04E6  1903               	skipnz
  2061  04E7  0AE5               	incf	___fttol@lval+1,f
  2062  04E8  1903               	skipnz
  2063  04E9  0AE6               	incf	___fttol@lval+2,f
  2064  04EA  1903               	skipnz
  2065  04EB  0AE7               	incf	___fttol@lval+3,f
  2066  04EC                     l1417:	
  2067  04EC  0867               	movf	___fttol@lval+3,w
  2068  04ED  00DE               	movwf	?___fttol+3
  2069  04EE  0866               	movf	___fttol@lval+2,w
  2070  04EF  00DD               	movwf	?___fttol+2
  2071  04F0  0865               	movf	___fttol@lval+1,w
  2072  04F1  00DC               	movwf	?___fttol+1
  2073  04F2  0864               	movf	___fttol@lval,w
  2074  04F3  00DB               	movwf	?___fttol
  2075  04F4  0008               	return
  2076  04F5                     __end_of___fttol:	
  2077                           
  2078                           	psect	text5
  2079  0311                     __ptext5:	
  2080 ;; *************** function ___ftmul *****************
  2081 ;; Defined at:
  2082 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  f1              3   30[BANK0 ] float 
  2085 ;;  f2              3   33[BANK0 ] float 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  f3_as_produc    3   41[BANK0 ] unsigned um
  2088 ;;  sign            1   45[BANK0 ] unsigned char 
  2089 ;;  cntr            1   44[BANK0 ] unsigned char 
  2090 ;;  exp             1   40[BANK0 ] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  3   30[BANK0 ] float 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, pclath, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2100 ;;      Params:         0       6       0       0
  2101 ;;      Locals:         0       6       0       0
  2102 ;;      Temps:          0       4       0       0
  2103 ;;      Totals:         0      16       0       0
  2104 ;;Total ram usage:       16 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    4
  2107 ;; This function calls:
  2108 ;;		___ftpack
  2109 ;; This function is called by:
  2110 ;;		_CalcWidth
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           
  2115                           ;psect for function ___ftmul
  2116  0311                     ___ftmul:	
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2120  0311  0020               	movlb	0	; select bank0
  2121  0312  083E               	movf	___ftmul@f1,w
  2122  0313  00C4               	movwf	??___ftmul
  2123  0314  083F               	movf	___ftmul@f1+1,w
  2124  0315  00C5               	movwf	??___ftmul+1
  2125  0316  0840               	movf	___ftmul@f1+2,w
  2126  0317  00C6               	movwf	??___ftmul+2
  2127  0318  1003               	clrc
  2128  0319  0D45               	rlf	??___ftmul+1,w
  2129  031A  0D46               	rlf	??___ftmul+2,w
  2130  031B  00C7               	movwf	??___ftmul+3
  2131  031C  0847               	movf	??___ftmul+3,w
  2132  031D  00C8               	movwf	___ftmul@exp
  2133  031E  0848               	movf	___ftmul@exp,w
  2134  031F  1D03               	btfss	3,2
  2135  0320  2B28               	goto	l1335
  2136  0321  3000               	movlw	0
  2137  0322  00BE               	movwf	?___ftmul
  2138  0323  3000               	movlw	0
  2139  0324  00BF               	movwf	?___ftmul+1
  2140  0325  3000               	movlw	0
  2141  0326  00C0               	movwf	?___ftmul+2
  2142  0327  0008               	return
  2143  0328                     l1335:	
  2144  0328  0841               	movf	___ftmul@f2,w
  2145  0329  00C4               	movwf	??___ftmul
  2146  032A  0842               	movf	___ftmul@f2+1,w
  2147  032B  00C5               	movwf	??___ftmul+1
  2148  032C  0843               	movf	___ftmul@f2+2,w
  2149  032D  00C6               	movwf	??___ftmul+2
  2150  032E  1003               	clrc
  2151  032F  0D45               	rlf	??___ftmul+1,w
  2152  0330  0D46               	rlf	??___ftmul+2,w
  2153  0331  00C7               	movwf	??___ftmul+3
  2154  0332  0847               	movf	??___ftmul+3,w
  2155  0333  00CD               	movwf	___ftmul@sign
  2156  0334  084D               	movf	___ftmul@sign,w
  2157  0335  1D03               	btfss	3,2
  2158  0336  2B3E               	goto	l1341
  2159  0337  3000               	movlw	0
  2160  0338  00BE               	movwf	?___ftmul
  2161  0339  3000               	movlw	0
  2162  033A  00BF               	movwf	?___ftmul+1
  2163  033B  3000               	movlw	0
  2164  033C  00C0               	movwf	?___ftmul+2
  2165  033D  0008               	return
  2166  033E                     l1341:	
  2167  033E  084D               	movf	___ftmul@sign,w
  2168  033F  3E7B               	addlw	123
  2169  0340  00C4               	movwf	??___ftmul
  2170  0341  0844               	movf	??___ftmul,w
  2171  0342  07C8               	addwf	___ftmul@exp,f
  2172  0343  083E               	movf	___ftmul@f1,w
  2173  0344  00C4               	movwf	??___ftmul
  2174  0345  083F               	movf	___ftmul@f1+1,w
  2175  0346  00C5               	movwf	??___ftmul+1
  2176  0347  0840               	movf	___ftmul@f1+2,w
  2177  0348  00C6               	movwf	??___ftmul+2
  2178  0349  3010               	movlw	16
  2179  034A                     u1475:	
  2180  034A  36C6               	lsrf	??___ftmul+2,f
  2181  034B  0CC5               	rrf	??___ftmul+1,f
  2182  034C  0CC4               	rrf	??___ftmul,f
  2183  034D  0B89               	decfsz	9,f
  2184  034E  2B4A               	goto	u1475
  2185  034F  0844               	movf	??___ftmul,w
  2186  0350  00C7               	movwf	??___ftmul+3
  2187  0351  0847               	movf	??___ftmul+3,w
  2188  0352  00CD               	movwf	___ftmul@sign
  2189  0353  0841               	movf	___ftmul@f2,w
  2190  0354  00C4               	movwf	??___ftmul
  2191  0355  0842               	movf	___ftmul@f2+1,w
  2192  0356  00C5               	movwf	??___ftmul+1
  2193  0357  0843               	movf	___ftmul@f2+2,w
  2194  0358  00C6               	movwf	??___ftmul+2
  2195  0359  3010               	movlw	16
  2196  035A                     u1485:	
  2197  035A  36C6               	lsrf	??___ftmul+2,f
  2198  035B  0CC5               	rrf	??___ftmul+1,f
  2199  035C  0CC4               	rrf	??___ftmul,f
  2200  035D  0B89               	decfsz	9,f
  2201  035E  2B5A               	goto	u1485
  2202  035F  0844               	movf	??___ftmul,w
  2203  0360  00C7               	movwf	??___ftmul+3
  2204  0361  0847               	movf	??___ftmul+3,w
  2205  0362  06CD               	xorwf	___ftmul@sign,f
  2206  0363  3080               	movlw	128
  2207  0364  00C4               	movwf	??___ftmul
  2208  0365  0844               	movf	??___ftmul,w
  2209  0366  05CD               	andwf	___ftmul@sign,f
  2210  0367  17BF               	bsf	___ftmul@f1+1,7
  2211  0368  17C2               	bsf	___ftmul@f2+1,7
  2212  0369  30FF               	movlw	255
  2213  036A  05C1               	andwf	___ftmul@f2,f
  2214  036B  30FF               	movlw	255
  2215  036C  05C2               	andwf	___ftmul@f2+1,f
  2216  036D  3000               	movlw	0
  2217  036E  05C3               	andwf	___ftmul@f2+2,f
  2218  036F  3000               	movlw	0
  2219  0370  00C9               	movwf	___ftmul@f3_as_product
  2220  0371  3000               	movlw	0
  2221  0372  00CA               	movwf	___ftmul@f3_as_product+1
  2222  0373  3000               	movlw	0
  2223  0374  00CB               	movwf	___ftmul@f3_as_product+2
  2224  0375  3007               	movlw	7
  2225  0376  00C4               	movwf	??___ftmul
  2226  0377  0844               	movf	??___ftmul,w
  2227  0378  00CC               	movwf	___ftmul@cntr
  2228  0379                     l1353:	
  2229  0379  1C3E               	btfss	___ftmul@f1,0
  2230  037A  2B81               	goto	l1357
  2231  037B  0841               	movf	___ftmul@f2,w
  2232  037C  07C9               	addwf	___ftmul@f3_as_product,f
  2233  037D  0842               	movf	___ftmul@f2+1,w
  2234  037E  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  2235  037F  0843               	movf	___ftmul@f2+2,w
  2236  0380  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  2237  0381                     l1357:	
  2238  0381  3001               	movlw	1
  2239  0382                     u1505:	
  2240  0382  36C0               	lsrf	___ftmul@f1+2,f
  2241  0383  0CBF               	rrf	___ftmul@f1+1,f
  2242  0384  0CBE               	rrf	___ftmul@f1,f
  2243  0385  0B89               	decfsz	9,f
  2244  0386  2B82               	goto	u1505
  2245  0387  3001               	movlw	1
  2246  0388                     u1515:	
  2247  0388  35C1               	lslf	___ftmul@f2,f
  2248  0389  0DC2               	rlf	___ftmul@f2+1,f
  2249  038A  0DC3               	rlf	___ftmul@f2+2,f
  2250  038B  0B89               	decfsz	9,f
  2251  038C  2B88               	goto	u1515
  2252  038D  3001               	movlw	1
  2253  038E  02CC               	subwf	___ftmul@cntr,f
  2254  038F  1D03               	btfss	3,2
  2255  0390  2B79               	goto	l1353
  2256  0391  3009               	movlw	9
  2257  0392  00C4               	movwf	??___ftmul
  2258  0393  0844               	movf	??___ftmul,w
  2259  0394  00CC               	movwf	___ftmul@cntr
  2260  0395                     l1365:	
  2261  0395  1C3E               	btfss	___ftmul@f1,0
  2262  0396  2B9D               	goto	l1369
  2263  0397  0841               	movf	___ftmul@f2,w
  2264  0398  07C9               	addwf	___ftmul@f3_as_product,f
  2265  0399  0842               	movf	___ftmul@f2+1,w
  2266  039A  3DCA               	addwfc	___ftmul@f3_as_product+1,f
  2267  039B  0843               	movf	___ftmul@f2+2,w
  2268  039C  3DCB               	addwfc	___ftmul@f3_as_product+2,f
  2269  039D                     l1369:	
  2270  039D  3001               	movlw	1
  2271  039E                     u1545:	
  2272  039E  36C0               	lsrf	___ftmul@f1+2,f
  2273  039F  0CBF               	rrf	___ftmul@f1+1,f
  2274  03A0  0CBE               	rrf	___ftmul@f1,f
  2275  03A1  0B89               	decfsz	9,f
  2276  03A2  2B9E               	goto	u1545
  2277  03A3  3001               	movlw	1
  2278  03A4                     u1555:	
  2279  03A4  36CB               	lsrf	___ftmul@f3_as_product+2,f
  2280  03A5  0CCA               	rrf	___ftmul@f3_as_product+1,f
  2281  03A6  0CC9               	rrf	___ftmul@f3_as_product,f
  2282  03A7  0B89               	decfsz	9,f
  2283  03A8  2BA4               	goto	u1555
  2284  03A9  3001               	movlw	1
  2285  03AA  02CC               	subwf	___ftmul@cntr,f
  2286  03AB  1D03               	btfss	3,2
  2287  03AC  2B95               	goto	l1365
  2288  03AD  0849               	movf	___ftmul@f3_as_product,w
  2289  03AE  00A0               	movwf	___ftpack@arg
  2290  03AF  084A               	movf	___ftmul@f3_as_product+1,w
  2291  03B0  00A1               	movwf	___ftpack@arg+1
  2292  03B1  084B               	movf	___ftmul@f3_as_product+2,w
  2293  03B2  00A2               	movwf	___ftpack@arg+2
  2294  03B3  0848               	movf	___ftmul@exp,w
  2295  03B4  00C4               	movwf	??___ftmul
  2296  03B5  0844               	movf	??___ftmul,w
  2297  03B6  00A3               	movwf	___ftpack@exp
  2298  03B7  084D               	movf	___ftmul@sign,w
  2299  03B8  00C5               	movwf	??___ftmul+1
  2300  03B9  0845               	movf	??___ftmul+1,w
  2301  03BA  00A4               	movwf	___ftpack@sign
  2302  03BB  3185  2563         	fcall	___ftpack
  2303  03BD  0020               	movlb	0	; select bank0
  2304  03BE  0820               	movf	?___ftpack,w
  2305  03BF  00BE               	movwf	?___ftmul
  2306  03C0  0821               	movf	?___ftpack+1,w
  2307  03C1  00BF               	movwf	?___ftmul+1
  2308  03C2  0822               	movf	?___ftpack+2,w
  2309  03C3  00C0               	movwf	?___ftmul+2
  2310  03C4  0008               	return
  2311  03C5                     __end_of___ftmul:	
  2312                           
  2313                           	psect	text6
  2314  03C5                     __ptext6:	
  2315 ;; *************** function ___ftdiv *****************
  2316 ;; Defined at:
  2317 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  f2              3   14[BANK0 ] float 
  2320 ;;  f1              3   17[BANK0 ] float 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  f3              3   25[BANK0 ] float 
  2323 ;;  sign            1   29[BANK0 ] unsigned char 
  2324 ;;  exp             1   28[BANK0 ] unsigned char 
  2325 ;;  cntr            1   24[BANK0 ] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  3   14[BANK0 ] float 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2335 ;;      Params:         0       6       0       0
  2336 ;;      Locals:         0       6       0       0
  2337 ;;      Temps:          0       4       0       0
  2338 ;;      Totals:         0      16       0       0
  2339 ;;Total ram usage:       16 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    4
  2342 ;; This function calls:
  2343 ;;		___ftpack
  2344 ;; This function is called by:
  2345 ;;		_CalcWidth
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function ___ftdiv
  2351  03C5                     ___ftdiv:	
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2355  03C5  0020               	movlb	0	; select bank0
  2356  03C6  0831               	movf	___ftdiv@f1,w
  2357  03C7  00B4               	movwf	??___ftdiv
  2358  03C8  0832               	movf	___ftdiv@f1+1,w
  2359  03C9  00B5               	movwf	??___ftdiv+1
  2360  03CA  0833               	movf	___ftdiv@f1+2,w
  2361  03CB  00B6               	movwf	??___ftdiv+2
  2362  03CC  1003               	clrc
  2363  03CD  0D35               	rlf	??___ftdiv+1,w
  2364  03CE  0D36               	rlf	??___ftdiv+2,w
  2365  03CF  00B7               	movwf	??___ftdiv+3
  2366  03D0  0837               	movf	??___ftdiv+3,w
  2367  03D1  00BC               	movwf	___ftdiv@exp
  2368  03D2  083C               	movf	___ftdiv@exp,w
  2369  03D3  1D03               	btfss	3,2
  2370  03D4  2BDC               	goto	l1293
  2371  03D5  3000               	movlw	0
  2372  03D6  00AE               	movwf	?___ftdiv
  2373  03D7  3000               	movlw	0
  2374  03D8  00AF               	movwf	?___ftdiv+1
  2375  03D9  3000               	movlw	0
  2376  03DA  00B0               	movwf	?___ftdiv+2
  2377  03DB  0008               	return
  2378  03DC                     l1293:	
  2379  03DC  082E               	movf	___ftdiv@f2,w
  2380  03DD  00B4               	movwf	??___ftdiv
  2381  03DE  082F               	movf	___ftdiv@f2+1,w
  2382  03DF  00B5               	movwf	??___ftdiv+1
  2383  03E0  0830               	movf	___ftdiv@f2+2,w
  2384  03E1  00B6               	movwf	??___ftdiv+2
  2385  03E2  1003               	clrc
  2386  03E3  0D35               	rlf	??___ftdiv+1,w
  2387  03E4  0D36               	rlf	??___ftdiv+2,w
  2388  03E5  00B7               	movwf	??___ftdiv+3
  2389  03E6  0837               	movf	??___ftdiv+3,w
  2390  03E7  00BD               	movwf	___ftdiv@sign
  2391  03E8  083D               	movf	___ftdiv@sign,w
  2392  03E9  1D03               	btfss	3,2
  2393  03EA  2BF2               	goto	l1299
  2394  03EB  3000               	movlw	0
  2395  03EC  00AE               	movwf	?___ftdiv
  2396  03ED  3000               	movlw	0
  2397  03EE  00AF               	movwf	?___ftdiv+1
  2398  03EF  3000               	movlw	0
  2399  03F0  00B0               	movwf	?___ftdiv+2
  2400  03F1  0008               	return
  2401  03F2                     l1299:	
  2402  03F2  3000               	movlw	0
  2403  03F3  00B9               	movwf	___ftdiv@f3
  2404  03F4  3000               	movlw	0
  2405  03F5  00BA               	movwf	___ftdiv@f3+1
  2406  03F6  3000               	movlw	0
  2407  03F7  00BB               	movwf	___ftdiv@f3+2
  2408  03F8  3089               	movlw	137
  2409  03F9  073D               	addwf	___ftdiv@sign,w
  2410  03FA  00B4               	movwf	??___ftdiv
  2411  03FB  0834               	movf	??___ftdiv,w
  2412  03FC  02BC               	subwf	___ftdiv@exp,f
  2413  03FD  0831               	movf	___ftdiv@f1,w
  2414  03FE  00B4               	movwf	??___ftdiv
  2415  03FF  0832               	movf	___ftdiv@f1+1,w
  2416  0400  00B5               	movwf	??___ftdiv+1
  2417  0401  0833               	movf	___ftdiv@f1+2,w
  2418  0402  00B6               	movwf	??___ftdiv+2
  2419  0403  3010               	movlw	16
  2420  0404                     u1395:	
  2421  0404  36B6               	lsrf	??___ftdiv+2,f
  2422  0405  0CB5               	rrf	??___ftdiv+1,f
  2423  0406  0CB4               	rrf	??___ftdiv,f
  2424  0407  0B89               	decfsz	9,f
  2425  0408  2C04               	goto	u1395
  2426  0409  0834               	movf	??___ftdiv,w
  2427  040A  00B7               	movwf	??___ftdiv+3
  2428  040B  0837               	movf	??___ftdiv+3,w
  2429  040C  00BD               	movwf	___ftdiv@sign
  2430  040D  082E               	movf	___ftdiv@f2,w
  2431  040E  00B4               	movwf	??___ftdiv
  2432  040F  082F               	movf	___ftdiv@f2+1,w
  2433  0410  00B5               	movwf	??___ftdiv+1
  2434  0411  0830               	movf	___ftdiv@f2+2,w
  2435  0412  00B6               	movwf	??___ftdiv+2
  2436  0413  3010               	movlw	16
  2437  0414                     u1405:	
  2438  0414  36B6               	lsrf	??___ftdiv+2,f
  2439  0415  0CB5               	rrf	??___ftdiv+1,f
  2440  0416  0CB4               	rrf	??___ftdiv,f
  2441  0417  0B89               	decfsz	9,f
  2442  0418  2C14               	goto	u1405
  2443  0419  0834               	movf	??___ftdiv,w
  2444  041A  00B7               	movwf	??___ftdiv+3
  2445  041B  0837               	movf	??___ftdiv+3,w
  2446  041C  06BD               	xorwf	___ftdiv@sign,f
  2447  041D  3080               	movlw	128
  2448  041E  00B4               	movwf	??___ftdiv
  2449  041F  0834               	movf	??___ftdiv,w
  2450  0420  05BD               	andwf	___ftdiv@sign,f
  2451  0421  17B2               	bsf	___ftdiv@f1+1,7
  2452  0422  30FF               	movlw	255
  2453  0423  05B1               	andwf	___ftdiv@f1,f
  2454  0424  30FF               	movlw	255
  2455  0425  05B2               	andwf	___ftdiv@f1+1,f
  2456  0426  3000               	movlw	0
  2457  0427  05B3               	andwf	___ftdiv@f1+2,f
  2458  0428  17AF               	bsf	___ftdiv@f2+1,7
  2459  0429  30FF               	movlw	255
  2460  042A  05AE               	andwf	___ftdiv@f2,f
  2461  042B  30FF               	movlw	255
  2462  042C  05AF               	andwf	___ftdiv@f2+1,f
  2463  042D  3000               	movlw	0
  2464  042E  05B0               	andwf	___ftdiv@f2+2,f
  2465  042F  3018               	movlw	24
  2466  0430  00B4               	movwf	??___ftdiv
  2467  0431  0834               	movf	??___ftdiv,w
  2468  0432  00B8               	movwf	___ftdiv@cntr
  2469  0433                     l1313:	
  2470  0433  3001               	movlw	1
  2471  0434                     u1415:	
  2472  0434  35B9               	lslf	___ftdiv@f3,f
  2473  0435  0DBA               	rlf	___ftdiv@f3+1,f
  2474  0436  0DBB               	rlf	___ftdiv@f3+2,f
  2475  0437  0B89               	decfsz	9,f
  2476  0438  2C34               	goto	u1415
  2477  0439  0830               	movf	___ftdiv@f2+2,w
  2478  043A  0233               	subwf	___ftdiv@f1+2,w
  2479  043B  1D03               	skipz
  2480  043C  2C43               	goto	u1425
  2481  043D  082F               	movf	___ftdiv@f2+1,w
  2482  043E  0232               	subwf	___ftdiv@f1+1,w
  2483  043F  1D03               	skipz
  2484  0440  2C43               	goto	u1425
  2485  0441  082E               	movf	___ftdiv@f2,w
  2486  0442  0231               	subwf	___ftdiv@f1,w
  2487  0443                     u1425:	
  2488  0443  1C03               	skipc
  2489  0444  2C4C               	goto	l1321
  2490  0445  082E               	movf	___ftdiv@f2,w
  2491  0446  02B1               	subwf	___ftdiv@f1,f
  2492  0447  082F               	movf	___ftdiv@f2+1,w
  2493  0448  3BB2               	subwfb	___ftdiv@f1+1,f
  2494  0449  0830               	movf	___ftdiv@f2+2,w
  2495  044A  3BB3               	subwfb	___ftdiv@f1+2,f
  2496  044B  1439               	bsf	___ftdiv@f3,0
  2497  044C                     l1321:	
  2498  044C  3001               	movlw	1
  2499  044D                     u1435:	
  2500  044D  35B1               	lslf	___ftdiv@f1,f
  2501  044E  0DB2               	rlf	___ftdiv@f1+1,f
  2502  044F  0DB3               	rlf	___ftdiv@f1+2,f
  2503  0450  0B89               	decfsz	9,f
  2504  0451  2C4D               	goto	u1435
  2505  0452  3001               	movlw	1
  2506  0453  02B8               	subwf	___ftdiv@cntr,f
  2507  0454  1D03               	btfss	3,2
  2508  0455  2C33               	goto	l1313
  2509  0456  0839               	movf	___ftdiv@f3,w
  2510  0457  00A0               	movwf	___ftpack@arg
  2511  0458  083A               	movf	___ftdiv@f3+1,w
  2512  0459  00A1               	movwf	___ftpack@arg+1
  2513  045A  083B               	movf	___ftdiv@f3+2,w
  2514  045B  00A2               	movwf	___ftpack@arg+2
  2515  045C  083C               	movf	___ftdiv@exp,w
  2516  045D  00B4               	movwf	??___ftdiv
  2517  045E  0834               	movf	??___ftdiv,w
  2518  045F  00A3               	movwf	___ftpack@exp
  2519  0460  083D               	movf	___ftdiv@sign,w
  2520  0461  00B5               	movwf	??___ftdiv+1
  2521  0462  0835               	movf	??___ftdiv+1,w
  2522  0463  00A4               	movwf	___ftpack@sign
  2523  0464  3185  2563         	fcall	___ftpack
  2524  0466  0020               	movlb	0	; select bank0
  2525  0467  0820               	movf	?___ftpack,w
  2526  0468  00AE               	movwf	?___ftdiv
  2527  0469  0821               	movf	?___ftpack+1,w
  2528  046A  00AF               	movwf	?___ftdiv+1
  2529  046B  0822               	movf	?___ftpack+2,w
  2530  046C  00B0               	movwf	?___ftdiv+2
  2531  046D  0008               	return
  2532  046E                     __end_of___ftdiv:	
  2533                           
  2534                           	psect	text7
  2535  0076                     __ptext7:	
  2536 ;; *************** function ___ftadd *****************
  2537 ;; Defined at:
  2538 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  f1              3   46[BANK0 ] float 
  2541 ;;  f2              3   49[BANK0 ] float 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  exp1            1   58[BANK0 ] unsigned char 
  2544 ;;  exp2            1   57[BANK0 ] unsigned char 
  2545 ;;  sign            1   56[BANK0 ] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  3   46[BANK0 ] float 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2555 ;;      Params:         0       6       0       0
  2556 ;;      Locals:         0       3       0       0
  2557 ;;      Temps:          0       4       0       0
  2558 ;;      Totals:         0      13       0       0
  2559 ;;Total ram usage:       13 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    4
  2562 ;; This function calls:
  2563 ;;		___ftpack
  2564 ;; This function is called by:
  2565 ;;		_CalcWidth
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function ___ftadd
  2571  0076                     ___ftadd:	
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2575  0076  0020               	movlb	0	; select bank0
  2576  0077  084E               	movf	___ftadd@f1,w
  2577  0078  00D4               	movwf	??___ftadd
  2578  0079  084F               	movf	___ftadd@f1+1,w
  2579  007A  00D5               	movwf	??___ftadd+1
  2580  007B  0850               	movf	___ftadd@f1+2,w
  2581  007C  00D6               	movwf	??___ftadd+2
  2582  007D  1003               	clrc
  2583  007E  0D55               	rlf	??___ftadd+1,w
  2584  007F  0D56               	rlf	??___ftadd+2,w
  2585  0080  00D7               	movwf	??___ftadd+3
  2586  0081  0857               	movf	??___ftadd+3,w
  2587  0082  00DA               	movwf	___ftadd@exp1
  2588  0083  0851               	movf	___ftadd@f2,w
  2589  0084  00D4               	movwf	??___ftadd
  2590  0085  0852               	movf	___ftadd@f2+1,w
  2591  0086  00D5               	movwf	??___ftadd+1
  2592  0087  0853               	movf	___ftadd@f2+2,w
  2593  0088  00D6               	movwf	??___ftadd+2
  2594  0089  1003               	clrc
  2595  008A  0D55               	rlf	??___ftadd+1,w
  2596  008B  0D56               	rlf	??___ftadd+2,w
  2597  008C  00D7               	movwf	??___ftadd+3
  2598  008D  0857               	movf	??___ftadd+3,w
  2599  008E  00D9               	movwf	___ftadd@exp2
  2600  008F  085A               	movf	___ftadd@exp1,w
  2601  0090  1903               	btfsc	3,2
  2602  0091  289E               	goto	l1223
  2603  0092  0859               	movf	___ftadd@exp2,w
  2604  0093  025A               	subwf	___ftadd@exp1,w
  2605  0094  1803               	skipnc
  2606  0095  28A5               	goto	l1227
  2607  0096  035A               	decf	___ftadd@exp1,w
  2608  0097  3AFF               	xorlw	255
  2609  0098  0759               	addwf	___ftadd@exp2,w
  2610  0099  00D4               	movwf	??___ftadd
  2611  009A  3019               	movlw	25
  2612  009B  0254               	subwf	??___ftadd,w
  2613  009C  1C03               	skipc
  2614  009D  28A5               	goto	l1227
  2615  009E                     l1223:	
  2616  009E  0851               	movf	___ftadd@f2,w
  2617  009F  00CE               	movwf	?___ftadd
  2618  00A0  0852               	movf	___ftadd@f2+1,w
  2619  00A1  00CF               	movwf	?___ftadd+1
  2620  00A2  0853               	movf	___ftadd@f2+2,w
  2621  00A3  00D0               	movwf	?___ftadd+2
  2622  00A4  0008               	return
  2623  00A5                     l1227:	
  2624  00A5  0859               	movf	___ftadd@exp2,w
  2625  00A6  1903               	btfsc	3,2
  2626  00A7  0008               	return
  2627  00A8  085A               	movf	___ftadd@exp1,w
  2628  00A9  0259               	subwf	___ftadd@exp2,w
  2629  00AA  1803               	skipnc
  2630  00AB  28B4               	goto	l1233
  2631  00AC  0359               	decf	___ftadd@exp2,w
  2632  00AD  3AFF               	xorlw	255
  2633  00AE  075A               	addwf	___ftadd@exp1,w
  2634  00AF  00D4               	movwf	??___ftadd
  2635  00B0  3019               	movlw	25
  2636  00B1  0254               	subwf	??___ftadd,w
  2637  00B2  1803               	btfsc	3,0
  2638  00B3  0008               	return
  2639  00B4                     l1233:	
  2640  00B4  3006               	movlw	6
  2641  00B5  00D4               	movwf	??___ftadd
  2642  00B6  0854               	movf	??___ftadd,w
  2643  00B7  00D8               	movwf	___ftadd@sign
  2644  00B8  1BD0               	btfsc	___ftadd@f1+2,7
  2645  00B9  17D8               	bsf	___ftadd@sign,7
  2646  00BA  1BD3               	btfsc	___ftadd@f2+2,7
  2647  00BB  1758               	bsf	___ftadd@sign,6
  2648  00BC  17CF               	bsf	___ftadd@f1+1,7
  2649  00BD  30FF               	movlw	255
  2650  00BE  05CE               	andwf	___ftadd@f1,f
  2651  00BF  30FF               	movlw	255
  2652  00C0  05CF               	andwf	___ftadd@f1+1,f
  2653  00C1  3000               	movlw	0
  2654  00C2  05D0               	andwf	___ftadd@f1+2,f
  2655  00C3  17D2               	bsf	___ftadd@f2+1,7
  2656  00C4  30FF               	movlw	255
  2657  00C5  05D1               	andwf	___ftadd@f2,f
  2658  00C6  30FF               	movlw	255
  2659  00C7  05D2               	andwf	___ftadd@f2+1,f
  2660  00C8  3000               	movlw	0
  2661  00C9  05D3               	andwf	___ftadd@f2+2,f
  2662  00CA  0859               	movf	___ftadd@exp2,w
  2663  00CB  025A               	subwf	___ftadd@exp1,w
  2664  00CC  1803               	skipnc
  2665  00CD  28F0               	goto	l1255
  2666  00CE                     l1245:	
  2667  00CE  3001               	movlw	1
  2668  00CF                     u1235:	
  2669  00CF  35D1               	lslf	___ftadd@f2,f
  2670  00D0  0DD2               	rlf	___ftadd@f2+1,f
  2671  00D1  0DD3               	rlf	___ftadd@f2+2,f
  2672  00D2  0B89               	decfsz	9,f
  2673  00D3  28CF               	goto	u1235
  2674  00D4  3001               	movlw	1
  2675  00D5  02D9               	subwf	___ftadd@exp2,f
  2676  00D6  0859               	movf	___ftadd@exp2,w
  2677  00D7  065A               	xorwf	___ftadd@exp1,w
  2678  00D8  1903               	skipnz
  2679  00D9  28EB               	goto	l1253
  2680  00DA  3001               	movlw	1
  2681  00DB  02D8               	subwf	___ftadd@sign,f
  2682  00DC  0858               	movf	___ftadd@sign,w
  2683  00DD  3907               	andlw	7
  2684  00DE  1903               	btfsc	3,2
  2685  00DF  28EB               	goto	l1253
  2686  00E0  28CE               	goto	l1245
  2687  00E1                     l1251:	
  2688  00E1  3001               	movlw	1
  2689  00E2                     u1265:	
  2690  00E2  36D0               	lsrf	___ftadd@f1+2,f
  2691  00E3  0CCF               	rrf	___ftadd@f1+1,f
  2692  00E4  0CCE               	rrf	___ftadd@f1,f
  2693  00E5  0B89               	decfsz	9,f
  2694  00E6  28E2               	goto	u1265
  2695  00E7  3001               	movlw	1
  2696  00E8  00D4               	movwf	??___ftadd
  2697  00E9  0854               	movf	??___ftadd,w
  2698  00EA  07DA               	addwf	___ftadd@exp1,f
  2699  00EB                     l1253:	
  2700  00EB  085A               	movf	___ftadd@exp1,w
  2701  00EC  0659               	xorwf	___ftadd@exp2,w
  2702  00ED  1903               	btfsc	3,2
  2703  00EE  2915               	goto	l497
  2704  00EF  28E1               	goto	l1251
  2705  00F0                     l1255:	
  2706  00F0  085A               	movf	___ftadd@exp1,w
  2707  00F1  0259               	subwf	___ftadd@exp2,w
  2708  00F2  1803               	skipnc
  2709  00F3  2915               	goto	l497
  2710  00F4                     l1257:	
  2711  00F4  3001               	movlw	1
  2712  00F5                     u1295:	
  2713  00F5  35CE               	lslf	___ftadd@f1,f
  2714  00F6  0DCF               	rlf	___ftadd@f1+1,f
  2715  00F7  0DD0               	rlf	___ftadd@f1+2,f
  2716  00F8  0B89               	decfsz	9,f
  2717  00F9  28F5               	goto	u1295
  2718  00FA  3001               	movlw	1
  2719  00FB  02DA               	subwf	___ftadd@exp1,f
  2720  00FC  0859               	movf	___ftadd@exp2,w
  2721  00FD  065A               	xorwf	___ftadd@exp1,w
  2722  00FE  1903               	skipnz
  2723  00FF  2911               	goto	l1265
  2724  0100  3001               	movlw	1
  2725  0101  02D8               	subwf	___ftadd@sign,f
  2726  0102  0858               	movf	___ftadd@sign,w
  2727  0103  3907               	andlw	7
  2728  0104  1903               	btfsc	3,2
  2729  0105  2911               	goto	l1265
  2730  0106  28F4               	goto	l1257
  2731  0107                     l1263:	
  2732  0107  3001               	movlw	1
  2733  0108                     u1325:	
  2734  0108  36D3               	lsrf	___ftadd@f2+2,f
  2735  0109  0CD2               	rrf	___ftadd@f2+1,f
  2736  010A  0CD1               	rrf	___ftadd@f2,f
  2737  010B  0B89               	decfsz	9,f
  2738  010C  2908               	goto	u1325
  2739  010D  3001               	movlw	1
  2740  010E  00D4               	movwf	??___ftadd
  2741  010F  0854               	movf	??___ftadd,w
  2742  0110  07D9               	addwf	___ftadd@exp2,f
  2743  0111                     l1265:	
  2744  0111  085A               	movf	___ftadd@exp1,w
  2745  0112  0659               	xorwf	___ftadd@exp2,w
  2746  0113  1D03               	skipz
  2747  0114  2907               	goto	l1263
  2748  0115                     l497:	
  2749  0115  1FD8               	btfss	___ftadd@sign,7
  2750  0116  2927               	goto	l1269
  2751  0117  30FF               	movlw	255
  2752  0118  06CE               	xorwf	___ftadd@f1,f
  2753  0119  30FF               	movlw	255
  2754  011A  06CF               	xorwf	___ftadd@f1+1,f
  2755  011B  30FF               	movlw	255
  2756  011C  06D0               	xorwf	___ftadd@f1+2,f
  2757  011D  3001               	movlw	1
  2758  011E  07CE               	addwf	___ftadd@f1,f
  2759  011F  3000               	movlw	0
  2760  0120  1803               	skipnc
  2761  0121  3001               	movlw	1
  2762  0122  07CF               	addwf	___ftadd@f1+1,f
  2763  0123  3000               	movlw	0
  2764  0124  1803               	skipnc
  2765  0125  3001               	movlw	1
  2766  0126  07D0               	addwf	___ftadd@f1+2,f
  2767  0127                     l1269:	
  2768  0127  1F58               	btfss	___ftadd@sign,6
  2769  0128  2939               	goto	l1273
  2770  0129  30FF               	movlw	255
  2771  012A  06D1               	xorwf	___ftadd@f2,f
  2772  012B  30FF               	movlw	255
  2773  012C  06D2               	xorwf	___ftadd@f2+1,f
  2774  012D  30FF               	movlw	255
  2775  012E  06D3               	xorwf	___ftadd@f2+2,f
  2776  012F  3001               	movlw	1
  2777  0130  07D1               	addwf	___ftadd@f2,f
  2778  0131  3000               	movlw	0
  2779  0132  1803               	skipnc
  2780  0133  3001               	movlw	1
  2781  0134  07D2               	addwf	___ftadd@f2+1,f
  2782  0135  3000               	movlw	0
  2783  0136  1803               	skipnc
  2784  0137  3001               	movlw	1
  2785  0138  07D3               	addwf	___ftadd@f2+2,f
  2786  0139                     l1273:	
  2787  0139  01D8               	clrf	___ftadd@sign
  2788  013A  084E               	movf	___ftadd@f1,w
  2789  013B  07D1               	addwf	___ftadd@f2,f
  2790  013C  084F               	movf	___ftadd@f1+1,w
  2791  013D  3DD2               	addwfc	___ftadd@f2+1,f
  2792  013E  0850               	movf	___ftadd@f1+2,w
  2793  013F  3DD3               	addwfc	___ftadd@f2+2,f
  2794  0140  1FD3               	btfss	___ftadd@f2+2,7
  2795  0141  2954               	goto	l1283
  2796  0142  30FF               	movlw	255
  2797  0143  06D1               	xorwf	___ftadd@f2,f
  2798  0144  30FF               	movlw	255
  2799  0145  06D2               	xorwf	___ftadd@f2+1,f
  2800  0146  30FF               	movlw	255
  2801  0147  06D3               	xorwf	___ftadd@f2+2,f
  2802  0148  3001               	movlw	1
  2803  0149  07D1               	addwf	___ftadd@f2,f
  2804  014A  3000               	movlw	0
  2805  014B  1803               	skipnc
  2806  014C  3001               	movlw	1
  2807  014D  07D2               	addwf	___ftadd@f2+1,f
  2808  014E  3000               	movlw	0
  2809  014F  1803               	skipnc
  2810  0150  3001               	movlw	1
  2811  0151  07D3               	addwf	___ftadd@f2+2,f
  2812  0152  01D8               	clrf	___ftadd@sign
  2813  0153  0AD8               	incf	___ftadd@sign,f
  2814  0154                     l1283:	
  2815  0154  0851               	movf	___ftadd@f2,w
  2816  0155  00A0               	movwf	___ftpack@arg
  2817  0156  0852               	movf	___ftadd@f2+1,w
  2818  0157  00A1               	movwf	___ftpack@arg+1
  2819  0158  0853               	movf	___ftadd@f2+2,w
  2820  0159  00A2               	movwf	___ftpack@arg+2
  2821  015A  085A               	movf	___ftadd@exp1,w
  2822  015B  00D4               	movwf	??___ftadd
  2823  015C  0854               	movf	??___ftadd,w
  2824  015D  00A3               	movwf	___ftpack@exp
  2825  015E  0858               	movf	___ftadd@sign,w
  2826  015F  00D5               	movwf	??___ftadd+1
  2827  0160  0855               	movf	??___ftadd+1,w
  2828  0161  00A4               	movwf	___ftpack@sign
  2829  0162  3185  2563         	fcall	___ftpack
  2830  0164  0020               	movlb	0	; select bank0
  2831  0165  0820               	movf	?___ftpack,w
  2832  0166  00CE               	movwf	?___ftadd
  2833  0167  0821               	movf	?___ftpack+1,w
  2834  0168  00CF               	movwf	?___ftadd+1
  2835  0169  0822               	movf	?___ftpack+2,w
  2836  016A  00D0               	movwf	?___ftadd+2
  2837  016B  0008               	return
  2838  016C                     __end_of___ftadd:	
  2839                           
  2840                           	psect	text8
  2841  06E8                     __ptext8:	
  2842 ;; *************** function ___awtoft *****************
  2843 ;; Defined at:
  2844 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  c               2    8[BANK0 ] int 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  sign            1   13[BANK0 ] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  3    8[BANK0 ] float 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, pclath, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2858 ;;      Params:         0       3       0       0
  2859 ;;      Locals:         0       1       0       0
  2860 ;;      Temps:          0       2       0       0
  2861 ;;      Totals:         0       6       0       0
  2862 ;;Total ram usage:        6 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:    4
  2865 ;; This function calls:
  2866 ;;		___ftpack
  2867 ;; This function is called by:
  2868 ;;		_CalcWidth
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function ___awtoft
  2874  06E8                     ___awtoft:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  2878  06E8  0020               	movlb	0	; select bank0
  2879  06E9  01AD               	clrf	___awtoft@sign
  2880  06EA  1FA9               	btfss	___awtoft@c+1,7
  2881  06EB  2EF3               	goto	l1213
  2882  06EC  09A8               	comf	___awtoft@c,f
  2883  06ED  09A9               	comf	___awtoft@c+1,f
  2884  06EE  0AA8               	incf	___awtoft@c,f
  2885  06EF  1903               	skipnz
  2886  06F0  0AA9               	incf	___awtoft@c+1,f
  2887  06F1  01AD               	clrf	___awtoft@sign
  2888  06F2  0AAD               	incf	___awtoft@sign,f
  2889  06F3                     l1213:	
  2890  06F3  0828               	movf	___awtoft@c,w
  2891  06F4  00A0               	movwf	___ftpack@arg
  2892  06F5  0829               	movf	___awtoft@c+1,w
  2893  06F6  00A1               	movwf	___ftpack@arg+1
  2894  06F7  01A2               	clrf	___ftpack@arg+2
  2895  06F8  308E               	movlw	142
  2896  06F9  00AB               	movwf	??___awtoft
  2897  06FA  082B               	movf	??___awtoft,w
  2898  06FB  00A3               	movwf	___ftpack@exp
  2899  06FC  082D               	movf	___awtoft@sign,w
  2900  06FD  00AC               	movwf	??___awtoft+1
  2901  06FE  082C               	movf	??___awtoft+1,w
  2902  06FF  00A4               	movwf	___ftpack@sign
  2903  0700  3185  2563         	fcall	___ftpack
  2904  0702  0020               	movlb	0	; select bank0
  2905  0703  0820               	movf	?___ftpack,w
  2906  0704  00A8               	movwf	?___awtoft
  2907  0705  0821               	movf	?___ftpack+1,w
  2908  0706  00A9               	movwf	?___awtoft+1
  2909  0707  0822               	movf	?___ftpack+2,w
  2910  0708  00AA               	movwf	?___awtoft+2
  2911  0709  0008               	return
  2912  070A                     __end_of___awtoft:	
  2913                           
  2914                           	psect	text9
  2915  0563                     __ptext9:	
  2916 ;; *************** function ___ftpack *****************
  2917 ;; Defined at:
  2918 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  arg             3    0[BANK0 ] unsigned um
  2921 ;;  exp             1    3[BANK0 ] unsigned char 
  2922 ;;  sign            1    4[BANK0 ] unsigned char 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  3    0[BANK0 ] float 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2, status,0
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2934 ;;      Params:         0       5       0       0
  2935 ;;      Locals:         0       0       0       0
  2936 ;;      Temps:          0       3       0       0
  2937 ;;      Totals:         0       8       0       0
  2938 ;;Total ram usage:        8 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    3
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		___awtoft
  2945 ;;		___ftadd
  2946 ;;		___ftdiv
  2947 ;;		___ftmul
  2948 ;;		___lbtoft
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952                           
  2953                           ;psect for function ___ftpack
  2954  0563                     ___ftpack:	
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2958  0563  0020               	movlb	0	; select bank0
  2959  0564  0823               	movf	___ftpack@exp,w
  2960  0565  1903               	btfsc	3,2
  2961  0566  2D6C               	goto	l1177
  2962  0567  0822               	movf	___ftpack@arg+2,w
  2963  0568  0421               	iorwf	___ftpack@arg+1,w
  2964  0569  0420               	iorwf	___ftpack@arg,w
  2965  056A  1D03               	skipz
  2966  056B  2D7D               	goto	l1183
  2967  056C                     l1177:	
  2968  056C  3000               	movlw	0
  2969  056D  00A0               	movwf	?___ftpack
  2970  056E  3000               	movlw	0
  2971  056F  00A1               	movwf	?___ftpack+1
  2972  0570  3000               	movlw	0
  2973  0571  00A2               	movwf	?___ftpack+2
  2974  0572  0008               	return
  2975  0573                     l1181:	
  2976  0573  3001               	movlw	1
  2977  0574  00A5               	movwf	??___ftpack
  2978  0575  0825               	movf	??___ftpack,w
  2979  0576  07A3               	addwf	___ftpack@exp,f
  2980  0577  3001               	movlw	1
  2981  0578                     u1035:	
  2982  0578  36A2               	lsrf	___ftpack@arg+2,f
  2983  0579  0CA1               	rrf	___ftpack@arg+1,f
  2984  057A  0CA0               	rrf	___ftpack@arg,f
  2985  057B  0B89               	decfsz	9,f
  2986  057C  2D78               	goto	u1035
  2987  057D                     l1183:	
  2988  057D  30FE               	movlw	254
  2989  057E  0522               	andwf	___ftpack@arg+2,w
  2990  057F  1903               	btfsc	3,2
  2991  0580  2D96               	goto	l466
  2992  0581  2D73               	goto	l1181
  2993  0582                     l1185:	
  2994  0582  3001               	movlw	1
  2995  0583  00A5               	movwf	??___ftpack
  2996  0584  0825               	movf	??___ftpack,w
  2997  0585  07A3               	addwf	___ftpack@exp,f
  2998  0586  3001               	movlw	1
  2999  0587  07A0               	addwf	___ftpack@arg,f
  3000  0588  3000               	movlw	0
  3001  0589  1803               	skipnc
  3002  058A  3001               	movlw	1
  3003  058B  07A1               	addwf	___ftpack@arg+1,f
  3004  058C  3000               	movlw	0
  3005  058D  1803               	skipnc
  3006  058E  3001               	movlw	1
  3007  058F  07A2               	addwf	___ftpack@arg+2,f
  3008  0590  3001               	movlw	1
  3009  0591                     u1055:	
  3010  0591  36A2               	lsrf	___ftpack@arg+2,f
  3011  0592  0CA1               	rrf	___ftpack@arg+1,f
  3012  0593  0CA0               	rrf	___ftpack@arg,f
  3013  0594  0B89               	decfsz	9,f
  3014  0595  2D91               	goto	u1055
  3015  0596                     l466:	
  3016  0596  30FF               	movlw	255
  3017  0597  0522               	andwf	___ftpack@arg+2,w
  3018  0598  1903               	btfsc	3,2
  3019  0599  2DA3               	goto	l1193
  3020  059A  2D82               	goto	l1185
  3021  059B                     l1191:	
  3022  059B  3001               	movlw	1
  3023  059C  02A3               	subwf	___ftpack@exp,f
  3024  059D  3001               	movlw	1
  3025  059E                     u1075:	
  3026  059E  35A0               	lslf	___ftpack@arg,f
  3027  059F  0DA1               	rlf	___ftpack@arg+1,f
  3028  05A0  0DA2               	rlf	___ftpack@arg+2,f
  3029  05A1  0B89               	decfsz	9,f
  3030  05A2  2D9E               	goto	u1075
  3031  05A3                     l1193:	
  3032  05A3  1BA1               	btfsc	___ftpack@arg+1,7
  3033  05A4  2DA9               	goto	l473
  3034  05A5  3002               	movlw	2
  3035  05A6  0223               	subwf	___ftpack@exp,w
  3036  05A7  1803               	skipnc
  3037  05A8  2D9B               	goto	l1191
  3038  05A9                     l473:	
  3039  05A9  1823               	btfsc	___ftpack@exp,0
  3040  05AA  2DB1               	goto	l474
  3041  05AB  30FF               	movlw	255
  3042  05AC  05A0               	andwf	___ftpack@arg,f
  3043  05AD  307F               	movlw	127
  3044  05AE  05A1               	andwf	___ftpack@arg+1,f
  3045  05AF  30FF               	movlw	255
  3046  05B0  05A2               	andwf	___ftpack@arg+2,f
  3047  05B1                     l474:	
  3048  05B1  1003               	clrc
  3049  05B2  0CA3               	rrf	___ftpack@exp,f
  3050  05B3  0823               	movf	___ftpack@exp,w
  3051  05B4  00A5               	movwf	??___ftpack
  3052  05B5  01A6               	clrf	??___ftpack+1
  3053  05B6  01A7               	clrf	??___ftpack+2
  3054  05B7  3010               	movlw	16
  3055  05B8                     u1115:	
  3056  05B8  35A5               	lslf	??___ftpack,f
  3057  05B9  0DA6               	rlf	??___ftpack+1,f
  3058  05BA  0DA7               	rlf	??___ftpack+2,f
  3059  05BB  0B89               	decfsz	9,f
  3060  05BC  2DB8               	goto	u1115
  3061  05BD  0825               	movf	??___ftpack,w
  3062  05BE  04A0               	iorwf	___ftpack@arg,f
  3063  05BF  0826               	movf	??___ftpack+1,w
  3064  05C0  04A1               	iorwf	___ftpack@arg+1,f
  3065  05C1  0827               	movf	??___ftpack+2,w
  3066  05C2  04A2               	iorwf	___ftpack@arg+2,f
  3067  05C3  0824               	movf	___ftpack@sign,w
  3068  05C4  1903               	btfsc	3,2
  3069  05C5  0008               	return
  3070  05C6  17A2               	bsf	___ftpack@arg+2,7
  3071  05C7  0008               	return
  3072  05C8                     __end_of___ftpack:	
  3073                           
  3074                           	psect	text10
  3075  0241                     __ptext10:	
  3076 ;; *************** function _ReceiveTargetAngle *****************
  3077 ;; Defined at:
  3078 ;;		line 45 in file "main.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  Servo           1    wreg     PTR struct .
  3081 ;;		 -> main@Servo(20), 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  Servo           1   27[BANK0 ] PTR struct .
  3084 ;;		 -> main@Servo(20), 
  3085 ;;  angle_buf       8   15[BANK0 ] unsigned int [4]
  3086 ;;  rx              4   23[BANK0 ] unsigned char [4]
  3087 ;;  i               2   28[BANK0 ] int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3097 ;;      Params:         0       0       0       0
  3098 ;;      Locals:         0      15       0       0
  3099 ;;      Temps:          0      11       0       0
  3100 ;;      Totals:         0      26       0       0
  3101 ;;Total ram usage:       26 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    4
  3104 ;; This function calls:
  3105 ;;		___bmul
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _ReceiveTargetAngle
  3113  0241                     _ReceiveTargetAngle:	
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _ReceiveTargetAngle: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3117                           ;ReceiveTargetAngle@Servo stored from wreg
  3118  0241  0020               	movlb	0	; select bank0
  3119  0242  00BB               	movwf	ReceiveTargetAngle@Servo
  3120                           
  3121                           ;main.c: 47: static uint16_t pre_angle[4];
  3122                           ;main.c: 48: bool rx[4] = {0, 0, 0, 0};
  3123  0243  0021               	movlb	1	; select bank1
  3124  0244  0863               	movf	(ReceiveTargetAngle@F3434+3)^(0+128),w
  3125  0245  0020               	movlb	0	; select bank0
  3126  0246  00BA               	movwf	ReceiveTargetAngle@rx+3
  3127  0247  0021               	movlb	1	; select bank1
  3128  0248  0862               	movf	(ReceiveTargetAngle@F3434+2)^(0+128),w
  3129  0249  0020               	movlb	0	; select bank0
  3130  024A  00B9               	movwf	ReceiveTargetAngle@rx+2
  3131  024B  0021               	movlb	1	; select bank1
  3132  024C  0861               	movf	(ReceiveTargetAngle@F3434+1)^(0+128),w
  3133  024D  0020               	movlb	0	; select bank0
  3134  024E  00B8               	movwf	ReceiveTargetAngle@rx+1
  3135  024F  0021               	movlb	1	; select bank1
  3136  0250  0860               	movf	ReceiveTargetAngle@F3434^(0+128),w
  3137  0251  0020               	movlb	0	; select bank0
  3138  0252  00B7               	movwf	ReceiveTargetAngle@rx
  3139  0253                     l1535:	
  3140                           ;main.c: 49: uint16_t angle_buf[4];
  3141                           ;main.c: 51: while (!(rx[0] & rx[1] & rx[2] & rx[3]))
  3142                           
  3143  0253  0020               	movlb	0	; select bank0
  3144  0254  0838               	movf	ReceiveTargetAngle@rx+1,w
  3145  0255  0539               	andwf	ReceiveTargetAngle@rx+2,w
  3146  0256  053A               	andwf	ReceiveTargetAngle@rx+3,w
  3147  0257  0537               	andwf	ReceiveTargetAngle@rx,w
  3148  0258  1D03               	btfss	3,2
  3149  0259  2AC4               	goto	l1537
  3150                           
  3151                           ;main.c: 52: {
  3152                           ;main.c: 53: if (((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits.RC0)) > 0)
  3153  025A  080E               	movf	14,w	;volatile
  3154  025B  3901               	andlw	1
  3155  025C  00A4               	movwf	??_ReceiveTargetAngle
  3156  025D  01A5               	clrf	??_ReceiveTargetAngle+1
  3157  025E  0C0E               	rrf	14,w	;volatile
  3158  025F  3901               	andlw	1
  3159  0260  00A6               	movwf	??_ReceiveTargetAngle+2
  3160  0261  01A7               	clrf	??_ReceiveTargetAngle+3
  3161  0262  35A6               	lslf	??_ReceiveTargetAngle+2,f
  3162  0263  0DA7               	rlf	??_ReceiveTargetAngle+3,f
  3163  0264  0C0E               	rrf	14,w	;volatile
  3164  0265  0C89               	rrf	9,f
  3165  0266  3901               	andlw	1
  3166  0267  00A8               	movwf	??_ReceiveTargetAngle+4
  3167  0268  01A9               	clrf	??_ReceiveTargetAngle+5
  3168  0269  35A8               	lslf	??_ReceiveTargetAngle+4,f
  3169  026A  0DA9               	rlf	??_ReceiveTargetAngle+5,f
  3170  026B  35A8               	lslf	??_ReceiveTargetAngle+4,f
  3171  026C  0DA9               	rlf	??_ReceiveTargetAngle+5,f
  3172  026D  0826               	movf	??_ReceiveTargetAngle+2,w
  3173  026E  0428               	iorwf	??_ReceiveTargetAngle+4,w
  3174  026F  00AA               	movwf	??_ReceiveTargetAngle+6
  3175  0270  0827               	movf	??_ReceiveTargetAngle+3,w
  3176  0271  0429               	iorwf	??_ReceiveTargetAngle+5,w
  3177  0272  00AB               	movwf	??_ReceiveTargetAngle+7
  3178  0273  0824               	movf	??_ReceiveTargetAngle,w
  3179  0274  042A               	iorwf	??_ReceiveTargetAngle+6,w
  3180  0275  00AC               	movwf	??_ReceiveTargetAngle+8
  3181  0276  0825               	movf	??_ReceiveTargetAngle+1,w
  3182  0277  042B               	iorwf	??_ReceiveTargetAngle+7,w
  3183  0278  00AD               	movwf	??_ReceiveTargetAngle+9
  3184  0279  082D               	movf	??_ReceiveTargetAngle+9,w
  3185  027A  3A80               	xorlw	128
  3186  027B  00AE               	movwf	??_ReceiveTargetAngle+10
  3187  027C  3080               	movlw	128
  3188  027D  022E               	subwf	??_ReceiveTargetAngle+10,w
  3189  027E  1D03               	skipz
  3190  027F  2A82               	goto	u1775
  3191  0280  3001               	movlw	1
  3192  0281  022C               	subwf	??_ReceiveTargetAngle+8,w
  3193  0282                     u1775:	
  3194  0282  1C03               	skipc
  3195  0283  2A53               	goto	l1535
  3196                           
  3197                           ;main.c: 54: {
  3198                           ;main.c: 55: angle_buf[((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits.RC0)) -
      +                           1] = PORTA;
  3199  0284  0020               	movlb	0	; select bank0
  3200  0285  080C               	movf	12,w	;volatile
  3201  0286  00A4               	movwf	??_ReceiveTargetAngle
  3202  0287  01A5               	clrf	??_ReceiveTargetAngle+1
  3203  0288  080E               	movf	14,w	;volatile
  3204  0289  3901               	andlw	1
  3205  028A  00A6               	movwf	??_ReceiveTargetAngle+2
  3206  028B  0C0E               	rrf	14,w	;volatile
  3207  028C  3901               	andlw	1
  3208  028D  00A7               	movwf	??_ReceiveTargetAngle+3
  3209  028E  3001               	movlw	1
  3210  028F                     u1785:	
  3211  028F  35A7               	lslf	??_ReceiveTargetAngle+3,f
  3212  0290  0B89               	decfsz	9,f
  3213  0291  2A8F               	goto	u1785
  3214  0292  0C0E               	rrf	14,w	;volatile
  3215  0293  0C89               	rrf	9,f
  3216  0294  3901               	andlw	1
  3217  0295  00A8               	movwf	??_ReceiveTargetAngle+4
  3218  0296  3001               	movlw	1
  3219  0297                     u1795:	
  3220  0297  35A8               	lslf	??_ReceiveTargetAngle+4,f
  3221  0298  3EFF               	addlw	-1
  3222  0299  1D03               	skipz
  3223  029A  2A97               	goto	u1795
  3224  029B  3528               	lslf	??_ReceiveTargetAngle+4,w
  3225  029C  0427               	iorwf	??_ReceiveTargetAngle+3,w
  3226  029D  0426               	iorwf	??_ReceiveTargetAngle+2,w
  3227  029E  0709               	addwf	9,w
  3228  029F  3EFE               	addlw	254
  3229  02A0  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3230  02A1  0086               	movwf	6
  3231  02A2  0187               	clrf	7
  3232  02A3  0824               	movf	??_ReceiveTargetAngle,w
  3233  02A4  3FC0               	movwi [0]fsr1
  3234  02A5  0825               	movf	??_ReceiveTargetAngle+1,w
  3235  02A6  3FC1               	movwi [1]fsr1
  3236                           
  3237                           ;main.c: 56: rx[((PORTCbits.RC2 << 2) | (PORTCbits.RC1 << 1) | (PORTCbits.RC0)) - 1] = 1
      +                          ;
  3238  02A7  080E               	movf	14,w	;volatile
  3239  02A8  3901               	andlw	1
  3240  02A9  00A4               	movwf	??_ReceiveTargetAngle
  3241  02AA  0C0E               	rrf	14,w	;volatile
  3242  02AB  3901               	andlw	1
  3243  02AC  00A5               	movwf	??_ReceiveTargetAngle+1
  3244  02AD  3001               	movlw	1
  3245  02AE                     u1805:	
  3246  02AE  35A5               	lslf	??_ReceiveTargetAngle+1,f
  3247  02AF  0B89               	decfsz	9,f
  3248  02B0  2AAE               	goto	u1805
  3249  02B1  0C0E               	rrf	14,w	;volatile
  3250  02B2  0C89               	rrf	9,f
  3251  02B3  3901               	andlw	1
  3252  02B4  00A6               	movwf	??_ReceiveTargetAngle+2
  3253  02B5  3001               	movlw	1
  3254  02B6                     u1815:	
  3255  02B6  35A6               	lslf	??_ReceiveTargetAngle+2,f
  3256  02B7  3EFF               	addlw	-1
  3257  02B8  1D03               	skipz
  3258  02B9  2AB6               	goto	u1815
  3259  02BA  3526               	lslf	??_ReceiveTargetAngle+2,w
  3260  02BB  0425               	iorwf	??_ReceiveTargetAngle+1,w
  3261  02BC  0424               	iorwf	??_ReceiveTargetAngle,w
  3262  02BD  3EFF               	addlw	255
  3263  02BE  3E37               	addlw	(low (ReceiveTargetAngle@rx| 0))& (0+255)
  3264  02BF  0086               	movwf	6
  3265  02C0  0187               	clrf	7
  3266  02C1  0181               	clrf	1
  3267  02C2  0A81               	incf	1,f
  3268  02C3  2A53               	goto	l1535
  3269  02C4                     l1537:	
  3270                           
  3271                           ;main.c: 57: }
  3272                           ;main.c: 58: }
  3273                           ;main.c: 60: int i;
  3274                           ;main.c: 61: for (i = 0; i < 4; i++)
  3275  02C4  01BC               	clrf	ReceiveTargetAngle@i
  3276  02C5  01BD               	clrf	ReceiveTargetAngle@i+1
  3277  02C6                     L2:	
  3278  02C6  083D               	movf	ReceiveTargetAngle@i+1,w
  3279  02C7  3A80               	xorlw	128
  3280  02C8  00A4               	movwf	??_ReceiveTargetAngle
  3281  02C9  3080               	movlw	128
  3282  02CA  0224               	subwf	??_ReceiveTargetAngle,w
  3283  02CB  1D03               	skipz
  3284  02CC  2ACF               	goto	u1835
  3285  02CD  3004               	movlw	4
  3286  02CE  023C               	subwf	ReceiveTargetAngle@i,w
  3287  02CF                     u1835:	
  3288  02CF  1803               	btfsc	3,0
  3289  02D0  0008               	return
  3290                           
  3291                           ;main.c: 62: {
  3292                           ;main.c: 63: if (angle_buf[i] == pre_angle[i])
  3293  02D1  0020               	movlb	0	; select bank0
  3294  02D2  353C               	lslf	ReceiveTargetAngle@i,w
  3295  02D3  3ECF               	addlw	(low (ReceiveTargetAngle@pre_angle| 0))& (0+255)
  3296  02D4  0086               	movwf	6
  3297  02D5  0187               	clrf	7
  3298  02D6  3F40               	moviw [0]fsr1
  3299  02D7  00A4               	movwf	??_ReceiveTargetAngle
  3300  02D8  3F41               	moviw [1]fsr1
  3301  02D9  00A5               	movwf	??_ReceiveTargetAngle+1
  3302  02DA  353C               	lslf	ReceiveTargetAngle@i,w
  3303  02DB  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3304  02DC  0086               	movwf	6
  3305  02DD  0187               	clrf	7
  3306  02DE  3F40               	moviw [0]fsr1
  3307  02DF  00A6               	movwf	??_ReceiveTargetAngle+2
  3308  02E0  3F41               	moviw [1]fsr1
  3309  02E1  00A7               	movwf	??_ReceiveTargetAngle+3
  3310  02E2  0825               	movf	??_ReceiveTargetAngle+1,w
  3311  02E3  0627               	xorwf	??_ReceiveTargetAngle+3,w
  3312  02E4  1D03               	skipz
  3313  02E5  2AE8               	goto	u1845
  3314  02E6  0824               	movf	??_ReceiveTargetAngle,w
  3315  02E7  0626               	xorwf	??_ReceiveTargetAngle+2,w
  3316  02E8                     u1845:	
  3317  02E8  1D03               	skipz
  3318  02E9  2B00               	goto	l1547
  3319                           
  3320                           ;main.c: 64: {
  3321                           ;main.c: 65: Servo[i].angle = angle_buf[i];
  3322  02EA  353C               	lslf	ReceiveTargetAngle@i,w
  3323  02EB  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3324  02EC  0086               	movwf	6
  3325  02ED  0187               	clrf	7
  3326  02EE  3005               	movlw	5
  3327  02EF  00A4               	movwf	??_ReceiveTargetAngle
  3328  02F0  0824               	movf	??_ReceiveTargetAngle,w
  3329  02F1  00A0               	movwf	___bmul@multiplicand
  3330  02F2  083C               	movf	ReceiveTargetAngle@i,w
  3331  02F3  3187  2784  3182   	fcall	___bmul
  3332  02F6  0020               	movlb	0	; select bank0
  3333  02F7  073B               	addwf	ReceiveTargetAngle@Servo,w
  3334  02F8  00A5               	movwf	??_ReceiveTargetAngle+1
  3335  02F9  0825               	movf	??_ReceiveTargetAngle+1,w
  3336  02FA  0084               	movwf	4
  3337  02FB  0185               	clrf	5
  3338  02FC  3F40               	moviw [0]fsr1
  3339  02FD  3F80               	movwi [0]fsr0
  3340  02FE  3F41               	moviw [1]fsr1
  3341  02FF  3F81               	movwi [1]fsr0
  3342  0300                     l1547:	
  3343                           
  3344                           ;main.c: 66: }
  3345                           ;main.c: 67: pre_angle[i] = angle_buf[i];
  3346  0300  353C               	lslf	ReceiveTargetAngle@i,w
  3347  0301  3E2F               	addlw	(low (ReceiveTargetAngle@angle_buf| 0))& (0+255)
  3348  0302  0086               	movwf	6
  3349  0303  0187               	clrf	7
  3350  0304  353C               	lslf	ReceiveTargetAngle@i,w
  3351  0305  3ECF               	addlw	(low (ReceiveTargetAngle@pre_angle| 0))& (0+255)
  3352  0306  0084               	movwf	4
  3353  0307  0185               	clrf	5
  3354  0308  3F40               	moviw [0]fsr1
  3355  0309  3F80               	movwi [0]fsr0
  3356  030A  3F41               	moviw [1]fsr1
  3357  030B  3F81               	movwi [1]fsr0
  3358  030C  3001               	movlw	1
  3359  030D  07BC               	addwf	ReceiveTargetAngle@i,f
  3360  030E  3000               	movlw	0
  3361  030F  3DBD               	addwfc	ReceiveTargetAngle@i+1,f
  3362  0310  2AC6               	goto	L2
  3363  0311                     __end_of_ReceiveTargetAngle:	
  3364                           
  3365                           	psect	text11
  3366  0784                     __ptext11:	
  3367 ;; *************** function ___bmul *****************
  3368 ;; Defined at:
  3369 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul8.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  multiplier      1    wreg     unsigned char 
  3372 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3375 ;;  product         1    2[BANK0 ] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3385 ;;      Params:         0       1       0       0
  3386 ;;      Locals:         0       2       0       0
  3387 ;;      Temps:          0       1       0       0
  3388 ;;      Totals:         0       4       0       0
  3389 ;;Total ram usage:        4 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    3
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_ReceiveTargetAngle
  3396 ;;		_SetParameter
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           
  3401                           ;psect for function ___bmul
  3402  0784                     ___bmul:	
  3403                           
  3404                           ;incstack = 0
  3405                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3406                           ;___bmul@multiplier stored from wreg
  3407  0784  0020               	movlb	0	; select bank0
  3408  0785  00A3               	movwf	___bmul@multiplier
  3409  0786  01A2               	clrf	___bmul@product
  3410  0787                     l1479:	
  3411  0787  1C23               	btfss	___bmul@multiplier,0
  3412  0788  2F8D               	goto	l1483
  3413  0789  0820               	movf	___bmul@multiplicand,w
  3414  078A  00A1               	movwf	??___bmul
  3415  078B  0821               	movf	??___bmul,w
  3416  078C  07A2               	addwf	___bmul@product,f
  3417  078D                     l1483:	
  3418  078D  1003               	clrc
  3419  078E  0DA0               	rlf	___bmul@multiplicand,f
  3420  078F  1003               	clrc
  3421  0790  0CA3               	rrf	___bmul@multiplier,f
  3422  0791  0823               	movf	___bmul@multiplier,w
  3423  0792  1D03               	btfss	3,2
  3424  0793  2F87               	goto	l1479
  3425  0794  0822               	movf	___bmul@product,w
  3426  0795  0008               	return
  3427  0796                     __end_of___bmul:	
  3428                           
  3429                           	psect	text12
  3430  0619                     __ptext12:	
  3431 ;; *************** function _Output *****************
  3432 ;; Defined at:
  3433 ;;		line 13 in file "ShareFunc.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  ch              1    wreg     unsigned char 
  3436 ;;  value           1    0[BANK0 ] unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  ch              1    2[BANK0 ] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3448 ;;      Params:         0       1       0       0
  3449 ;;      Locals:         0       1       0       0
  3450 ;;      Temps:          0       1       0       0
  3451 ;;      Totals:         0       3       0       0
  3452 ;;Total ram usage:        3 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    3
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           
  3463                           ;psect for function _Output
  3464  0619                     _Output:	
  3465                           
  3466                           ;incstack = 0
  3467                           ; Regs used in _Output: [wreg-fsr0h+status,2+status,0+pclath]
  3468                           ;Output@ch stored from wreg
  3469  0619  0020               	movlb	0	; select bank0
  3470  061A  00A2               	movwf	Output@ch
  3471                           
  3472                           ;ShareFunc.c: 15: if (ch & _CHs[0]) LATCbits.LATC3 = value;
  3473  061B  30DE               	movlw	low (__CHs| (0+32768))
  3474  061C  0084               	movwf	4
  3475  061D  3087               	movlw	high (__CHs| (0+32768))
  3476  061E  0085               	movwf	5
  3477  061F  0800               	movf	0,w	;code access
  3478  0620  00A1               	movwf	??_Output
  3479  0621  0822               	movf	Output@ch,w
  3480  0622  0521               	andwf	??_Output,w
  3481  0623  1903               	btfsc	3,2
  3482  0624  2E2B               	goto	l1517
  3483  0625  0C20               	rrf	Output@value,w
  3484  0626  0022               	movlb	2	; select bank2
  3485  0627  1C03               	skipc
  3486  0628  118E               	bcf	14,3	;volatile
  3487  0629  1803               	skipnc
  3488  062A  158E               	bsf	14,3	;volatile
  3489  062B                     l1517:	
  3490                           
  3491                           ;ShareFunc.c: 16: if (ch & _CHs[1]) LATCbits.LATC6 = value;
  3492  062B  30DF               	movlw	low ((__CHs+1)| (0+32768))
  3493  062C  0084               	movwf	4
  3494  062D  3087               	movlw	high ((__CHs+1)| (0+32768))
  3495  062E  0085               	movwf	5
  3496  062F  0800               	movf	0,w	;code access
  3497  0630  0020               	movlb	0	; select bank0
  3498  0631  0522               	andwf	Output@ch,w
  3499  0632  1903               	btfsc	3,2
  3500  0633  2E3A               	goto	l1521
  3501  0634  0C20               	rrf	Output@value,w
  3502  0635  0022               	movlb	2	; select bank2
  3503  0636  1C03               	skipc
  3504  0637  130E               	bcf	14,6	;volatile
  3505  0638  1803               	skipnc
  3506  0639  170E               	bsf	14,6	;volatile
  3507  063A                     l1521:	
  3508                           
  3509                           ;ShareFunc.c: 17: if (ch & _CHs[2]) LATCbits.LATC5 = value;
  3510  063A  30E0               	movlw	low ((__CHs+2)| (0+32768))
  3511  063B  0084               	movwf	4
  3512  063C  3087               	movlw	high ((__CHs+2)| (0+32768))
  3513  063D  0085               	movwf	5
  3514  063E  0800               	movf	0,w	;code access
  3515  063F  0020               	movlb	0	; select bank0
  3516  0640  0522               	andwf	Output@ch,w
  3517  0641  1903               	btfsc	3,2
  3518  0642  2E49               	goto	l1525
  3519  0643  0C20               	rrf	Output@value,w
  3520  0644  0022               	movlb	2	; select bank2
  3521  0645  1C03               	skipc
  3522  0646  128E               	bcf	14,5	;volatile
  3523  0647  1803               	skipnc
  3524  0648  168E               	bsf	14,5	;volatile
  3525  0649                     l1525:	
  3526                           
  3527                           ;ShareFunc.c: 18: if (ch & _CHs[3]) LATCbits.LATC4 = value;
  3528  0649  30E1               	movlw	low ((__CHs+3)| (0+32768))
  3529  064A  0084               	movwf	4
  3530  064B  3087               	movlw	high ((__CHs+3)| (0+32768))
  3531  064C  0085               	movwf	5
  3532  064D  0800               	movf	0,w	;code access
  3533  064E  0020               	movlb	0	; select bank0
  3534  064F  0522               	andwf	Output@ch,w
  3535  0650  1903               	btfsc	3,2
  3536  0651  0008               	return
  3537  0652  0C20               	rrf	Output@value,w
  3538  0653  0022               	movlb	2	; select bank2
  3539  0654  1C03               	skipc
  3540  0655  120E               	bcf	14,4	;volatile
  3541  0656  1803               	skipnc
  3542  0657  160E               	bsf	14,4	;volatile
  3543  0658  0008               	return
  3544  0659                     __end_of_Output:	
  3545                           
  3546                           	psect	text13
  3547  07A7                     __ptext13:	
  3548 ;; *************** function _Init *****************
  3549 ;; Defined at:
  3550 ;;		line 4 in file "Init.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0, pclath, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3564 ;;      Params:         0       0       0       0
  3565 ;;      Locals:         0       0       0       0
  3566 ;;      Temps:          0       0       0       0
  3567 ;;      Totals:         0       0       0       0
  3568 ;;Total ram usage:        0 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    4
  3571 ;; This function calls:
  3572 ;;		_InitOsc
  3573 ;;		_InitPin
  3574 ;;		_InitTmr1
  3575 ;;		_InitTmr2
  3576 ;; This function is called by:
  3577 ;;		_main
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _Init
  3583  07A7                     _Init:	
  3584                           
  3585                           ;Init.c: 6: InitOsc();
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _Init: [wreg+status,2+status,0+pclath+cstack]
  3589  07A7  3187  27CA  3187   	fcall	_InitOsc
  3590                           
  3591                           ;Init.c: 7: InitPin();
  3592  07AA  3187  2796  3187   	fcall	_InitPin
  3593                           
  3594                           ;Init.c: 8: InitTmr1();
  3595  07AD  3187  27B5  3187   	fcall	_InitTmr1
  3596                           
  3597                           ;Init.c: 9: InitTmr2();
  3598  07B0  3187  27C1         	fcall	_InitTmr2
  3599                           
  3600                           ;Init.c: 13: INTCONbits.GIE = 1;
  3601  07B2  178B               	bsf	11,7	;volatile
  3602                           
  3603                           ;Init.c: 14: INTCONbits.PEIE = 1;
  3604  07B3  170B               	bsf	11,6	;volatile
  3605  07B4  0008               	return
  3606  07B5                     __end_of_Init:	
  3607                           
  3608                           	psect	text14
  3609  07C1                     __ptext14:	
  3610 ;; *************** function _InitTmr2 *****************
  3611 ;; Defined at:
  3612 ;;		line 56 in file "Init.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;		None
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;		None
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  1    wreg      void 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3626 ;;      Params:         0       0       0       0
  3627 ;;      Locals:         0       0       0       0
  3628 ;;      Temps:          0       0       0       0
  3629 ;;      Totals:         0       0       0       0
  3630 ;;Total ram usage:        0 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    3
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_Init
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           
  3641                           ;psect for function _InitTmr2
  3642  07C1                     _InitTmr2:	
  3643                           
  3644                           ;Init.c: 59: T2CONbits.T2CKPS = 0b11;
  3645                           
  3646                           ;incstack = 0
  3647                           ; Regs used in _InitTmr2: [wreg+status,2+status,0]
  3648  07C1  3003               	movlw	3
  3649  07C2  0020               	movlb	0	; select bank0
  3650  07C3  049C               	iorwf	28,f	;volatile
  3651                           
  3652                           ;Init.c: 60: PIE1bits.TMR2IE = 1;
  3653  07C4  0021               	movlb	1	; select bank1
  3654  07C5  1491               	bsf	17,1	;volatile
  3655                           
  3656                           ;Init.c: 61: TMR2 = 0;
  3657  07C6  0020               	movlb	0	; select bank0
  3658  07C7  019A               	clrf	26	;volatile
  3659                           
  3660                           ;Init.c: 62: TMR2ON = 1;
  3661  07C8  151C               	bsf	28,2	;volatile
  3662  07C9  0008               	return
  3663  07CA                     __end_of_InitTmr2:	
  3664                           
  3665                           	psect	text15
  3666  07B5                     __ptext15:	
  3667 ;; *************** function _InitTmr1 *****************
  3668 ;; Defined at:
  3669 ;;		line 47 in file "Init.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3683 ;;      Params:         0       0       0       0
  3684 ;;      Locals:         0       0       0       0
  3685 ;;      Temps:          0       0       0       0
  3686 ;;      Totals:         0       0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    3
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_Init
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _InitTmr1
  3699  07B5                     _InitTmr1:	
  3700                           
  3701                           ;Init.c: 49: T1CONbits.TMR1CS = 0;
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in _InitTmr1: [wreg+status,2+status,0]
  3705  07B5  303F               	movlw	-193
  3706  07B6  0020               	movlb	0	; select bank0
  3707  07B7  0598               	andwf	24,f	;volatile
  3708                           
  3709                           ;Init.c: 50: T1CONbits.T1CKPS = 0b00;
  3710  07B8  30CF               	movlw	-49
  3711  07B9  0598               	andwf	24,f	;volatile
  3712                           
  3713                           ;Init.c: 51: PIE1bits.TMR1IE = 1;
  3714  07BA  0021               	movlb	1	; select bank1
  3715  07BB  1411               	bsf	17,0	;volatile
  3716                           
  3717                           ;Init.c: 52: TMR1 = 0;
  3718  07BC  0020               	movlb	0	; select bank0
  3719  07BD  0196               	clrf	22	;volatile
  3720  07BE  0197               	clrf	23	;volatile
  3721                           
  3722                           ;Init.c: 53: TMR1ON = 1;
  3723  07BF  1418               	bsf	24,0	;volatile
  3724  07C0  0008               	return
  3725  07C1                     __end_of_InitTmr1:	
  3726                           
  3727                           	psect	text16
  3728  0796                     __ptext16:	
  3729 ;; *************** function _InitPin *****************
  3730 ;; Defined at:
  3731 ;;		line 23 in file "Init.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3745 ;;      Params:         0       0       0       0
  3746 ;;      Locals:         0       0       0       0
  3747 ;;      Temps:          0       0       0       0
  3748 ;;      Totals:         0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; Hardware stack levels required when called:    3
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_Init
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           
  3760                           ;psect for function _InitPin
  3761  0796                     _InitPin:	
  3762                           
  3763                           ;Init.c: 26: ANSELA = 0x00;
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in _InitPin: [wreg+status,2]
  3767  0796  0023               	movlb	3	; select bank3
  3768  0797  018C               	clrf	12	;volatile
  3769                           
  3770                           ;Init.c: 27: ANSELB = 0x00;
  3771  0798  018D               	clrf	13	;volatile
  3772                           
  3773                           ;Init.c: 29: TRISA = 0xFF;
  3774  0799  30FF               	movlw	255
  3775  079A  0021               	movlb	1	; select bank1
  3776  079B  008C               	movwf	12	;volatile
  3777                           
  3778                           ;Init.c: 30: TRISB = 0xFF;
  3779  079C  30FF               	movlw	255
  3780  079D  008D               	movwf	13	;volatile
  3781                           
  3782                           ;Init.c: 33: TRISCbits.TRISC0 = 1;
  3783  079E  140E               	bsf	14,0	;volatile
  3784                           
  3785                           ;Init.c: 34: TRISCbits.TRISC1 = 1;
  3786  079F  148E               	bsf	14,1	;volatile
  3787                           
  3788                           ;Init.c: 35: TRISCbits.TRISC2 = 1;
  3789  07A0  150E               	bsf	14,2	;volatile
  3790                           
  3791                           ;Init.c: 38: TRISCbits.TRISC3 = 0;
  3792  07A1  118E               	bcf	14,3	;volatile
  3793                           
  3794                           ;Init.c: 39: TRISCbits.TRISC4 = 0;
  3795  07A2  120E               	bcf	14,4	;volatile
  3796                           
  3797                           ;Init.c: 40: TRISCbits.TRISC5 = 0;
  3798  07A3  128E               	bcf	14,5	;volatile
  3799                           
  3800                           ;Init.c: 41: TRISCbits.TRISC6 = 0;
  3801  07A4  130E               	bcf	14,6	;volatile
  3802                           
  3803                           ;Init.c: 44: TRISCbits.TRISC7 = 0;
  3804  07A5  138E               	bcf	14,7	;volatile
  3805  07A6  0008               	return
  3806  07A7                     __end_of_InitPin:	
  3807                           
  3808                           	psect	text17
  3809  07CA                     __ptext17:	
  3810 ;; *************** function _InitOsc *****************
  3811 ;; Defined at:
  3812 ;;		line 17 in file "Init.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, status,0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3826 ;;      Params:         0       0       0       0
  3827 ;;      Locals:         0       0       0       0
  3828 ;;      Temps:          0       0       0       0
  3829 ;;      Totals:         0       0       0       0
  3830 ;;Total ram usage:        0 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    3
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_Init
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           
  3841                           ;psect for function _InitOsc
  3842  07CA                     _InitOsc:	
  3843                           
  3844                           ;Init.c: 19: OSCCONbits.IRCF = 0b1110;
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in _InitOsc: [wreg+status,2+status,0]
  3848  07CA  0021               	movlb	1	; select bank1
  3849  07CB  0819               	movf	25,w	;volatile
  3850  07CC  3987               	andlw	-121
  3851  07CD  3870               	iorlw	112
  3852  07CE  0099               	movwf	25	;volatile
  3853                           
  3854                           ;Init.c: 20: OSCCONbits.SCS = 0b11;
  3855  07CF  3003               	movlw	3
  3856  07D0  0499               	iorwf	25,f	;volatile
  3857  07D1  0008               	return
  3858  07D2                     __end_of_InitOsc:	
  3859                           
  3860                           	psect	text18
  3861  05C8                     __ptext18:	
  3862 ;; *************** function _CalcNextCnt *****************
  3863 ;; Defined at:
  3864 ;;		line 107 in file "main.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  Servo           1    wreg     PTR struct .
  3867 ;;		 -> main@Servo(20), 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  Servo           1    6[BANK0 ] PTR struct .
  3870 ;;		 -> main@Servo(20), 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3880 ;;      Params:         0       0       0       0
  3881 ;;      Locals:         0       1       0       0
  3882 ;;      Temps:          0       0       0       0
  3883 ;;      Totals:         0       1       0       0
  3884 ;;Total ram usage:        1 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    4
  3887 ;; This function calls:
  3888 ;;		_CalcTMRCnt
  3889 ;; This function is called by:
  3890 ;;		_main
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function _CalcNextCnt
  3896  05C8                     _CalcNextCnt:	
  3897                           
  3898                           ;incstack = 0
  3899                           ; Regs used in _CalcNextCnt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3900                           ;CalcNextCnt@Servo stored from wreg
  3901  05C8  0020               	movlb	0	; select bank0
  3902  05C9  00A6               	movwf	CalcNextCnt@Servo
  3903                           
  3904                           ;main.c: 109: _TMRCnt[0] = CalcTMRCnt(Servo[0].width);
  3905  05CA  0826               	movf	CalcNextCnt@Servo,w
  3906  05CB  3E02               	addlw	2
  3907  05CC  0086               	movwf	6
  3908  05CD  0187               	clrf	7
  3909  05CE  3F40               	moviw [0]fsr1
  3910  05CF  00A0               	movwf	CalcTMRCnt@pulse_width
  3911  05D0  3F41               	moviw [1]fsr1
  3912  05D1  00A1               	movwf	CalcTMRCnt@pulse_width+1
  3913  05D2  3187  275A  3185   	fcall	_CalcTMRCnt
  3914  05D5  0020               	movlb	0	; select bank0
  3915  05D6  0821               	movf	?_CalcTMRCnt+1,w
  3916  05D7  0021               	movlb	1	; select bank1
  3917  05D8  00C6               	movwf	(__TMRCnt+1)^(0+128)
  3918  05D9  0020               	movlb	0	; select bank0
  3919  05DA  0820               	movf	?_CalcTMRCnt,w
  3920  05DB  0021               	movlb	1	; select bank1
  3921  05DC  00C5               	movwf	__TMRCnt^(0+128)
  3922                           
  3923                           ;main.c: 110: _TMRCnt[1] = CalcTMRCnt(Servo[1].width);
  3924  05DD  0020               	movlb	0	; select bank0
  3925  05DE  0826               	movf	CalcNextCnt@Servo,w
  3926  05DF  3E07               	addlw	7
  3927  05E0  0086               	movwf	6
  3928  05E1  0187               	clrf	7
  3929  05E2  3F40               	moviw [0]fsr1
  3930  05E3  00A0               	movwf	CalcTMRCnt@pulse_width
  3931  05E4  3F41               	moviw [1]fsr1
  3932  05E5  00A1               	movwf	CalcTMRCnt@pulse_width+1
  3933  05E6  3187  275A  3185   	fcall	_CalcTMRCnt
  3934  05E9  0020               	movlb	0	; select bank0
  3935  05EA  0821               	movf	?_CalcTMRCnt+1,w
  3936  05EB  0021               	movlb	1	; select bank1
  3937  05EC  00C8               	movwf	((__TMRCnt+1)^(0+128)+2)
  3938  05ED  0020               	movlb	0	; select bank0
  3939  05EE  0820               	movf	?_CalcTMRCnt,w
  3940  05EF  0021               	movlb	1	; select bank1
  3941  05F0  00C7               	movwf	(__TMRCnt^(0+128)+2)
  3942                           
  3943                           ;main.c: 111: _TMRCnt[2] = CalcTMRCnt(Servo[2].width);
  3944  05F1  0020               	movlb	0	; select bank0
  3945  05F2  0826               	movf	CalcNextCnt@Servo,w
  3946  05F3  3E0C               	addlw	12
  3947  05F4  0086               	movwf	6
  3948  05F5  0187               	clrf	7
  3949  05F6  3F40               	moviw [0]fsr1
  3950  05F7  00A0               	movwf	CalcTMRCnt@pulse_width
  3951  05F8  3F41               	moviw [1]fsr1
  3952  05F9  00A1               	movwf	CalcTMRCnt@pulse_width+1
  3953  05FA  3187  275A  3185   	fcall	_CalcTMRCnt
  3954  05FD  0020               	movlb	0	; select bank0
  3955  05FE  0821               	movf	?_CalcTMRCnt+1,w
  3956  05FF  0021               	movlb	1	; select bank1
  3957  0600  00CA               	movwf	((__TMRCnt+1)^(0+128)+4)
  3958  0601  0020               	movlb	0	; select bank0
  3959  0602  0820               	movf	?_CalcTMRCnt,w
  3960  0603  0021               	movlb	1	; select bank1
  3961  0604  00C9               	movwf	(__TMRCnt^(0+128)+4)
  3962                           
  3963                           ;main.c: 112: _TMRCnt[3] = CalcTMRCnt(Servo[3].width);
  3964  0605  0020               	movlb	0	; select bank0
  3965  0606  0826               	movf	CalcNextCnt@Servo,w
  3966  0607  3E11               	addlw	17
  3967  0608  0086               	movwf	6
  3968  0609  0187               	clrf	7
  3969  060A  3F40               	moviw [0]fsr1
  3970  060B  00A0               	movwf	CalcTMRCnt@pulse_width
  3971  060C  3F41               	moviw [1]fsr1
  3972  060D  00A1               	movwf	CalcTMRCnt@pulse_width+1
  3973  060E  3187  275A         	fcall	_CalcTMRCnt
  3974  0610  0020               	movlb	0	; select bank0
  3975  0611  0821               	movf	?_CalcTMRCnt+1,w
  3976  0612  0021               	movlb	1	; select bank1
  3977  0613  00CC               	movwf	((__TMRCnt+1)^(0+128)+6)
  3978  0614  0020               	movlb	0	; select bank0
  3979  0615  0820               	movf	?_CalcTMRCnt,w
  3980  0616  0021               	movlb	1	; select bank1
  3981  0617  00CB               	movwf	(__TMRCnt^(0+128)+6)
  3982  0618  0008               	return
  3983  0619                     __end_of_CalcNextCnt:	
  3984                           
  3985                           	psect	text19
  3986  075A                     __ptext19:	
  3987 ;; *************** function _CalcTMRCnt *****************
  3988 ;; Defined at:
  3989 ;;		line 143 in file "main.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;  pulse_width     2    0[BANK0 ] unsigned int 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  cnt             2    4[BANK0 ] unsigned int 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  2    0[BANK0 ] unsigned int 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4003 ;;      Params:         0       2       0       0
  4004 ;;      Locals:         0       2       0       0
  4005 ;;      Temps:          0       2       0       0
  4006 ;;      Totals:         0       6       0       0
  4007 ;;Total ram usage:        6 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    3
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_CalcNextCnt
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _CalcTMRCnt
  4019  075A                     _CalcTMRCnt:	
  4020                           
  4021                           ;main.c: 145: uint16_t cnt = (uint16_t) (65535 - 2 * pulse_width);
  4022                           
  4023                           ;incstack = 0
  4024                           ; Regs used in _CalcTMRCnt: [wreg+status,2+status,0]
  4025  075A  0020               	movlb	0	; select bank0
  4026  075B  0821               	movf	CalcTMRCnt@pulse_width+1,w
  4027  075C  00A3               	movwf	??_CalcTMRCnt+1
  4028  075D  0820               	movf	CalcTMRCnt@pulse_width,w
  4029  075E  00A2               	movwf	??_CalcTMRCnt
  4030  075F  35A2               	lslf	??_CalcTMRCnt,f
  4031  0760  0DA3               	rlf	??_CalcTMRCnt+1,f
  4032  0761  09A2               	comf	??_CalcTMRCnt,f
  4033  0762  09A3               	comf	??_CalcTMRCnt+1,f
  4034  0763  0AA2               	incf	??_CalcTMRCnt,f
  4035  0764  1903               	skipnz
  4036  0765  0AA3               	incf	??_CalcTMRCnt+1,f
  4037  0766  0822               	movf	??_CalcTMRCnt,w
  4038  0767  3EFF               	addlw	255
  4039  0768  00A4               	movwf	CalcTMRCnt@cnt
  4040  0769  30FF               	movlw	255
  4041  076A  3D23               	addwfc	??_CalcTMRCnt+1,w
  4042  076B  00A5               	movwf	CalcTMRCnt@cnt+1
  4043                           
  4044                           ;main.c: 146: return cnt;
  4045  076C  0825               	movf	CalcTMRCnt@cnt+1,w
  4046  076D  00A1               	movwf	?_CalcTMRCnt+1
  4047  076E  0824               	movf	CalcTMRCnt@cnt,w
  4048  076F  00A0               	movwf	?_CalcTMRCnt
  4049  0770  0008               	return
  4050  0771                     __end_of_CalcTMRCnt:	
  4051                           
  4052                           	psect	intentry
  4053  0004                     __pintentry:	
  4054 ;; *************** function _INTERRUPT_HANDLER *****************
  4055 ;; Defined at:
  4056 ;;		line 154 in file "main.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4070 ;;      Params:         0       0       0       0
  4071 ;;      Locals:         0       0       0       0
  4072 ;;      Temps:          3       0       0       0
  4073 ;;      Totals:         3       0       0       0
  4074 ;;Total ram usage:        3 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    2
  4077 ;; This function calls:
  4078 ;;		_Interrupt_TMR1
  4079 ;;		_Interrupt_TMR2
  4080 ;;		_Interrupt_TX
  4081 ;; This function is called by:
  4082 ;;		Interrupt level 1
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086  0004                     _INTERRUPT_HANDLER:	
  4087                           
  4088                           ;incstack = 0
  4089  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4090                           
  4091                           ; Regs used in _INTERRUPT_HANDLER: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4092  0005  3180               	pagesel	$
  4093  0006  0020               	movlb	0	; select bank0
  4094  0007  087F               	movf	127,w
  4095  0008  00F5               	movwf	??_INTERRUPT_HANDLER+2
  4096                           
  4097                           ;main.c: 156: if (INTCONbits.PEIE & PIE1bits.TMR1IE & PIR1bits.TMR1IF)
  4098  0009  0811               	movf	17,w	;volatile
  4099  000A  3901               	andlw	1
  4100  000B  00F3               	movwf	??_INTERRUPT_HANDLER
  4101  000C  0021               	movlb	1	; select bank1
  4102  000D  0811               	movf	17,w	;volatile
  4103  000E  3901               	andlw	1
  4104  000F  00F4               	movwf	??_INTERRUPT_HANDLER+1
  4105  0010  0E0B               	swapf	11,w	;volatile
  4106  0011  0C89               	rrf	9,f
  4107  0012  0C89               	rrf	9,f
  4108  0013  3901               	andlw	1
  4109  0014  0574               	andwf	??_INTERRUPT_HANDLER+1,w
  4110  0015  0573               	andwf	??_INTERRUPT_HANDLER,w
  4111  0016  1903               	btfsc	3,2
  4112  0017  281E               	goto	i1l1631
  4113                           
  4114                           ;main.c: 157: {
  4115                           ;main.c: 158: TMR1IF = 0;
  4116  0018  0020               	movlb	0	; select bank0
  4117  0019  1011               	bcf	17,0	;volatile
  4118                           
  4119                           ;main.c: 159: Interrupt_TMR1();
  4120  001A  3187  2771  3180   	fcall	_Interrupt_TMR1
  4121                           
  4122                           ;main.c: 160: }else if(INTCONbits.PEIE & PIE1bits.TMR2IE & PIR1bits.TMR2IF)
  4123  001D  2848               	goto	i1l100
  4124  001E                     i1l1631:	
  4125  001E  0020               	movlb	0	; select bank0
  4126  001F  0C11               	rrf	17,w	;volatile
  4127  0020  3901               	andlw	1
  4128  0021  00F3               	movwf	??_INTERRUPT_HANDLER
  4129  0022  0021               	movlb	1	; select bank1
  4130  0023  0C11               	rrf	17,w	;volatile
  4131  0024  3901               	andlw	1
  4132  0025  00F4               	movwf	??_INTERRUPT_HANDLER+1
  4133  0026  0E0B               	swapf	11,w	;volatile
  4134  0027  0C89               	rrf	9,f
  4135  0028  0C89               	rrf	9,f
  4136  0029  3901               	andlw	1
  4137  002A  0574               	andwf	??_INTERRUPT_HANDLER+1,w
  4138  002B  0573               	andwf	??_INTERRUPT_HANDLER,w
  4139  002C  1903               	btfsc	3,2
  4140  002D  2834               	goto	i1l1637
  4141                           
  4142                           ;main.c: 161: {
  4143                           ;main.c: 162: TMR2IF = 0;
  4144  002E  0020               	movlb	0	; select bank0
  4145  002F  1091               	bcf	17,1	;volatile
  4146                           
  4147                           ;main.c: 163: Interrupt_TMR2();
  4148  0030  3186  26C5  3180   	fcall	_Interrupt_TMR2
  4149                           
  4150                           ;main.c: 164: }
  4151  0033  2848               	goto	i1l100
  4152  0034                     i1l1637:	
  4153                           
  4154                           ;main.c: 165: else if (INTCONbits.PEIE & PIE1bits.TXIE & PIR1bits.TXIF)
  4155  0034  0020               	movlb	0	; select bank0
  4156  0035  0E11               	swapf	17,w	;volatile
  4157  0036  3901               	andlw	1
  4158  0037  00F3               	movwf	??_INTERRUPT_HANDLER
  4159  0038  0021               	movlb	1	; select bank1
  4160  0039  0E11               	swapf	17,w	;volatile
  4161  003A  3901               	andlw	1
  4162  003B  00F4               	movwf	??_INTERRUPT_HANDLER+1
  4163  003C  0E0B               	swapf	11,w	;volatile
  4164  003D  0C89               	rrf	9,f
  4165  003E  0C89               	rrf	9,f
  4166  003F  3901               	andlw	1
  4167  0040  0574               	andwf	??_INTERRUPT_HANDLER+1,w
  4168  0041  0573               	andwf	??_INTERRUPT_HANDLER,w
  4169  0042  1903               	btfsc	3,2
  4170  0043  2848               	goto	i1l100
  4171                           
  4172                           ;main.c: 166: {
  4173                           ;main.c: 167: TXIF = 0;
  4174  0044  0020               	movlb	0	; select bank0
  4175  0045  1211               	bcf	17,4	;volatile
  4176                           
  4177                           ;main.c: 168: Interrupt_TX();
  4178  0046  3187  270A         	fcall	_Interrupt_TX
  4179  0048                     i1l100:	
  4180  0048  0875               	movf	??_INTERRUPT_HANDLER+2,w
  4181  0049  0020               	movlb	0	; select bank0
  4182  004A  00FF               	movwf	127
  4183  004B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4184  004C  0009               	retfie
  4185  004D                     __end_of_INTERRUPT_HANDLER:	
  4186                           
  4187                           	psect	text21
  4188  070A                     __ptext21:	
  4189 ;; *************** function _Interrupt_TX *****************
  4190 ;; Defined at:
  4191 ;;		line 32 in file "Interrupt.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;		None
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;		None
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4205 ;;      Params:         0       0       0       0
  4206 ;;      Locals:         0       0       0       0
  4207 ;;      Temps:          1       0       0       0
  4208 ;;      Totals:         1       0       0       0
  4209 ;;Total ram usage:        1 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_INTERRUPT_HANDLER
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function _Interrupt_TX
  4220  070A                     _Interrupt_TX:	
  4221                           
  4222                           ;Interrupt.c: 34: static int cnt = 0;
  4223                           ;Interrupt.c: 36: TXREG = _DebugTxData[cnt];
  4224                           
  4225                           ;incstack = 0
  4226                           ; Regs used in _Interrupt_TX: [wreg+fsr1l+fsr1h+status,2+status,0]
  4227  070A  0021               	movlb	1	; select bank1
  4228  070B  0866               	movf	Interrupt_TX@cnt^(0+128),w
  4229  070C  3ED7               	addlw	(low (__DebugTxData| 0))& (0+255)
  4230  070D  0086               	movwf	6
  4231  070E  0187               	clrf	7
  4232  070F  0801               	movf	1,w
  4233  0710  0023               	movlb	3	; select bank3
  4234  0711  009A               	movwf	26	;volatile
  4235                           
  4236                           ;Interrupt.c: 38: cnt++;
  4237  0712  3001               	movlw	1
  4238  0713  0021               	movlb	1	; select bank1
  4239  0714  07E6               	addwf	Interrupt_TX@cnt^(0+128),f
  4240  0715  3000               	movlw	0
  4241  0716  3DE7               	addwfc	(Interrupt_TX@cnt+1)^(0+128),f
  4242                           
  4243                           ;Interrupt.c: 39: if (cnt >= 5)
  4244  0717  0867               	movf	(Interrupt_TX@cnt+1)^(0+128),w
  4245  0718  3A80               	xorlw	128
  4246  0719  00F0               	movwf	??_Interrupt_TX
  4247  071A  3080               	movlw	128
  4248  071B  0270               	subwf	??_Interrupt_TX,w
  4249  071C  1D03               	skipz
  4250  071D  2F20               	goto	u196_25
  4251  071E  3005               	movlw	5
  4252  071F  0266               	subwf	Interrupt_TX@cnt^(0+128),w
  4253  0720                     u196_25:	
  4254  0720  1C03               	skipc
  4255  0721  0008               	return
  4256                           
  4257                           ;Interrupt.c: 40: {
  4258                           ;Interrupt.c: 41: cnt = 0;
  4259  0722  0021               	movlb	1	; select bank1
  4260  0723  01E6               	clrf	Interrupt_TX@cnt^(0+128)
  4261  0724  01E7               	clrf	(Interrupt_TX@cnt+1)^(0+128)
  4262  0725  0008               	return
  4263  0726                     __end_of_Interrupt_TX:	
  4264                           
  4265                           	psect	text22
  4266  06C5                     __ptext22:	
  4267 ;; *************** function _Interrupt_TMR2 *****************
  4268 ;; Defined at:
  4269 ;;		line 18 in file "Interrupt.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;		None
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4283 ;;      Params:         0       0       0       0
  4284 ;;      Locals:         0       0       0       0
  4285 ;;      Temps:          0       0       0       0
  4286 ;;      Totals:         0       0       0       0
  4287 ;;Total ram usage:        0 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    1
  4290 ;; This function calls:
  4291 ;;		i1_Output
  4292 ;; This function is called by:
  4293 ;;		_INTERRUPT_HANDLER
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           
  4298                           ;psect for function _Interrupt_TMR2
  4299  06C5                     _Interrupt_TMR2:	
  4300                           
  4301                           ;Interrupt.c: 20: TMR2 = 255 - 123;
  4302                           
  4303                           ;incstack = 0
  4304                           ; Regs used in _Interrupt_TMR2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4305  06C5  3084               	movlw	132
  4306  06C6  0020               	movlb	0	; select bank0
  4307  06C7  009A               	movwf	26	;volatile
  4308                           
  4309                           ;Interrupt.c: 22: if(IntCnt != 4)
  4310  06C8  3004               	movlw	4
  4311  06C9  0676               	xorwf	_IntCnt,w
  4312  06CA  0477               	iorwf	_IntCnt+1,w
  4313  06CB  1903               	btfsc	3,2
  4314  06CC  2EE5               	goto	i1l1603
  4315                           
  4316                           ;Interrupt.c: 23: {
  4317                           ;Interrupt.c: 24: TMR1 = _TMRCnt[IntCnt];
  4318  06CD  3576               	lslf	_IntCnt,w
  4319  06CE  3EC5               	addlw	(low (__TMRCnt| 0))& (0+255)
  4320  06CF  0086               	movwf	6
  4321  06D0  0187               	clrf	7
  4322  06D1  3F40               	moviw [0]fsr1
  4323  06D2  0096               	movwf	22	;volatile
  4324  06D3  3F41               	moviw [1]fsr1
  4325  06D4  0097               	movwf	23	;volatile
  4326                           
  4327                           ;Interrupt.c: 25: Output(_CHs[IntCnt], 1);
  4328  06D5  01F0               	clrf	i1Output@value
  4329  06D6  0AF0               	incf	i1Output@value,f
  4330  06D7  0877               	movf	_IntCnt+1,w
  4331  06D8  0085               	movwf	5
  4332  06D9  0876               	movf	_IntCnt,w
  4333  06DA  0084               	movwf	4
  4334  06DB  30DE               	movlw	low (__CHs| (0+32768))
  4335  06DC  0784               	addwf	4,f
  4336  06DD  3087               	movlw	high (__CHs| (0+32768))
  4337  06DE  3D85               	addwfc	5,f
  4338  06DF  0800               	movf	0,w	;code access
  4339  06E0  3186  2659         	fcall	i1_Output
  4340                           
  4341                           ;Interrupt.c: 26: T1CONbits.TMR1ON = 1;
  4342  06E2  0020               	movlb	0	; select bank0
  4343  06E3  1418               	bsf	24,0	;volatile
  4344                           
  4345                           ;Interrupt.c: 27: }else{
  4346  06E4  0008               	return
  4347  06E5                     i1l1603:	
  4348                           
  4349                           ;Interrupt.c: 28: IntCnt = 0;
  4350  06E5  01F6               	clrf	_IntCnt
  4351  06E6  01F7               	clrf	_IntCnt+1
  4352  06E7  0008               	return
  4353  06E8                     __end_of_Interrupt_TMR2:	
  4354                           
  4355                           	psect	text23
  4356  0771                     __ptext23:	
  4357 ;; *************** function _Interrupt_TMR1 *****************
  4358 ;; Defined at:
  4359 ;;		line 11 in file "Interrupt.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      void 
  4366 ;; Registers used:
  4367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4373 ;;      Params:         0       0       0       0
  4374 ;;      Locals:         0       0       0       0
  4375 ;;      Temps:          0       0       0       0
  4376 ;;      Totals:         0       0       0       0
  4377 ;;Total ram usage:        0 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    1
  4380 ;; This function calls:
  4381 ;;		i1_Output
  4382 ;; This function is called by:
  4383 ;;		_INTERRUPT_HANDLER
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           
  4388                           ;psect for function _Interrupt_TMR1
  4389  0771                     _Interrupt_TMR1:	
  4390                           
  4391                           ;Interrupt.c: 13: Output(_CHs[IntCnt], 0);
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in _Interrupt_TMR1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4395  0771  01F0               	clrf	i1Output@value
  4396  0772  0877               	movf	_IntCnt+1,w
  4397  0773  0085               	movwf	5
  4398  0774  0876               	movf	_IntCnt,w
  4399  0775  0084               	movwf	4
  4400  0776  30DE               	movlw	low (__CHs| (0+32768))
  4401  0777  0784               	addwf	4,f
  4402  0778  3087               	movlw	high (__CHs| (0+32768))
  4403  0779  3D85               	addwfc	5,f
  4404  077A  0800               	movf	0,w	;code access
  4405  077B  3186  2659         	fcall	i1_Output
  4406                           
  4407                           ;Interrupt.c: 14: T1CONbits.TMR1ON = 0;
  4408  077D  0020               	movlb	0	; select bank0
  4409  077E  1018               	bcf	24,0	;volatile
  4410                           
  4411                           ;Interrupt.c: 15: IntCnt++;
  4412  077F  3001               	movlw	1
  4413  0780  07F6               	addwf	_IntCnt,f
  4414  0781  3000               	movlw	0
  4415  0782  3DF7               	addwfc	_IntCnt+1,f
  4416  0783  0008               	return
  4417  0784                     __end_of_Interrupt_TMR1:	
  4418                           
  4419                           	psect	text24
  4420  0659                     __ptext24:	
  4421 ;; *************** function i1_Output *****************
  4422 ;; Defined at:
  4423 ;;		line 13 in file "ShareFunc.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  ch              1    wreg     unsigned char 
  4426 ;;  value           1    0[COMMON] unsigned char 
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  ch              1    2[COMMON] unsigned char 
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      void 
  4431 ;; Registers used:
  4432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4438 ;;      Params:         1       0       0       0
  4439 ;;      Locals:         1       0       0       0
  4440 ;;      Temps:          1       0       0       0
  4441 ;;      Totals:         3       0       0       0
  4442 ;;Total ram usage:        3 bytes
  4443 ;; Hardware stack levels used:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_Interrupt_TMR1
  4448 ;;		_Interrupt_TMR2
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function i1_Output
  4454  0659                     i1_Output:	
  4455                           
  4456                           ;incstack = 0
  4457                           ; Regs used in i1_Output: [wreg-fsr0h+status,2+status,0+pclath]
  4458                           ;i1Output@ch stored from wreg
  4459  0659  00F2               	movwf	i1Output@ch
  4460                           
  4461                           ;ShareFunc.c: 15: if (ch & _CHs[0]) LATCbits.LATC3 = value;
  4462  065A  30DE               	movlw	low (__CHs| (0+32768))
  4463  065B  0084               	movwf	4
  4464  065C  3087               	movlw	high (__CHs| (0+32768))
  4465  065D  0085               	movwf	5
  4466  065E  0800               	movf	0,w	;code access
  4467  065F  00F1               	movwf	??i1_Output
  4468  0660  0872               	movf	i1Output@ch,w
  4469  0661  0571               	andwf	??i1_Output,w
  4470  0662  1903               	btfsc	3,2
  4471  0663  2E6A               	goto	i1l1495
  4472  0664  0C70               	rrf	i1Output@value,w
  4473  0665  0022               	movlb	2	; select bank2
  4474  0666  1C03               	skipc
  4475  0667  118E               	bcf	14,3	;volatile
  4476  0668  1803               	skipnc
  4477  0669  158E               	bsf	14,3	;volatile
  4478  066A                     i1l1495:	
  4479                           
  4480                           ;ShareFunc.c: 16: if (ch & _CHs[1]) LATCbits.LATC6 = value;
  4481  066A  30DF               	movlw	low ((__CHs+1)| (0+32768))
  4482  066B  0084               	movwf	4
  4483  066C  3087               	movlw	high ((__CHs+1)| (0+32768))
  4484  066D  0085               	movwf	5
  4485  066E  0800               	movf	0,w	;code access
  4486  066F  0572               	andwf	i1Output@ch,w
  4487  0670  1903               	btfsc	3,2
  4488  0671  2E78               	goto	i1l1499
  4489  0672  0C70               	rrf	i1Output@value,w
  4490  0673  0022               	movlb	2	; select bank2
  4491  0674  1C03               	skipc
  4492  0675  130E               	bcf	14,6	;volatile
  4493  0676  1803               	skipnc
  4494  0677  170E               	bsf	14,6	;volatile
  4495  0678                     i1l1499:	
  4496                           
  4497                           ;ShareFunc.c: 17: if (ch & _CHs[2]) LATCbits.LATC5 = value;
  4498  0678  30E0               	movlw	low ((__CHs+2)| (0+32768))
  4499  0679  0084               	movwf	4
  4500  067A  3087               	movlw	high ((__CHs+2)| (0+32768))
  4501  067B  0085               	movwf	5
  4502  067C  0800               	movf	0,w	;code access
  4503  067D  0572               	andwf	i1Output@ch,w
  4504  067E  1903               	btfsc	3,2
  4505  067F  2E86               	goto	i1l1503
  4506  0680  0C70               	rrf	i1Output@value,w
  4507  0681  0022               	movlb	2	; select bank2
  4508  0682  1C03               	skipc
  4509  0683  128E               	bcf	14,5	;volatile
  4510  0684  1803               	skipnc
  4511  0685  168E               	bsf	14,5	;volatile
  4512  0686                     i1l1503:	
  4513                           
  4514                           ;ShareFunc.c: 18: if (ch & _CHs[3]) LATCbits.LATC4 = value;
  4515  0686  30E1               	movlw	low ((__CHs+3)| (0+32768))
  4516  0687  0084               	movwf	4
  4517  0688  3087               	movlw	high ((__CHs+3)| (0+32768))
  4518  0689  0085               	movwf	5
  4519  068A  0800               	movf	0,w	;code access
  4520  068B  0572               	andwf	i1Output@ch,w
  4521  068C  1903               	btfsc	3,2
  4522  068D  0008               	return
  4523  068E  0C70               	rrf	i1Output@value,w
  4524  068F  0022               	movlb	2	; select bank2
  4525  0690  1C03               	skipc
  4526  0691  120E               	bcf	14,4	;volatile
  4527  0692  1803               	skipnc
  4528  0693  160E               	bsf	14,4	;volatile
  4529  0694  0008               	return
  4530  0695                     __end_ofi1_Output:	
  4531  007E                     btemp	set	126	;btemp
  4532  007E                     int$flags	set	126
  4533  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    4
    Data        49
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     79      79
    BANK1            80     37      73
    BANK2            80      0      64

Pointer List with Targets:

    CalcNextCnt@Servo	PTR struct . size(1) Largest target is 20
		 -> main@Servo(BANK1[20]), 

    SetParameter@Servo	PTR struct . size(1) Largest target is 20
		 -> main@Servo(BANK1[20]), 

    ReceiveTargetAngle@Servo	PTR struct . size(1) Largest target is 20
		 -> main@Servo(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _Interrupt_TMR2->i1_Output
    _Interrupt_TMR1->i1_Output

Critical Paths under _main in BANK0

    _SetParameter->_CalcWidth
    _CalcWidth->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _ReceiveTargetAngle->___bmul
    _CalcNextCnt->_CalcTMRCnt

Critical Paths under _INTERRUPT_HANDLER in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SetParameter
    _SetParameter->_CalcWidth

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   15355
                                             16 BANK1     21    21      0
                        _CalcNextCnt
                               _Init
                             _Output
                 _ReceiveTargetAngle
                       _SetParameter
 ---------------------------------------------------------------------------------
 (1) _SetParameter                                        13    13      0   13839
                                              3 BANK1     13    13      0
                          _CalcWidth
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _CalcWidth                                            9     5      4   13210
                                             73 BANK0      6     2      4
                                              0 BANK1      3     3      0
                           ___awtoft
                             ___bmul (ARG)
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             8     5      3    2131
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     316
                                             59 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2563
                                             30 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2517
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3179
                                             46 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2328
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2109
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _ReceiveTargetAngle                                  26    26      0     703
                                              4 BANK0     26    26      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     264
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _Output                                               3     2      1     316
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                            _InitOsc
                            _InitPin
                           _InitTmr1
                           _InitTmr2
 ---------------------------------------------------------------------------------
 (2) _InitTmr2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTmr1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPin                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcNextCnt                                          1     1      0     419
                                              6 BANK0      1     1      0
                         _CalcTMRCnt
 ---------------------------------------------------------------------------------
 (2) _CalcTMRCnt                                           6     4      2     301
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_HANDLER                                    3     3      0     456
                                              3 COMMON     3     3      0
                     _Interrupt_TMR1
                     _Interrupt_TMR2
                       _Interrupt_TX
 ---------------------------------------------------------------------------------
 (6) _Interrupt_TX                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Interrupt_TMR2                                       0     0      0     228
                           i1_Output
 ---------------------------------------------------------------------------------
 (6) _Interrupt_TMR1                                       0     0      0     228
                           i1_Output
 ---------------------------------------------------------------------------------
 (7) i1_Output                                             3     2      1     228
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CalcNextCnt
     _CalcTMRCnt
   _Init
     _InitOsc
     _InitPin
     _InitTmr1
     _InitTmr2
   _Output
   _ReceiveTargetAngle
     ___bmul
   _SetParameter
     _CalcWidth
       ___awtoft
         ___ftpack
       ___bmul (ARG)
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___bmul

 _INTERRUPT_HANDLER (ROOT)
   _Interrupt_TMR1
     i1_Output
   _Interrupt_TMR2
     i1_Output
   _Interrupt_TX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E1       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4F      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     25      49       8       91.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      E1      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Wed Oct 02 17:28:39 2019

                 _CalcTMRCnt 075A               ___bmul@product 0022                  __CFG_CP$OFF 0000  
                 i1Output@ch 0072                 ___ftadd@exp1 005A                 ___ftadd@exp2 0059  
               ___ftadd@sign 0058                          l473 05A9                          l474 05B1  
                        l466 0596                          l557 04DB                          l497 0115  
               __CFG_CPD$OFF 0000                 __CFG_BORV$HI 0000                          wreg 0009  
                _CalcNextCnt 05C8                 __CFG_LVP$OFF 0000                 ___ftdiv@cntr 0038  
                main@isFirst 00B0                 ___ftdiv@sign 003D                         l1213 06F3  
                       l1223 009E                         l1233 00B4                         l1321 044C  
                       l1313 0433                         l1251 00E1                         l1227 00A5  
                       l1411 04D2                         l1403 04B7                         l1181 0573  
                       l1253 00EB                         l1245 00CE                         l1341 033E  
                       l1413 04DE                         l1405 04C5                         l1191 059B  
                       l1183 057D                         l1263 0107                         l1255 00F0  
                       l1335 0328                         l1521 063A                         l1193 05A3  
                       l1185 0582                         l1177 056C                         l1273 0139  
                       l1265 0111                         l1257 00F4                         l1353 0379  
                       l1417 04EC                         l1283 0154                         l1525 0649  
                       l1517 062B                         l1269 0127                         l1293 03DC  
                       l1365 0395                         l1357 0381                         l1535 0253  
                       l1537 02C4                         l1369 039D                         l1385 0487  
                       l1483 078D                         l1547 0300                         l1299 03F2  
                       l1571 01C9                         l1619 074D                         l1565 0186  
                       l1479 0787                         _BRGH 0CF2                         u1115 05B8  
                       u1035 0578                         u1055 0591                         u1075 059E  
                       u1235 00CF                         u1325 0108                         u1405 0414  
                       u1415 0434                         u1265 00E2                         u1425 0443  
                       u1505 0382                         u1435 044D                         u1515 0388  
                       u1295 00F5                         u1615 04B8                         u1545 039E  
                       u1395 0404                         u1555 03A4                         u1475 034A  
                       u1805 02AE                         u1485 035A                         u1645 04D3  
                       u1815 02B6                         u1585 048E                         u1905 01A9  
                       u1835 02CF                         u1915 01C7                         u1845 02E8  
                       u1925 01D5                         u1775 0282                         u1935 01DB  
                       u1785 028F                         u1795 0297                         u1875 0184  
                       u1885 018A                         u1895 0193                         _TMR1 0016  
                       _TMR2 001A                         _TXIF 008C                         _SYNC 0CF4  
                       __CHq 00DC                         __CHs 07DE                         _Init 07A7  
               __CFG_WRT$OFF 0000                         _main 0741                 ___ftpack@arg 0020  
               ___ftpack@exp 0023          SetParameter@isFirst 00E8                         fsr0h 0005  
                       fsr1h 0007                         indf0 0000                         fsr0l 0004  
                       indf1 0001                         fsr1l 0006                         btemp 007E  
                       start 004D                __CFG_IESO$OFF 0000            ___bmul@multiplier 0023  
               ___ftmul@cntr 004C                 ___ftmul@sign 004D              __end_of_InitPin 07A7  
            __end_of_InitOsc 07D2                 ___fttol@exp1 0068                 ___fttol@lval 0064  
                      ?_Init 0070                        ?_main 0070              __end_of___ftadd 016C  
                      _BRG16 0CFB                __CFG_WDTE$OFF 0000              __end_of___ftdiv 046E  
            __end_of___ftmul 03C5              __end_of___fttol 04F5                        i1l100 0048  
                      _SPBRG 019B                        _PORTA 000C                        _PORTB 000D  
                      _TRISA 008C                        _TRISB 008D                SetParameter@i 00AE  
                      _TXREG 019A               __CFG_FCMEN$OFF 0000                ___awtoft@sign 002D  
              ___ftpack@sign 0024                i1Output@value 0070        SetParameter@Parameter 0150  
           __end_ofi1_Output 0695               __CFG_BOREN$OFF 0000                        status 0003  
                      wtemp0 007E           __size_of_CalcWidth 006E               __CFG_MCLRE$OFF 0000  
               __end_of__CHs 07E2              __initialization 004F                 __end_of_Init 07B5  
               __end_of_main 075A                  ?_CalcTMRCnt 0020             __end_of_InitTmr1 07C1  
           __end_of_InitTmr2 07CA                       ??_Init 0020                       ??_main 006F  
              ___fttol@sign1 0063               __CFG_PLLEN$OFF 0000               CalcWidth@angle 00A2  
           __end_of___awtoft 070A                       _ANSELA 018C                       _ANSELB 018D  
           __end_of___ftpack 05C8             __end_of___lbtoft 0741                       i1l1503 0686  
             CalcWidth@width 00A0                       i1l1603 06E5                       i1l1631 001E  
                     i1l1637 0034                       i1l1495 066A                       i1l1499 0678  
                     u196_25 0720                       _TMR1IF 0088                       _TMR2IF 0089  
                     _TMR1ON 00C0                       _TMR2ON 00E2                ?_Interrupt_TX 0070  
                  ??_InitPin 0020                    ??_InitOsc 0020               __CFG_PWRTE$OFF 0000  
                     _IntCnt 0076                       ___bmul 0784                       _Output 0619  
                  ??___ftadd 0054                    ??___ftdiv 0034                    ??___ftmul 0044  
                  ??___fttol 005F        ___ftmul@f3_as_product 0049             CalcNextCnt@Servo 0026  
          __end_of_CalcWidth 0563                ?_SetParameter 0070          __size_of_CalcTMRCnt 0017  
 __end_of_ReceiveTargetAngle 0311               ??_Interrupt_TX 0070      __end_of__initialization 0072  
                 ___ftadd@f1 004E                   ___ftadd@f2 0051                   ___ftdiv@f1 0031  
                 ___ftdiv@f2 002E                   ___ftdiv@f3 0039                   ___awtoft@c 0028  
                 ___lbtoft@c 002F          ___bmul@multiplicand 0020                   ___ftmul@f1 003E  
                 ___ftmul@f2 0041                   ___fttol@f1 005B               __pcstackCOMMON 0070  
               __pidataBANK1 07E2                 __pidataBANK2 0695                    ?i1_Output 0070  
               ?_CalcNextCnt 0070               ??_SetParameter 00A3                   __pbssBANK1 00C5  
                 __pbssBANK2 0150                    ?_InitTmr1 0070                    ?_InitTmr2 0070  
            __CFG_VCAPEN$OFF 0000                   __pmaintext 0741                      ?___bmul 0020  
                    ?_Output 0020                   __pintentry 0004                    ?___awtoft 0028  
                  ?___ftpack 0020                    ?___lbtoft 0028                   ??i1_Output 0071  
              CalcTMRCnt@cnt 0024                  __Parameters 0120                   ??_InitTmr1 0020  
                 ??_InitTmr2 0020                      __TMRCnt 00C5                      _InitPin 0796  
                    _InitOsc 07CA                      __IntNum 00E4                 ??_CalcTMRCnt 0022  
            __size_of___bmul 0012              __size_of_Output 0040                      ___ftadd 0076  
                    ___ftdiv 03C5                      ___ftmul 0311                      ___fttol 046E  
                    __isBusy 0078              __CFG_STVREN$OFF 0000                   ??___awtoft 002B  
                 ??___ftpack 0025                   ??___lbtoft 002B                      __ptext1 016C  
                    __ptext2 04F5                      __ptext3 0726                      __ptext4 046E  
                    __ptext5 0311                      __ptext6 03C5                      __ptext7 0076  
                    __ptext8 06E8                      __ptext9 0563         __end_of_Interrupt_TX 0726  
          _INTERRUPT_HANDLER 0004                    _T1CONbits 0018      __size_of_Interrupt_TMR1 0013  
    __size_of_Interrupt_TMR2 0023                    _T2CONbits 001C           ?_INTERRUPT_HANDLER 0070  
        ReceiveTargetAngle@i 003C                      clrloop0 07D9         end_of_initialization 0072  
        ??_INTERRUPT_HANDLER 0073           __end_of_CalcTMRCnt 0771                      init_ram 07D2  
                    initloop 07D3                    _RCSTAbits 019D         __end_of_SetParameter 0241  
  __end_of_INTERRUPT_HANDLER 004D                    _PORTCbits 000E             __CFG_FOSC$INTOSC 0000  
                  _TRISCbits 008E         __size_of_CalcNextCnt 0051            SetParameter@Servo 00AD  
                  _CalcWidth 04F5                  ___ftdiv@exp 003C                    _TXSTAbits 019E  
               __DebugTxData 00D7                  ___ftmul@exp 0048           _ReceiveTargetAngle 0241  
             __end_of___bmul 0796               __end_of_Output 0659          ?_ReceiveTargetAngle 0070  
          __size_ofi1_Output 003C          start_initialization 004F              Interrupt_TX@cnt 00E6  
                Output@value 0020                   ?_CalcWidth 0069         ??_ReceiveTargetAngle 0024  
          __size_of_InitTmr1 000C            __size_of_InitTmr2 0009                     ??___bmul 0021  
                   ??_Output 0021        __size_of_Interrupt_TX 001C                  __pdataBANK1 00E8  
                __pdataBANK2 0120   __size_of_INTERRUPT_HANDLER 0049               _Interrupt_TMR1 0771  
             _Interrupt_TMR2 06C5            __size_of___awtoft 0022            __size_of___ftpack 0065  
          __size_of___lbtoft 001B                  __pbssCOMMON 0076                    ___latbits 0001  
              __pcstackBANK0 0020                __pcstackBANK1 00A0                 _Interrupt_TX 070A  
      __size_of_SetParameter 00D5                     ?_InitPin 0070                     ?_InitOsc 0070  
                   ?___ftadd 004E                     ?___ftdiv 002E                     ?___ftmul 003E  
                   ?___fttol 005B       __end_of_Interrupt_TMR1 0784       __end_of_Interrupt_TMR2 06E8  
         CalcWidth@Parameter 0069                 _SetParameter 016C                  ??_CalcWidth 006D  
                   _LATCbits 010E                    clear_ram0 07D8                     _PIE1bits 0091  
                   _PIR1bits 0011              ?_Interrupt_TMR1 0070              ?_Interrupt_TMR2 0070  
                   i1_Output 0659             SetParameter@Mode 00AC                    main@Servo 00B1  
                   _InitTmr1 07B5                     _InitTmr2 07C1             __size_of_InitPin 0011  
           __size_of_InitOsc 0008             __size_of___ftadd 00F6             __size_of___ftdiv 00A9  
           __size_of___ftmul 00B4             __size_of___fttol 0087                     ___awtoft 06E8  
                   ___ftpack 0563                     ___lbtoft 0726                     Output@ch 0022  
              ??_CalcNextCnt 0026  ReceiveTargetAngle@angle_buf 002F                     __ptext10 0241  
                   __ptext11 0784                     __ptext12 0619                     __ptext21 070A  
                   __ptext13 07A7                     __ptext22 06C5                     __ptext14 07C1  
                   __ptext23 0771                     __ptext15 07B5                     __ptext24 0659  
                   __ptext16 0796                     __ptext17 07CA                     __ptext18 05C8  
                   __ptext19 075A                __size_of_Init 000E                __size_of_main 0019  
      CalcTMRCnt@pulse_width 0020         ReceiveTargetAngle@rx 0037                     int$flags 007E  
ReceiveTargetAngle@pre_angle 00CF                   _INTCONbits 000B      ReceiveTargetAngle@F3434 00E0  
                   intlevel1 0000          __end_of_CalcNextCnt 0619  __size_of_ReceiveTargetAngle 00D0  
          __CFG_CLKOUTEN$OFF 0000      ReceiveTargetAngle@Servo 003B                   _OSCCONbits 0099  
              __pstringtext1 07DE             ??_Interrupt_TMR1 0073             ??_Interrupt_TMR2 0073  
