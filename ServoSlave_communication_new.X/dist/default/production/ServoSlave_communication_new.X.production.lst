

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jul 17 17:07:57 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.00
    34                           ; Generated 27/05/2018 GMT
    35                           ; 
    36                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1933 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  0110                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011D                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020D                     	;# 
   154  0210                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0294                     	;# 
   168  0295                     	;# 
   169  0295                     	;# 
   170  0296                     	;# 
   171  0298                     	;# 
   172  0298                     	;# 
   173  0299                     	;# 
   174  029A                     	;# 
   175  029B                     	;# 
   176  029C                     	;# 
   177  029C                     	;# 
   178  029D                     	;# 
   179  029E                     	;# 
   180  029F                     	;# 
   181  0311                     	;# 
   182  0311                     	;# 
   183  0312                     	;# 
   184  0313                     	;# 
   185  0314                     	;# 
   186  0315                     	;# 
   187  0315                     	;# 
   188  0316                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  031C                     	;# 
   194  031C                     	;# 
   195  031D                     	;# 
   196  031E                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0791                     	;# 
   207  0792                     	;# 
   208  0793                     	;# 
   209  0794                     	;# 
   210  0795                     	;# 
   211  0798                     	;# 
   212  0799                     	;# 
   213  07A0                     	;# 
   214  07A1                     	;# 
   215  07A3                     	;# 
   216  07A4                     	;# 
   217  07A6                     	;# 
   218  07A7                     	;# 
   219  07A9                     	;# 
   220  07AA                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  0110                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0191                     	;# 
   299  0191                     	;# 
   300  0192                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0193                     	;# 
   304  0194                     	;# 
   305  0195                     	;# 
   306  0196                     	;# 
   307  0199                     	;# 
   308  019A                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019C                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  019F                     	;# 
   318  020D                     	;# 
   319  0210                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0214                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0216                     	;# 
   327  0217                     	;# 
   328  0291                     	;# 
   329  0291                     	;# 
   330  0292                     	;# 
   331  0293                     	;# 
   332  0294                     	;# 
   333  0295                     	;# 
   334  0295                     	;# 
   335  0296                     	;# 
   336  0298                     	;# 
   337  0298                     	;# 
   338  0299                     	;# 
   339  029A                     	;# 
   340  029B                     	;# 
   341  029C                     	;# 
   342  029C                     	;# 
   343  029D                     	;# 
   344  029E                     	;# 
   345  029F                     	;# 
   346  0311                     	;# 
   347  0311                     	;# 
   348  0312                     	;# 
   349  0313                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0315                     	;# 
   353  0316                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  031C                     	;# 
   359  031C                     	;# 
   360  031D                     	;# 
   361  031E                     	;# 
   362  0394                     	;# 
   363  0395                     	;# 
   364  0396                     	;# 
   365  0415                     	;# 
   366  0416                     	;# 
   367  0417                     	;# 
   368  041C                     	;# 
   369  041D                     	;# 
   370  041E                     	;# 
   371  0791                     	;# 
   372  0792                     	;# 
   373  0793                     	;# 
   374  0794                     	;# 
   375  0795                     	;# 
   376  0798                     	;# 
   377  0799                     	;# 
   378  07A0                     	;# 
   379  07A1                     	;# 
   380  07A3                     	;# 
   381  07A4                     	;# 
   382  07A6                     	;# 
   383  07A7                     	;# 
   384  07A9                     	;# 
   385  07AA                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  0110                     	;# 
   449  0111                     	;# 
   450  0112                     	;# 
   451  0113                     	;# 
   452  0114                     	;# 
   453  0115                     	;# 
   454  0116                     	;# 
   455  0117                     	;# 
   456  0118                     	;# 
   457  0119                     	;# 
   458  011A                     	;# 
   459  011B                     	;# 
   460  011D                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0191                     	;# 
   464  0191                     	;# 
   465  0192                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0193                     	;# 
   469  0194                     	;# 
   470  0195                     	;# 
   471  0196                     	;# 
   472  0199                     	;# 
   473  019A                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019C                     	;# 
   479  019C                     	;# 
   480  019D                     	;# 
   481  019E                     	;# 
   482  019F                     	;# 
   483  020D                     	;# 
   484  0210                     	;# 
   485  0211                     	;# 
   486  0212                     	;# 
   487  0213                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0216                     	;# 
   492  0217                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  029B                     	;# 
   506  029C                     	;# 
   507  029C                     	;# 
   508  029D                     	;# 
   509  029E                     	;# 
   510  029F                     	;# 
   511  0311                     	;# 
   512  0311                     	;# 
   513  0312                     	;# 
   514  0313                     	;# 
   515  0314                     	;# 
   516  0315                     	;# 
   517  0315                     	;# 
   518  0316                     	;# 
   519  0318                     	;# 
   520  0318                     	;# 
   521  0319                     	;# 
   522  031A                     	;# 
   523  031C                     	;# 
   524  031C                     	;# 
   525  031D                     	;# 
   526  031E                     	;# 
   527  0394                     	;# 
   528  0395                     	;# 
   529  0396                     	;# 
   530  0415                     	;# 
   531  0416                     	;# 
   532  0417                     	;# 
   533  041C                     	;# 
   534  041D                     	;# 
   535  041E                     	;# 
   536  0791                     	;# 
   537  0792                     	;# 
   538  0793                     	;# 
   539  0794                     	;# 
   540  0795                     	;# 
   541  0798                     	;# 
   542  0799                     	;# 
   543  07A0                     	;# 
   544  07A1                     	;# 
   545  07A3                     	;# 
   546  07A4                     	;# 
   547  07A6                     	;# 
   548  07A7                     	;# 
   549  07A9                     	;# 
   550  07AA                     	;# 
   551  0FE4                     	;# 
   552  0FE5                     	;# 
   553  0FE6                     	;# 
   554  0FE7                     	;# 
   555  0FE8                     	;# 
   556  0FE9                     	;# 
   557  0FEA                     	;# 
   558  0FEB                     	;# 
   559  0FED                     	;# 
   560  0FEE                     	;# 
   561  0FEF                     	;# 
   562                           
   563                           	psect	idataBANK0
   564  056B                     __pidataBANK0:	
   565                           
   566                           ;initializer for _slave_different_flag
   567  056B  3402               	retlw	2
   568                           
   569                           ;initializer for _Receive_flag
   570  056C  3401               	retlw	1
   571  000B                     _INTCONbits	set	11
   572  0011                     _PIR1bits	set	17
   573  0091                     _PIE1bits	set	145
   574  008D                     _TRISBbits	set	141
   575  008C                     _TRISAbits	set	140
   576  008E                     _TRISCbits	set	142
   577  0099                     _OSCCON	set	153
   578  010C                     _LATAbits	set	268
   579  010D                     _LATBbits	set	269
   580  010E                     _LATCbits	set	270
   581  0199                     _RCREG	set	409
   582  019D                     _RCSTAbits	set	413
   583  019F                     _BAUDCONbits	set	415
   584  019E                     _TXSTAbits	set	414
   585  019B                     _SPBRGL	set	411
   586  019C                     _SPBRGH	set	412
   587  018D                     _ANSELB	set	397
   588  018C                     _ANSELA	set	396
   589                           
   590                           ; #config settings
   591  0000                     
   592                           	psect	cinit
   593  0010                     start_initialization:	
   594  0010                     __initialization:	
   595                           
   596                           ; Initialize objects allocated to BANK0
   597  0010  3185  256B  3180   	fcall	__pidataBANK0	;fetch initializer
   598  0013  00E6               	movwf	__pdataBANK0& (0+127)
   599  0014  3185  256C  3180   	fcall	__pidataBANK0+1	;fetch initializer
   600  0017  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   601                           
   602                           ; Clear objects allocated to BANK0
   603  0018  3020               	movlw	low __pbssBANK0
   604  0019  0084               	movwf	4
   605  001A  3000               	movlw	high __pbssBANK0
   606  001B  0085               	movwf	5
   607  001C  3031               	movlw	49
   608  001D  3185  2561         	fcall	clear_ram0
   609  001F                     end_of_initialization:	
   610                           ;End of C runtime variable initialization code
   611                           
   612  001F                     __end_of__initialization:	
   613  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   614  0020  0020               	movlb	0
   615  0021  3184  2C4F         	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	bssBANK0
   618  0020                     __pbssBANK0:	
   619  0020                     _SeP:	
   620  0020                     	ds	5
   621  0025                     _StP:	
   622  0025                     	ds	4
   623  0029                     _OP:	
   624  0029                     	ds	4
   625  002D                     Initialize_Parameters@i:	
   626  002D                     	ds	2
   627  002F                     _zero:	
   628  002F                     	ds	2
   629  0031                     _address:	
   630  0031                     	ds	2
   631  0033                     _not_of_before_data:	
   632  0033                     	ds	1
   633  0034                     Reception_from_master@Receive_data_count:	
   634  0034                     	ds	1
   635  0035                     _address_status:	
   636  0035                     	ds	1
   637  0036                     _Buffer0:	
   638  0036                     	ds	15
   639  0045                     _RxData0:	
   640  0045                     	ds	12
   641                           
   642                           	psect	dataBANK0
   643  0066                     __pdataBANK0:	
   644  0066                     _slave_different_flag:	
   645  0066                     	ds	1
   646  0067                     _Receive_flag:	
   647  0067                     	ds	1
   648                           
   649                           	psect	clrtext
   650  0561                     clear_ram0:	
   651                           ;	Called with FSR0 containing the base address, and
   652                           ;	WREG with the size to clear
   653                           
   654  0561  0064               	clrwdt	;clear the watchdog before getting into this loop
   655  0562                     clrloop0:	
   656  0562  0180               	clrf	0	;clear RAM location pointed to by FSR
   657  0563  3101               	addfsr 0,1
   658  0564  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   659  0565  2D62               	goto	clrloop0	;have we reached the end yet?
   660  0566  3400               	retlw	0	;all done for this memory range, return
   661                           
   662                           	psect	cstackBANK1
   663  00A0                     __pcstackBANK1:	
   664  00A0                     ?_main:	
   665  00A0                     main@argc:	
   666                           ; 2 bytes @ 0x0
   667                           
   668                           
   669                           ; 2 bytes @ 0x0
   670  00A0                     	ds	2
   671  00A2                     main@argv:	
   672                           
   673                           ; 2 bytes @ 0x2
   674  00A2                     	ds	2
   675                           
   676                           	psect	cstackCOMMON
   677  0070                     __pcstackCOMMON:	
   678  0070                     ?_Initialize:	
   679  0070                     ?_Reception_from_master_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_SetData:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_ChangeAddress:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_ChangeData:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_Reception_from_master:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Oscillator_Initialize:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Pin_Initialize:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_UART_Initialize:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_Initialize_Parameters:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_slave_address_check:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_INTERRUPT_HANDLER:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_EUSART_ERROR_from_master:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ??_EUSART_ERROR_from_master:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     slave_address_check@slave_address:	
   719                           ; 1 bytes @ 0x0
   720                           
   721                           
   722                           ; 1 bytes @ 0x0
   723  0070                     	ds	1
   724  0071                     EUSART_ERROR_from_master@waste_data:	
   725  0071                     slave_address_check@slave_flag:	
   726                           ; 1 bytes @ 0x1
   727                           
   728                           
   729                           ; 1 bytes @ 0x1
   730  0071                     	ds	1
   731  0072                     ?_Store_Datas:	
   732  0072                     ??_slave_address_check:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     Store_Datas@received_data:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 1 bytes @ 0x2
   740  0072                     	ds	1
   741  0073                     Store_Datas@number_of_receive_data:	
   742                           
   743                           ; 2 bytes @ 0x3
   744  0073                     	ds	2
   745  0075                     slave_address_check@data_count:	
   746  0075                     Store_Datas@bus_number:	
   747                           ; 1 bytes @ 0x5
   748                           
   749                           
   750                           ; 2 bytes @ 0x5
   751  0075                     	ds	1
   752  0076                     slave_address_check@sample_data:	
   753                           
   754                           ; 1 bytes @ 0x6
   755  0076                     	ds	1
   756  0077                     Store_Datas@EUSART_ERROR:	
   757                           
   758                           ; 2 bytes @ 0x7
   759  0077                     	ds	2
   760  0079                     Store_Datas@Buffer:	
   761                           
   762                           ; 1 bytes @ 0x9
   763  0079                     	ds	1
   764  007A                     ??_Reception_from_master:	
   765                           
   766                           ; 1 bytes @ 0xA
   767  007A                     	ds	3
   768  007D                     ??_INTERRUPT_HANDLER:	
   769                           
   770                           	psect	cstackBANK0
   771  0051                     __pcstackBANK0:	
   772                           ; 1 bytes @ 0xD
   773                           
   774  0051                     ??_Store_Datas:	
   775                           
   776                           ; 1 bytes @ 0x0
   777  0051                     	ds	6
   778  0057                     Reception_from_master@slave_address:	
   779                           
   780                           ; 1 bytes @ 0x6
   781  0057                     	ds	1
   782  0058                     Reception_from_master@error_complete:	
   783                           
   784                           ; 1 bytes @ 0x7
   785  0058                     	ds	1
   786  0059                     ?_Organize_Datas:	
   787  0059                     ?_Write_Address:	
   788                           ; 1 bytes @ 0x8
   789                           
   790  0059                     ?_Write_data:	
   791                           ; 1 bytes @ 0x8
   792                           
   793  0059                     ??_Oscillator_Initialize:	
   794                           ; 1 bytes @ 0x8
   795                           
   796  0059                     ??_Pin_Initialize:	
   797                           ; 1 bytes @ 0x8
   798                           
   799  0059                     ??_UART_Initialize:	
   800                           ; 1 bytes @ 0x8
   801                           
   802  0059                     ?___bmul:	
   803                           ; 1 bytes @ 0x8
   804                           
   805  0059                     Organize_Datas@Buffer:	
   806                           ; 1 bytes @ 0x8
   807                           
   808  0059                     ___bmul@multiplicand:	
   809                           ; 1 bytes @ 0x8
   810                           
   811  0059                     Write_Address@address:	
   812                           ; 1 bytes @ 0x8
   813                           
   814  0059                     Write_data@servo_data:	
   815                           ; 2 bytes @ 0x8
   816                           
   817                           
   818                           ; 2 bytes @ 0x8
   819  0059                     	ds	1
   820  005A                     ??___bmul:	
   821  005A                     Organize_Datas@number_of_data:	
   822                           ; 1 bytes @ 0x9
   823                           
   824                           
   825                           ; 2 bytes @ 0x9
   826  005A                     	ds	1
   827  005B                     ??_ChangeAddress:	
   828  005B                     ??_ChangeData:	
   829                           ; 1 bytes @ 0xA
   830                           
   831  005B                     ??_Write_Address:	
   832                           ; 1 bytes @ 0xA
   833                           
   834  005B                     ??_Write_data:	
   835                           ; 1 bytes @ 0xA
   836                           
   837  005B                     ___bmul@product:	
   838                           ; 1 bytes @ 0xA
   839                           
   840                           
   841                           ; 1 bytes @ 0xA
   842  005B                     	ds	1
   843  005C                     ___bmul@multiplier:	
   844  005C                     ChangeAddress@None:	
   845                           ; 1 bytes @ 0xB
   846                           
   847  005C                     Organize_Datas@bus_number:	
   848                           ; 2 bytes @ 0xB
   849                           
   850                           
   851                           ; 2 bytes @ 0xB
   852  005C                     	ds	1
   853  005D                     ??_Initialize_Parameters:	
   854                           
   855                           ; 1 bytes @ 0xC
   856  005D                     	ds	1
   857  005E                     ??_Initialize:	
   858  005E                     ??_Organize_Datas:	
   859                           ; 1 bytes @ 0xD
   860                           
   861  005E                     ??_SetData:	
   862                           ; 1 bytes @ 0xD
   863                           
   864                           
   865                           ; 1 bytes @ 0xD
   866  005E                     	ds	5
   867  0063                     Organize_Datas@RxData:	
   868                           
   869                           ; 1 bytes @ 0x12
   870  0063                     	ds	1
   871  0064                     ??_Reception_from_master_main:	
   872                           
   873                           ; 1 bytes @ 0x13
   874  0064                     	ds	1
   875  0065                     ??_main:	
   876                           
   877                           ; 1 bytes @ 0x14
   878  0065                     	ds	1
   879                           
   880                           	psect	maintext
   881  044F                     __pmaintext:	
   882 ;;
   883 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   884 ;;
   885 ;; *************** function _main *****************
   886 ;; Defined at:
   887 ;;		line 112 in file "main.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  argc            2    0[BANK1 ] int 
   890 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
   891 ;; Auto vars:     Size  Location     Type
   892 ;;		None
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2    0[BANK1 ] int 
   895 ;; Registers used:
   896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : B1F/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   902 ;;      Params:         0       0       4       0
   903 ;;      Locals:         0       0       0       0
   904 ;;      Temps:          0       1       0       0
   905 ;;      Totals:         0       1       4       0
   906 ;;Total ram usage:        5 bytes
   907 ;; Hardware stack levels required when called:    7
   908 ;; This function calls:
   909 ;;		_Initialize
   910 ;;		_Organize_Datas
   911 ;;		_Reception_from_master_main
   912 ;;		_SetData
   913 ;; This function is called by:
   914 ;;		Startup code after reset
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           
   919                           ;psect for function _main
   920  044F                     _main:	
   921                           
   922                           ;main.c: 113: Initialize();
   923                           
   924                           ;incstack = 0
   925                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   926  044F  3185  2509  3184   	fcall	_Initialize
   927  0452                     l1459:	
   928                           ;main.c: 116: while (Receive_flag != 0);
   929                           
   930  0452  0020               	movlb	0	; select bank0
   931  0453  0867               	movf	_Receive_flag,w
   932  0454  1D03               	btfss	3,2
   933  0455  2C52               	goto	l1459
   934                           
   935                           ;main.c: 117: Organize_Datas(RxData0, Buffer0, 6, 0);
   936  0456  3036               	movlw	(low (_Buffer0| 0))& (0+255)
   937  0457  00E5               	movwf	??_main
   938  0458  0865               	movf	??_main,w
   939  0459  00D9               	movwf	Organize_Datas@Buffer
   940  045A  3006               	movlw	6
   941  045B  00DA               	movwf	Organize_Datas@number_of_data
   942  045C  3000               	movlw	0
   943  045D  00DB               	movwf	Organize_Datas@number_of_data+1
   944  045E  3000               	movlw	0
   945  045F  00DC               	movwf	Organize_Datas@bus_number
   946  0460  00DD               	movwf	Organize_Datas@bus_number+1
   947  0461  3045               	movlw	(low (_RxData0| 0))& (0+255)
   948  0462  3181  21AF  3184   	fcall	_Organize_Datas
   949                           
   950                           ;main.c: 118: Receive_flag = 1;
   951  0465  0020               	movlb	0	; select bank0
   952  0466  01E7               	clrf	_Receive_flag
   953  0467  0AE7               	incf	_Receive_flag,f
   954  0468                     l1465:	
   955                           ;main.c: 121: while (1) {
   956                           
   957                           
   958                           ;main.c: 122: if (Receive_flag == 0) {
   959  0468  0020               	movlb	0	; select bank0
   960  0469  0867               	movf	_Receive_flag,w
   961  046A  1D03               	btfss	3,2
   962  046B  2C68               	goto	l1465
   963                           
   964                           ;main.c: 123: Reception_from_master_main();
   965  046C  3184  24BA  3184   	fcall	_Reception_from_master_main
   966                           
   967                           ;main.c: 124: SetData();
   968  046F  3184  24F3  3184   	fcall	_SetData
   969  0472  2C68               	goto	l1465
   970  0473                     __end_of_main:	
   971                           ;main.c: 126: };main.c: 127: };main.c: 129: return (0);;	Return value of _main is never 
      +                          used
   972                           
   973                           
   974                           	psect	text1
   975  04F3                     __ptext1:	
   976 ;; *************** function _SetData *****************
   977 ;; Defined at:
   978 ;;		line 132 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   992 ;;      Params:         0       0       0       0
   993 ;;      Locals:         0       0       0       0
   994 ;;      Temps:          0       1       0       0
   995 ;;      Totals:         0       1       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    6
   999 ;; This function calls:
  1000 ;;		_ChangeAddress
  1001 ;;		_ChangeData
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _SetData
  1009  04F3                     _SetData:	
  1010                           
  1011                           ;main.c: 133: LATCbits.LATC4^=1;
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _SetData: [wreg+status,2+status,0+pclath+cstack]
  1015  04F3  0022               	movlb	2	; select bank2
  1016  04F4  0E0E               	swapf	14,w	;volatile
  1017  04F5  3901               	andlw	1
  1018  04F6  0020               	movlb	0	; select bank0
  1019  04F7  00DE               	movwf	??_SetData
  1020  04F8  3001               	movlw	1
  1021  04F9  06DE               	xorwf	??_SetData,f
  1022  04FA  0EDE               	swapf	??_SetData,f
  1023  04FB  0022               	movlb	2	; select bank2
  1024  04FC  080E               	movf	14,w	;volatile
  1025  04FD  0020               	movlb	0	; select bank0
  1026  04FE  065E               	xorwf	??_SetData,w
  1027  04FF  39EF               	andlw	-17
  1028  0500  065E               	xorwf	??_SetData,w
  1029  0501  0022               	movlb	2	; select bank2
  1030  0502  008E               	movwf	14	;volatile
  1031                           
  1032                           ;main.c: 135: ChangeAddress();
  1033  0503  3184  2497  3184   	fcall	_ChangeAddress
  1034                           
  1035                           ;main.c: 136: ChangeData();
  1036  0506  3183  236C         	fcall	_ChangeData
  1037  0508  0008               	return
  1038  0509                     __end_of_SetData:	
  1039                           
  1040                           	psect	text2
  1041  036C                     __ptext2:	
  1042 ;; *************** function _ChangeData *****************
  1043 ;; Defined at:
  1044 ;;		line 179 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1058 ;;      Params:         0       0       0       0
  1059 ;;      Locals:         0       0       0       0
  1060 ;;      Temps:          0       0       0       0
  1061 ;;      Totals:         0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    5
  1065 ;; This function calls:
  1066 ;;		_Write_data
  1067 ;; This function is called by:
  1068 ;;		_SetData
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _ChangeData
  1074  036C                     _ChangeData:	
  1075                           
  1076                           ;main.c: 182: if (address.all_data == 1) {
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _ChangeData: [wreg+status,2+status,0+pclath+cstack]
  1080  036C  0020               	movlb	0	; select bank0
  1081  036D  0331               	decf	_address,w
  1082  036E  1D03               	btfss	3,2
  1083  036F  2B82               	goto	l1185
  1084                           
  1085                           ;main.c: 183: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1086  0370  084F               	movf	_RxData0+10,w
  1087  0371  1D03               	btfss	3,2
  1088  0372  2B7A               	goto	l1183
  1089  0373  0830               	movf	_zero+1,w
  1090  0374  00DA               	movwf	Write_data@servo_data+1
  1091  0375  082F               	movf	_zero,w
  1092  0376  00D9               	movwf	Write_data@servo_data
  1093  0377  3184  240E         	fcall	_Write_data
  1094  0379  0008               	return
  1095  037A                     l1183:	
  1096                           
  1097                           ;main.c: 184: else Write_data(RxData0[1]);
  1098  037A  0020               	movlb	0	; select bank0
  1099  037B  0848               	movf	_RxData0+3,w
  1100  037C  00DA               	movwf	Write_data@servo_data+1
  1101  037D  0847               	movf	_RxData0+2,w
  1102  037E  00D9               	movwf	Write_data@servo_data
  1103  037F  3184  240E         	fcall	_Write_data
  1104                           
  1105                           ;main.c: 185: } else if (address.all_data == 2) {
  1106  0381  0008               	return
  1107  0382                     l1185:	
  1108  0382  3002               	movlw	2
  1109  0383  0020               	movlb	0	; select bank0
  1110  0384  0631               	xorwf	_address,w
  1111  0385  1D03               	btfss	3,2
  1112  0386  2B99               	goto	l1193
  1113                           
  1114                           ;main.c: 186: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1115  0387  084F               	movf	_RxData0+10,w
  1116  0388  1D03               	btfss	3,2
  1117  0389  2B91               	goto	l1191
  1118  038A  0830               	movf	_zero+1,w
  1119  038B  00DA               	movwf	Write_data@servo_data+1
  1120  038C  082F               	movf	_zero,w
  1121  038D  00D9               	movwf	Write_data@servo_data
  1122  038E  3184  240E         	fcall	_Write_data
  1123  0390  0008               	return
  1124  0391                     l1191:	
  1125                           
  1126                           ;main.c: 187: else Write_data(RxData0[2]);
  1127  0391  0020               	movlb	0	; select bank0
  1128  0392  084A               	movf	_RxData0+5,w
  1129  0393  00DA               	movwf	Write_data@servo_data+1
  1130  0394  0849               	movf	_RxData0+4,w
  1131  0395  00D9               	movwf	Write_data@servo_data
  1132  0396  3184  240E         	fcall	_Write_data
  1133                           
  1134                           ;main.c: 188: } else if (address.all_data == 3) {
  1135  0398  0008               	return
  1136  0399                     l1193:	
  1137  0399  3003               	movlw	3
  1138  039A  0020               	movlb	0	; select bank0
  1139  039B  0631               	xorwf	_address,w
  1140  039C  1D03               	btfss	3,2
  1141  039D  2BB0               	goto	l1201
  1142                           
  1143                           ;main.c: 189: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1144  039E  084F               	movf	_RxData0+10,w
  1145  039F  1D03               	btfss	3,2
  1146  03A0  2BA8               	goto	l1199
  1147  03A1  0830               	movf	_zero+1,w
  1148  03A2  00DA               	movwf	Write_data@servo_data+1
  1149  03A3  082F               	movf	_zero,w
  1150  03A4  00D9               	movwf	Write_data@servo_data
  1151  03A5  3184  240E         	fcall	_Write_data
  1152  03A7  0008               	return
  1153  03A8                     l1199:	
  1154                           
  1155                           ;main.c: 190: else Write_data(RxData0[3]);
  1156  03A8  0020               	movlb	0	; select bank0
  1157  03A9  084C               	movf	_RxData0+7,w
  1158  03AA  00DA               	movwf	Write_data@servo_data+1
  1159  03AB  084B               	movf	_RxData0+6,w
  1160  03AC  00D9               	movwf	Write_data@servo_data
  1161  03AD  3184  240E         	fcall	_Write_data
  1162                           
  1163                           ;main.c: 191: } else if (address.all_data == 4) {
  1164  03AF  0008               	return
  1165  03B0                     l1201:	
  1166  03B0  3004               	movlw	4
  1167  03B1  0020               	movlb	0	; select bank0
  1168  03B2  0631               	xorwf	_address,w
  1169  03B3  1D03               	btfss	3,2
  1170  03B4  0008               	return
  1171                           
  1172                           ;main.c: 192: if (RxData0[5].all_data == 0x0)Write_data(zero);
  1173  03B5  084F               	movf	_RxData0+10,w
  1174  03B6  1D03               	btfss	3,2
  1175  03B7  2BBF               	goto	l1207
  1176  03B8  0830               	movf	_zero+1,w
  1177  03B9  00DA               	movwf	Write_data@servo_data+1
  1178  03BA  082F               	movf	_zero,w
  1179  03BB  00D9               	movwf	Write_data@servo_data
  1180  03BC  3184  240E         	fcall	_Write_data
  1181  03BE  0008               	return
  1182  03BF                     l1207:	
  1183                           
  1184                           ;main.c: 193: else Write_data(RxData0[4]);
  1185  03BF  0020               	movlb	0	; select bank0
  1186  03C0  084E               	movf	_RxData0+9,w
  1187  03C1  00DA               	movwf	Write_data@servo_data+1
  1188  03C2  084D               	movf	_RxData0+8,w
  1189  03C3  00D9               	movwf	Write_data@servo_data
  1190  03C4  3184  240E         	fcall	_Write_data
  1191                           
  1192                           ;main.c: 194: } else;
  1193  03C6  0008               	return
  1194  03C7                     __end_of_ChangeData:	
  1195                           
  1196                           	psect	text3
  1197  040E                     __ptext3:	
  1198 ;; *************** function _Write_data *****************
  1199 ;; Defined at:
  1200 ;;		line 198 in file "main.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  servo_data      2    8[BANK0 ] struct .
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		None
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1214 ;;      Params:         0       2       0       0
  1215 ;;      Locals:         0       0       0       0
  1216 ;;      Temps:          0       0       0       0
  1217 ;;      Totals:         0       2       0       0
  1218 ;;Total ram usage:        2 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    4
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_ChangeData
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _Write_data
  1230  040E                     _Write_data:	
  1231                           
  1232                           ;main.c: 200: LATAbits.LATA0 = servo_data.data0;
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _Write_data: []
  1236  040E  0020               	movlb	0	; select bank0
  1237  040F  1C59               	btfss	Write_data@servo_data,0
  1238  0410  2C14               	goto	u1150
  1239  0411  0022               	movlb	2	; select bank2
  1240  0412  140C               	bsf	12,0	;volatile
  1241  0413  2C16               	goto	u1164
  1242  0414                     u1150:	
  1243  0414  0022               	movlb	2	; select bank2
  1244  0415  100C               	bcf	12,0	;volatile
  1245  0416                     u1164:	
  1246                           
  1247                           ;main.c: 201: LATAbits.LATA1 = servo_data.data1;
  1248  0416  0020               	movlb	0	; select bank0
  1249  0417  1CD9               	btfss	Write_data@servo_data,1
  1250  0418  2C1C               	goto	u1170
  1251  0419  0022               	movlb	2	; select bank2
  1252  041A  148C               	bsf	12,1	;volatile
  1253  041B  2C1E               	goto	u1184
  1254  041C                     u1170:	
  1255  041C  0022               	movlb	2	; select bank2
  1256  041D  108C               	bcf	12,1	;volatile
  1257  041E                     u1184:	
  1258                           
  1259                           ;main.c: 202: LATAbits.LATA2 = servo_data.data2;
  1260  041E  0020               	movlb	0	; select bank0
  1261  041F  1D59               	btfss	Write_data@servo_data,2
  1262  0420  2C24               	goto	u1190
  1263  0421  0022               	movlb	2	; select bank2
  1264  0422  150C               	bsf	12,2	;volatile
  1265  0423  2C26               	goto	u1204
  1266  0424                     u1190:	
  1267  0424  0022               	movlb	2	; select bank2
  1268  0425  110C               	bcf	12,2	;volatile
  1269  0426                     u1204:	
  1270                           
  1271                           ;main.c: 203: LATAbits.LATA3 = servo_data.data3;
  1272  0426  0020               	movlb	0	; select bank0
  1273  0427  1DD9               	btfss	Write_data@servo_data,3
  1274  0428  2C2C               	goto	u1210
  1275  0429  0022               	movlb	2	; select bank2
  1276  042A  158C               	bsf	12,3	;volatile
  1277  042B  2C2E               	goto	u1224
  1278  042C                     u1210:	
  1279  042C  0022               	movlb	2	; select bank2
  1280  042D  118C               	bcf	12,3	;volatile
  1281  042E                     u1224:	
  1282                           
  1283                           ;main.c: 204: LATBbits.LATB5 = servo_data.data4;
  1284  042E  0020               	movlb	0	; select bank0
  1285  042F  1E59               	btfss	Write_data@servo_data,4
  1286  0430  2C34               	goto	u1230
  1287  0431  0022               	movlb	2	; select bank2
  1288  0432  168D               	bsf	13,5	;volatile
  1289  0433  2C36               	goto	u1244
  1290  0434                     u1230:	
  1291  0434  0022               	movlb	2	; select bank2
  1292  0435  128D               	bcf	13,5	;volatile
  1293  0436                     u1244:	
  1294                           
  1295                           ;main.c: 205: LATBbits.LATB4 = servo_data.data5;
  1296  0436  0020               	movlb	0	; select bank0
  1297  0437  1ED9               	btfss	Write_data@servo_data,5
  1298  0438  2C3C               	goto	u1250
  1299  0439  0022               	movlb	2	; select bank2
  1300  043A  160D               	bsf	13,4	;volatile
  1301  043B  2C3E               	goto	u1264
  1302  043C                     u1250:	
  1303  043C  0022               	movlb	2	; select bank2
  1304  043D  120D               	bcf	13,4	;volatile
  1305  043E                     u1264:	
  1306                           
  1307                           ;main.c: 206: LATBbits.LATB2 = servo_data.data6;
  1308  043E  0020               	movlb	0	; select bank0
  1309  043F  1F59               	btfss	Write_data@servo_data,6
  1310  0440  2C44               	goto	u1270
  1311  0441  0022               	movlb	2	; select bank2
  1312  0442  150D               	bsf	13,2	;volatile
  1313  0443  2C46               	goto	u1284
  1314  0444                     u1270:	
  1315  0444  0022               	movlb	2	; select bank2
  1316  0445  110D               	bcf	13,2	;volatile
  1317  0446                     u1284:	
  1318                           
  1319                           ;main.c: 207: LATBbits.LATB3 = servo_data.data7;
  1320  0446  0020               	movlb	0	; select bank0
  1321  0447  1FD9               	btfss	Write_data@servo_data,7
  1322  0448  2C4C               	goto	u1290
  1323  0449  0022               	movlb	2	; select bank2
  1324  044A  158D               	bsf	13,3	;volatile
  1325  044B  0008               	return
  1326  044C                     u1290:	
  1327  044C  0022               	movlb	2	; select bank2
  1328  044D  118D               	bcf	13,3	;volatile
  1329  044E  0008               	return
  1330  044F                     __end_of_Write_data:	
  1331                           
  1332                           	psect	text4
  1333  0497                     __ptext4:	
  1334 ;; *************** function _ChangeAddress *****************
  1335 ;; Defined at:
  1336 ;;		line 139 in file "main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  None            2   11[BANK0 ] struct .
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, pclath, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1350 ;;      Params:         0       0       0       0
  1351 ;;      Locals:         0       2       0       0
  1352 ;;      Temps:          0       1       0       0
  1353 ;;      Totals:         0       3       0       0
  1354 ;;Total ram usage:        3 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    5
  1357 ;; This function calls:
  1358 ;;		_Write_Address
  1359 ;; This function is called by:
  1360 ;;		_SetData
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _ChangeAddress
  1366  0497                     _ChangeAddress:	
  1367                           
  1368                           ;main.c: 140: Processed None;;main.c: 141: None.all_data = 0b000;
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _ChangeAddress: [wreg+status,2+status,0+pclath+cstack]
  1372  0497  0020               	movlb	0	; select bank0
  1373  0498  01DC               	clrf	ChangeAddress@None
  1374                           
  1375                           ;main.c: 145: if (address_status == 0b000) {
  1376  0499  0835               	movf	_address_status,w
  1377  049A  1D03               	btfss	3,2
  1378  049B  2CA6               	goto	l1167
  1379                           
  1380                           ;main.c: 148: Write_Address(address);
  1381  049C  0832               	movf	_address+1,w
  1382  049D  00DA               	movwf	Write_Address@address+1
  1383  049E  0831               	movf	_address,w
  1384  049F  00D9               	movwf	Write_Address@address
  1385  04A0  3184  24DA         	fcall	_Write_Address
  1386                           
  1387                           ;main.c: 151: address_status = 1;
  1388  04A2  0020               	movlb	0	; select bank0
  1389  04A3  01B5               	clrf	_address_status
  1390  04A4  0AB5               	incf	_address_status,f
  1391                           
  1392                           ;main.c: 153: } else {
  1393  04A5  0008               	return
  1394  04A6                     l1167:	
  1395                           
  1396                           ;main.c: 156: Write_Address(None);
  1397  04A6  085D               	movf	ChangeAddress@None+1,w
  1398  04A7  00DA               	movwf	Write_Address@address+1
  1399  04A8  085C               	movf	ChangeAddress@None,w
  1400  04A9  00D9               	movwf	Write_Address@address
  1401  04AA  3184  24DA  3184   	fcall	_Write_Address
  1402                           
  1403                           ;main.c: 159: address_status = 0b000;
  1404  04AD  0020               	movlb	0	; select bank0
  1405  04AE  01B5               	clrf	_address_status
  1406                           
  1407                           ;main.c: 162: address.all_data++;
  1408  04AF  3001               	movlw	1
  1409  04B0  00DB               	movwf	??_ChangeAddress
  1410  04B1  085B               	movf	??_ChangeAddress,w
  1411  04B2  07B1               	addwf	_address,f
  1412                           
  1413                           ;main.c: 165: if (address.all_data >= 0b101) {
  1414  04B3  3005               	movlw	5
  1415  04B4  0231               	subwf	_address,w
  1416  04B5  1C03               	skipc
  1417  04B6  0008               	return
  1418                           
  1419                           ;main.c: 166: address.all_data = 0b001;
  1420  04B7  01B1               	clrf	_address
  1421  04B8  0AB1               	incf	_address,f
  1422  04B9  0008               	return
  1423  04BA                     __end_of_ChangeAddress:	
  1424                           
  1425                           	psect	text5
  1426  04DA                     __ptext5:	
  1427 ;; *************** function _Write_Address *****************
  1428 ;; Defined at:
  1429 ;;		line 173 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  address         2    8[BANK0 ] struct .
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		None
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1443 ;;      Params:         0       2       0       0
  1444 ;;      Locals:         0       0       0       0
  1445 ;;      Temps:          0       0       0       0
  1446 ;;      Totals:         0       2       0       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    4
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_ChangeAddress
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _Write_Address
  1459  04DA                     _Write_Address:	
  1460                           
  1461                           ;main.c: 174: LATBbits.LATB1 = address.data0;
  1462                           
  1463                           ;incstack = 0
  1464                           ; Regs used in _Write_Address: []
  1465  04DA  0020               	movlb	0	; select bank0
  1466  04DB  1C59               	btfss	Write_Address@address,0
  1467  04DC  2CE0               	goto	u1090
  1468  04DD  0022               	movlb	2	; select bank2
  1469  04DE  148D               	bsf	13,1	;volatile
  1470  04DF  2CE2               	goto	u1104
  1471  04E0                     u1090:	
  1472  04E0  0022               	movlb	2	; select bank2
  1473  04E1  108D               	bcf	13,1	;volatile
  1474  04E2                     u1104:	
  1475                           
  1476                           ;main.c: 175: LATBbits.LATB0 = address.data1;
  1477  04E2  0020               	movlb	0	; select bank0
  1478  04E3  1CD9               	btfss	Write_Address@address,1
  1479  04E4  2CE8               	goto	u1110
  1480  04E5  0022               	movlb	2	; select bank2
  1481  04E6  140D               	bsf	13,0	;volatile
  1482  04E7  2CEA               	goto	u1124
  1483  04E8                     u1110:	
  1484  04E8  0022               	movlb	2	; select bank2
  1485  04E9  100D               	bcf	13,0	;volatile
  1486  04EA                     u1124:	
  1487                           
  1488                           ;main.c: 176: LATCbits.LATC5 = address.data2;
  1489  04EA  0020               	movlb	0	; select bank0
  1490  04EB  1D59               	btfss	Write_Address@address,2
  1491  04EC  2CF0               	goto	u1130
  1492  04ED  0022               	movlb	2	; select bank2
  1493  04EE  168E               	bsf	14,5	;volatile
  1494  04EF  0008               	return
  1495  04F0                     u1130:	
  1496  04F0  0022               	movlb	2	; select bank2
  1497  04F1  128E               	bcf	14,5	;volatile
  1498  04F2  0008               	return
  1499  04F3                     __end_of_Write_Address:	
  1500                           
  1501                           	psect	text6
  1502  04BA                     __ptext6:	
  1503 ;; *************** function _Reception_from_master_main *****************
  1504 ;; Defined at:
  1505 ;;		line 90 in file "communication.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1519 ;;      Params:         0       0       0       0
  1520 ;;      Locals:         0       0       0       0
  1521 ;;      Temps:          0       1       0       0
  1522 ;;      Totals:         0       1       0       0
  1523 ;;Total ram usage:        1 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    5
  1526 ;; This function calls:
  1527 ;;		_Organize_Datas
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _Reception_from_master_main
  1535  04BA                     _Reception_from_master_main:	
  1536                           
  1537                           ;communication.c: 91: if (Receive_flag == 0) {
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _Reception_from_master_main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  1541  04BA  0020               	movlb	0	; select bank0
  1542  04BB  0867               	movf	_Receive_flag,w
  1543  04BC  1D03               	btfss	3,2
  1544  04BD  0008               	return
  1545                           
  1546                           ;communication.c: 93: if (slave_different_flag == 1) {
  1547  04BE  0366               	decf	_slave_different_flag,w
  1548  04BF  1D03               	btfss	3,2
  1549  04C0  2CD3               	goto	l1383
  1550                           
  1551                           ;communication.c: 94: Organize_Datas(RxData0, Buffer0, 6, 0);
  1552  04C1  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  1553  04C2  00E4               	movwf	??_Reception_from_master_main
  1554  04C3  0864               	movf	??_Reception_from_master_main,w
  1555  04C4  00D9               	movwf	Organize_Datas@Buffer
  1556  04C5  3006               	movlw	6
  1557  04C6  00DA               	movwf	Organize_Datas@number_of_data
  1558  04C7  3000               	movlw	0
  1559  04C8  00DB               	movwf	Organize_Datas@number_of_data+1
  1560  04C9  3000               	movlw	0
  1561  04CA  00DC               	movwf	Organize_Datas@bus_number
  1562  04CB  00DD               	movwf	Organize_Datas@bus_number+1
  1563  04CC  3045               	movlw	(low (_RxData0| 0))& (0+255)
  1564  04CD  3181  21AF  3184   	fcall	_Organize_Datas
  1565                           
  1566                           ;communication.c: 95: slave_different_flag = 2;
  1567  04D0  3002               	movlw	2
  1568  04D1  0020               	movlb	0	; select bank0
  1569  04D2  2CD4               	goto	L1
  1570  04D3                     l1383:	
  1571                           ;communication.c: 96: } else {
  1572                           
  1573                           
  1574                           ;communication.c: 97: slave_different_flag = 2;
  1575  04D3  3002               	movlw	2
  1576  04D4                     L1:	
  1577  04D4  00E4               	movwf	??_Reception_from_master_main
  1578  04D5  0864               	movf	??_Reception_from_master_main,w
  1579  04D6  00E6               	movwf	_slave_different_flag
  1580                           
  1581                           ;communication.c: 98: };communication.c: 99: Receive_flag = 1;
  1582  04D7  01E7               	clrf	_Receive_flag
  1583  04D8  0AE7               	incf	_Receive_flag,f
  1584                           
  1585                           ;communication.c: 100: } else;
  1586  04D9  0008               	return
  1587  04DA                     __end_of_Reception_from_master_main:	
  1588                           
  1589                           	psect	text7
  1590  01AF                     __ptext7:	
  1591 ;; *************** function _Organize_Datas *****************
  1592 ;; Defined at:
  1593 ;;		line 20 in file "Controller_Protocol.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  RxData          1    wreg     PTR struct .
  1596 ;;		 -> RxData0(12), 
  1597 ;;  Buffer          1    8[BANK0 ] PTR struct .
  1598 ;;		 -> Buffer0(15), 
  1599 ;;  number_of_da    2    9[BANK0 ] int 
  1600 ;;  bus_number      2   11[BANK0 ] int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  RxData          1   18[BANK0 ] PTR struct .
  1603 ;;		 -> RxData0(12), 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1613 ;;      Params:         0       5       0       0
  1614 ;;      Locals:         0       1       0       0
  1615 ;;      Temps:          0       5       0       0
  1616 ;;      Totals:         0      11       0       0
  1617 ;;Total ram usage:       11 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    4
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;;		_Reception_from_master_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _Organize_Datas
  1630  01AF                     _Organize_Datas:	
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _Organize_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  1634                           ;Organize_Datas@RxData stored from wreg
  1635  01AF  0020               	movlb	0	; select bank0
  1636  01B0  00E3               	movwf	Organize_Datas@RxData
  1637                           
  1638                           ;Controller_Protocol.c: 22: OP[bus_number].count = 1;
  1639  01B1  085C               	movf	Organize_Datas@bus_number,w
  1640  01B2  00DE               	movwf	??_Organize_Datas
  1641  01B3  3001               	movlw	1
  1642  01B4                     u1355:	
  1643  01B4  35DE               	lslf	??_Organize_Datas,f
  1644  01B5  3EFF               	addlw	-1
  1645  01B6  1D03               	skipz
  1646  01B7  29B4               	goto	u1355
  1647  01B8  355E               	lslf	??_Organize_Datas,w
  1648  01B9  3E02               	addlw	2
  1649  01BA  3E29               	addlw	(low (_OP| 0))& (0+255)
  1650  01BB  0086               	movwf	6
  1651  01BC  0187               	clrf	7
  1652  01BD  3001               	movlw	1
  1653  01BE  3FC0               	movwi [0]fsr1
  1654  01BF  3000               	movlw	0
  1655  01C0  3FC1               	movwi [1]fsr1
  1656                           
  1657                           ;Controller_Protocol.c: 23: for (OP[bus_number].num = 0; OP[bus_number].num < number_of_
      +                          data; OP[bus_number].num++) {
  1658  01C1  085C               	movf	Organize_Datas@bus_number,w
  1659  01C2  00DE               	movwf	??_Organize_Datas
  1660  01C3  3001               	movlw	1
  1661  01C4                     u1365:	
  1662  01C4  35DE               	lslf	??_Organize_Datas,f
  1663  01C5  3EFF               	addlw	-1
  1664  01C6  1D03               	skipz
  1665  01C7  29C4               	goto	u1365
  1666  01C8  355E               	lslf	??_Organize_Datas,w
  1667  01C9  3E29               	addlw	(low (_OP| 0))& (0+255)
  1668  01CA  0086               	movwf	6
  1669  01CB  0187               	clrf	7
  1670  01CC  3000               	movlw	0
  1671  01CD  3FC0               	movwi [0]fsr1
  1672  01CE  3FC1               	movwi [1]fsr1
  1673  01CF                     l200:	
  1674  01CF  085C               	movf	Organize_Datas@bus_number,w
  1675  01D0  00DE               	movwf	??_Organize_Datas
  1676  01D1  3001               	movlw	1
  1677  01D2                     u1535:	
  1678  01D2  35DE               	lslf	??_Organize_Datas,f
  1679  01D3  3EFF               	addlw	-1
  1680  01D4  1D03               	skipz
  1681  01D5  29D2               	goto	u1535
  1682  01D6  355E               	lslf	??_Organize_Datas,w
  1683  01D7  3E29               	addlw	(low (_OP| 0))& (0+255)
  1684  01D8  0086               	movwf	6
  1685  01D9  0187               	clrf	7
  1686  01DA  3F40               	moviw [0]fsr1
  1687  01DB  00DF               	movwf	??_Organize_Datas+1
  1688  01DC  3F41               	moviw [1]fsr1
  1689  01DD  00E0               	movwf	??_Organize_Datas+2
  1690  01DE  0860               	movf	??_Organize_Datas+2,w
  1691  01DF  3A80               	xorlw	128
  1692  01E0  00E1               	movwf	??_Organize_Datas+3
  1693  01E1  085B               	movf	Organize_Datas@number_of_data+1,w
  1694  01E2  3A80               	xorlw	128
  1695  01E3  0261               	subwf	??_Organize_Datas+3,w
  1696  01E4  1D03               	skipz
  1697  01E5  29E8               	goto	u1545
  1698  01E6  085A               	movf	Organize_Datas@number_of_data,w
  1699  01E7  025F               	subwf	??_Organize_Datas+1,w
  1700  01E8                     u1545:	
  1701  01E8  1803               	btfsc	3,0
  1702  01E9  0008               	return
  1703                           
  1704                           ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number
      +                          ].count].upper_data;
  1705  01EA  0020               	movlb	0	; select bank0
  1706  01EB  085C               	movf	Organize_Datas@bus_number,w
  1707  01EC  00DE               	movwf	??_Organize_Datas
  1708  01ED  3001               	movlw	1
  1709  01EE                     u1375:	
  1710  01EE  35DE               	lslf	??_Organize_Datas,f
  1711  01EF  3EFF               	addlw	-1
  1712  01F0  1D03               	skipz
  1713  01F1  29EE               	goto	u1375
  1714  01F2  355E               	lslf	??_Organize_Datas,w
  1715  01F3  3E02               	addlw	2
  1716  01F4  3E29               	addlw	(low (_OP| 0))& (0+255)
  1717  01F5  0086               	movwf	6
  1718  01F6  0187               	clrf	7
  1719  01F7  0801               	movf	1,w
  1720  01F8  0759               	addwf	Organize_Datas@Buffer,w
  1721  01F9  00DF               	movwf	??_Organize_Datas+1
  1722  01FA  085F               	movf	??_Organize_Datas+1,w
  1723  01FB  0086               	movwf	6
  1724  01FC  0187               	clrf	7
  1725  01FD  0E01               	swapf	1,w
  1726  01FE  390F               	andlw	15
  1727  01FF  00E0               	movwf	??_Organize_Datas+2
  1728  0200  085C               	movf	Organize_Datas@bus_number,w
  1729  0201  00E1               	movwf	??_Organize_Datas+3
  1730  0202  3001               	movlw	1
  1731  0203                     u1385:	
  1732  0203  35E1               	lslf	??_Organize_Datas+3,f
  1733  0204  3EFF               	addlw	-1
  1734  0205  1D03               	skipz
  1735  0206  2A03               	goto	u1385
  1736  0207  3561               	lslf	??_Organize_Datas+3,w
  1737  0208  3E29               	addlw	(low (_OP| 0))& (0+255)
  1738  0209  0086               	movwf	6
  1739  020A  0187               	clrf	7
  1740  020B  3501               	lslf	1,w
  1741  020C  0763               	addwf	Organize_Datas@RxData,w
  1742  020D  00E2               	movwf	??_Organize_Datas+4
  1743  020E  0862               	movf	??_Organize_Datas+4,w
  1744  020F  0086               	movwf	6
  1745  0210  0187               	clrf	7
  1746  0211  0EE0               	swapf	??_Organize_Datas+2,f
  1747  0212  0801               	movf	1,w
  1748  0213  0660               	xorwf	??_Organize_Datas+2,w
  1749  0214  390F               	andlw	-241
  1750  0215  0660               	xorwf	??_Organize_Datas+2,w
  1751  0216  0081               	movwf	1
  1752                           
  1753                           ;Controller_Protocol.c: 25: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number
      +                          ].count + 1].upper_data;
  1754  0217  085C               	movf	Organize_Datas@bus_number,w
  1755  0218  00DE               	movwf	??_Organize_Datas
  1756  0219  3001               	movlw	1
  1757  021A                     u1395:	
  1758  021A  35DE               	lslf	??_Organize_Datas,f
  1759  021B  3EFF               	addlw	-1
  1760  021C  1D03               	skipz
  1761  021D  2A1A               	goto	u1395
  1762  021E  355E               	lslf	??_Organize_Datas,w
  1763  021F  3E02               	addlw	2
  1764  0220  3E29               	addlw	(low (_OP| 0))& (0+255)
  1765  0221  0086               	movwf	6
  1766  0222  0187               	clrf	7
  1767  0223  0801               	movf	1,w
  1768  0224  3E01               	addlw	1
  1769  0225  0759               	addwf	Organize_Datas@Buffer,w
  1770  0226  00DF               	movwf	??_Organize_Datas+1
  1771  0227  085F               	movf	??_Organize_Datas+1,w
  1772  0228  0086               	movwf	6
  1773  0229  0187               	clrf	7
  1774  022A  0E01               	swapf	1,w
  1775  022B  390F               	andlw	15
  1776  022C  00E0               	movwf	??_Organize_Datas+2
  1777  022D  085C               	movf	Organize_Datas@bus_number,w
  1778  022E  00E1               	movwf	??_Organize_Datas+3
  1779  022F  3001               	movlw	1
  1780  0230                     u1405:	
  1781  0230  35E1               	lslf	??_Organize_Datas+3,f
  1782  0231  3EFF               	addlw	-1
  1783  0232  1D03               	skipz
  1784  0233  2A30               	goto	u1405
  1785  0234  3561               	lslf	??_Organize_Datas+3,w
  1786  0235  3E29               	addlw	(low (_OP| 0))& (0+255)
  1787  0236  0086               	movwf	6
  1788  0237  0187               	clrf	7
  1789  0238  3501               	lslf	1,w
  1790  0239  0763               	addwf	Organize_Datas@RxData,w
  1791  023A  00E2               	movwf	??_Organize_Datas+4
  1792  023B  0862               	movf	??_Organize_Datas+4,w
  1793  023C  0086               	movwf	6
  1794  023D  0187               	clrf	7
  1795  023E  0801               	movf	1,w
  1796  023F  0660               	xorwf	??_Organize_Datas+2,w
  1797  0240  39F0               	andlw	-16
  1798  0241  0660               	xorwf	??_Organize_Datas+2,w
  1799  0242  0081               	movwf	1
  1800                           
  1801                           ;Controller_Protocol.c: 26: if ((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus
      +                          _number].count + 1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
  1802  0243  085C               	movf	Organize_Datas@bus_number,w
  1803  0244  00DE               	movwf	??_Organize_Datas
  1804  0245  3001               	movlw	1
  1805  0246                     u1415:	
  1806  0246  35DE               	lslf	??_Organize_Datas,f
  1807  0247  3EFF               	addlw	-1
  1808  0248  1D03               	skipz
  1809  0249  2A46               	goto	u1415
  1810  024A  355E               	lslf	??_Organize_Datas,w
  1811  024B  3E02               	addlw	2
  1812  024C  3E29               	addlw	(low (_OP| 0))& (0+255)
  1813  024D  0086               	movwf	6
  1814  024E  0187               	clrf	7
  1815  024F  0801               	movf	1,w
  1816  0250  0759               	addwf	Organize_Datas@Buffer,w
  1817  0251  00DF               	movwf	??_Organize_Datas+1
  1818  0252  085F               	movf	??_Organize_Datas+1,w
  1819  0253  0086               	movwf	6
  1820  0254  0187               	clrf	7
  1821  0255  0E01               	swapf	1,w
  1822  0256  390F               	andlw	15
  1823  0257  00E0               	movwf	??_Organize_Datas+2
  1824  0258  085C               	movf	Organize_Datas@bus_number,w
  1825  0259  00E1               	movwf	??_Organize_Datas+3
  1826  025A  3001               	movlw	1
  1827  025B                     u1425:	
  1828  025B  35E1               	lslf	??_Organize_Datas+3,f
  1829  025C  3EFF               	addlw	-1
  1830  025D  1D03               	skipz
  1831  025E  2A5B               	goto	u1425
  1832  025F  3561               	lslf	??_Organize_Datas+3,w
  1833  0260  3E02               	addlw	2
  1834  0261  3E29               	addlw	(low (_OP| 0))& (0+255)
  1835  0262  0086               	movwf	6
  1836  0263  0187               	clrf	7
  1837  0264  0801               	movf	1,w
  1838  0265  3E01               	addlw	1
  1839  0266  0759               	addwf	Organize_Datas@Buffer,w
  1840  0267  00E2               	movwf	??_Organize_Datas+4
  1841  0268  0862               	movf	??_Organize_Datas+4,w
  1842  0269  0086               	movwf	6
  1843  026A  0187               	clrf	7
  1844  026B  0801               	movf	1,w
  1845  026C  390F               	andlw	15
  1846  026D  0460               	iorwf	??_Organize_Datas+2,w
  1847  026E  3A0F               	xorlw	15
  1848  026F  1D03               	skipz
  1849  0270  2A84               	goto	l1153
  1850  0271  085C               	movf	Organize_Datas@bus_number,w
  1851  0272  00DE               	movwf	??_Organize_Datas
  1852  0273  3001               	movlw	1
  1853  0274                     u1445:	
  1854  0274  35DE               	lslf	??_Organize_Datas,f
  1855  0275  3EFF               	addlw	-1
  1856  0276  1D03               	skipz
  1857  0277  2A74               	goto	u1445
  1858  0278  355E               	lslf	??_Organize_Datas,w
  1859  0279  3E29               	addlw	(low (_OP| 0))& (0+255)
  1860  027A  0086               	movwf	6
  1861  027B  0187               	clrf	7
  1862  027C  3501               	lslf	1,w
  1863  027D  0763               	addwf	Organize_Datas@RxData,w
  1864  027E  00DF               	movwf	??_Organize_Datas+1
  1865  027F  0A5F               	incf	??_Organize_Datas+1,w
  1866  0280  0086               	movwf	6
  1867  0281  0187               	clrf	7
  1868  0282  1001               	bcf	1,0
  1869  0283  2A96               	goto	l203
  1870  0284                     l1153:	
  1871                           
  1872                           ;Controller_Protocol.c: 27: else RxData[OP[bus_number].num].UD_error = 1;
  1873  0284  085C               	movf	Organize_Datas@bus_number,w
  1874  0285  00DE               	movwf	??_Organize_Datas
  1875  0286  3001               	movlw	1
  1876  0287                     u1455:	
  1877  0287  35DE               	lslf	??_Organize_Datas,f
  1878  0288  3EFF               	addlw	-1
  1879  0289  1D03               	skipz
  1880  028A  2A87               	goto	u1455
  1881  028B  355E               	lslf	??_Organize_Datas,w
  1882  028C  3E29               	addlw	(low (_OP| 0))& (0+255)
  1883  028D  0086               	movwf	6
  1884  028E  0187               	clrf	7
  1885  028F  3501               	lslf	1,w
  1886  0290  0763               	addwf	Organize_Datas@RxData,w
  1887  0291  00DF               	movwf	??_Organize_Datas+1
  1888  0292  0A5F               	incf	??_Organize_Datas+1,w
  1889  0293  0086               	movwf	6
  1890  0294  0187               	clrf	7
  1891  0295  1401               	bsf	1,0
  1892  0296                     l203:	
  1893                           
  1894                           ;Controller_Protocol.c: 28: if ((Buffer[OP[bus_number].count + 1].upper_data | Buffer[OP
      +                          [bus_number].count + 2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
  1895  0296  085C               	movf	Organize_Datas@bus_number,w
  1896  0297  00DE               	movwf	??_Organize_Datas
  1897  0298  3001               	movlw	1
  1898  0299                     u1465:	
  1899  0299  35DE               	lslf	??_Organize_Datas,f
  1900  029A  3EFF               	addlw	-1
  1901  029B  1D03               	skipz
  1902  029C  2A99               	goto	u1465
  1903  029D  355E               	lslf	??_Organize_Datas,w
  1904  029E  3E02               	addlw	2
  1905  029F  3E29               	addlw	(low (_OP| 0))& (0+255)
  1906  02A0  0086               	movwf	6
  1907  02A1  0187               	clrf	7
  1908  02A2  0801               	movf	1,w
  1909  02A3  3E01               	addlw	1
  1910  02A4  0759               	addwf	Organize_Datas@Buffer,w
  1911  02A5  00DF               	movwf	??_Organize_Datas+1
  1912  02A6  085F               	movf	??_Organize_Datas+1,w
  1913  02A7  0086               	movwf	6
  1914  02A8  0187               	clrf	7
  1915  02A9  0E01               	swapf	1,w
  1916  02AA  390F               	andlw	15
  1917  02AB  00E0               	movwf	??_Organize_Datas+2
  1918  02AC  085C               	movf	Organize_Datas@bus_number,w
  1919  02AD  00E1               	movwf	??_Organize_Datas+3
  1920  02AE  3001               	movlw	1
  1921  02AF                     u1475:	
  1922  02AF  35E1               	lslf	??_Organize_Datas+3,f
  1923  02B0  3EFF               	addlw	-1
  1924  02B1  1D03               	skipz
  1925  02B2  2AAF               	goto	u1475
  1926  02B3  3561               	lslf	??_Organize_Datas+3,w
  1927  02B4  3E02               	addlw	2
  1928  02B5  3E29               	addlw	(low (_OP| 0))& (0+255)
  1929  02B6  0086               	movwf	6
  1930  02B7  0187               	clrf	7
  1931  02B8  0801               	movf	1,w
  1932  02B9  3E02               	addlw	2
  1933  02BA  0759               	addwf	Organize_Datas@Buffer,w
  1934  02BB  00E2               	movwf	??_Organize_Datas+4
  1935  02BC  0862               	movf	??_Organize_Datas+4,w
  1936  02BD  0086               	movwf	6
  1937  02BE  0187               	clrf	7
  1938  02BF  0801               	movf	1,w
  1939  02C0  390F               	andlw	15
  1940  02C1  0460               	iorwf	??_Organize_Datas+2,w
  1941  02C2  3A0F               	xorlw	15
  1942  02C3  1D03               	skipz
  1943  02C4  2AD8               	goto	l1157
  1944  02C5  085C               	movf	Organize_Datas@bus_number,w
  1945  02C6  00DE               	movwf	??_Organize_Datas
  1946  02C7  3001               	movlw	1
  1947  02C8                     u1495:	
  1948  02C8  35DE               	lslf	??_Organize_Datas,f
  1949  02C9  3EFF               	addlw	-1
  1950  02CA  1D03               	skipz
  1951  02CB  2AC8               	goto	u1495
  1952  02CC  355E               	lslf	??_Organize_Datas,w
  1953  02CD  3E29               	addlw	(low (_OP| 0))& (0+255)
  1954  02CE  0086               	movwf	6
  1955  02CF  0187               	clrf	7
  1956  02D0  3501               	lslf	1,w
  1957  02D1  0763               	addwf	Organize_Datas@RxData,w
  1958  02D2  00DF               	movwf	??_Organize_Datas+1
  1959  02D3  0A5F               	incf	??_Organize_Datas+1,w
  1960  02D4  0086               	movwf	6
  1961  02D5  0187               	clrf	7
  1962  02D6  1081               	bcf	1,1
  1963  02D7  2AEA               	goto	l205
  1964  02D8                     l1157:	
  1965                           
  1966                           ;Controller_Protocol.c: 29: else RxData[OP[bus_number].num].LD_error = 1;
  1967  02D8  085C               	movf	Organize_Datas@bus_number,w
  1968  02D9  00DE               	movwf	??_Organize_Datas
  1969  02DA  3001               	movlw	1
  1970  02DB                     u1505:	
  1971  02DB  35DE               	lslf	??_Organize_Datas,f
  1972  02DC  3EFF               	addlw	-1
  1973  02DD  1D03               	skipz
  1974  02DE  2ADB               	goto	u1505
  1975  02DF  355E               	lslf	??_Organize_Datas,w
  1976  02E0  3E29               	addlw	(low (_OP| 0))& (0+255)
  1977  02E1  0086               	movwf	6
  1978  02E2  0187               	clrf	7
  1979  02E3  3501               	lslf	1,w
  1980  02E4  0763               	addwf	Organize_Datas@RxData,w
  1981  02E5  00DF               	movwf	??_Organize_Datas+1
  1982  02E6  0A5F               	incf	??_Organize_Datas+1,w
  1983  02E7  0086               	movwf	6
  1984  02E8  0187               	clrf	7
  1985  02E9  1481               	bsf	1,1
  1986  02EA                     l205:	
  1987                           
  1988                           ;Controller_Protocol.c: 30: OP[bus_number].count += 2;
  1989  02EA  085C               	movf	Organize_Datas@bus_number,w
  1990  02EB  00DE               	movwf	??_Organize_Datas
  1991  02EC  3001               	movlw	1
  1992  02ED                     u1515:	
  1993  02ED  35DE               	lslf	??_Organize_Datas,f
  1994  02EE  3EFF               	addlw	-1
  1995  02EF  1D03               	skipz
  1996  02F0  2AED               	goto	u1515
  1997  02F1  355E               	lslf	??_Organize_Datas,w
  1998  02F2  3E02               	addlw	2
  1999  02F3  3E29               	addlw	(low (_OP| 0))& (0+255)
  2000  02F4  0086               	movwf	6
  2001  02F5  0187               	clrf	7
  2002  02F6  3002               	movlw	2
  2003  02F7  0781               	addwf	1,f
  2004  02F8  3141               	addfsr 1,1
  2005  02F9  1803               	skipnc
  2006  02FA  0A81               	incf	1,f
  2007  02FB  085C               	movf	Organize_Datas@bus_number,w
  2008  02FC  00DE               	movwf	??_Organize_Datas
  2009  02FD  3001               	movlw	1
  2010  02FE                     u1525:	
  2011  02FE  35DE               	lslf	??_Organize_Datas,f
  2012  02FF  3EFF               	addlw	-1
  2013  0300  1D03               	skipz
  2014  0301  2AFE               	goto	u1525
  2015  0302  355E               	lslf	??_Organize_Datas,w
  2016  0303  3E29               	addlw	(low (_OP| 0))& (0+255)
  2017  0304  0086               	movwf	6
  2018  0305  0187               	clrf	7
  2019  0306  3001               	movlw	1
  2020  0307  0781               	addwf	1,f
  2021  0308  3141               	addfsr 1,1
  2022  0309  1803               	skipnc
  2023  030A  0A81               	incf	1,f
  2024  030B  29CF               	goto	l200
  2025  030C                     __end_of_Organize_Datas:	
  2026                           
  2027                           	psect	text8
  2028  0509                     __ptext8:	
  2029 ;; *************** function _Initialize *****************
  2030 ;; Defined at:
  2031 ;;		line 217 in file "main.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;		None
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;		None
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  1    wreg      void 
  2038 ;; Registers used:
  2039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2045 ;;      Params:         0       0       0       0
  2046 ;;      Locals:         0       0       0       0
  2047 ;;      Temps:          0       1       0       0
  2048 ;;      Totals:         0       1       0       0
  2049 ;;Total ram usage:        1 bytes
  2050 ;; Hardware stack levels used:    1
  2051 ;; Hardware stack levels required when called:    6
  2052 ;; This function calls:
  2053 ;;		_Initialize_Parameters
  2054 ;;		_Oscillator_Initialize
  2055 ;;		_Pin_Initialize
  2056 ;;		_UART_Initialize
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function _Initialize
  2064  0509                     _Initialize:	
  2065                           
  2066                           ;main.c: 218: Oscillator_Initialize();
  2067                           
  2068                           ;incstack = 0
  2069                           ; Regs used in _Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2070  0509  3185  2567  3185   	fcall	_Oscillator_Initialize
  2071                           
  2072                           ;main.c: 219: Pin_Initialize();
  2073  050C  3185  252E  3185   	fcall	_Pin_Initialize
  2074                           
  2075                           ;main.c: 220: UART_Initialize();
  2076  050F  3185  251C  3185   	fcall	_UART_Initialize
  2077                           
  2078                           ;main.c: 221: Initialize_Parameters();
  2079  0512  3183  230C         	fcall	_Initialize_Parameters
  2080                           
  2081                           ;main.c: 222: address.all_data = 0b001;
  2082  0514  0020               	movlb	0	; select bank0
  2083  0515  01B1               	clrf	_address
  2084  0516  0AB1               	incf	_address,f
  2085                           
  2086                           ;main.c: 223: zero.all_data = 0xFF;
  2087  0517  30FF               	movlw	255
  2088  0518  00DE               	movwf	??_Initialize
  2089  0519  085E               	movf	??_Initialize,w
  2090  051A  00AF               	movwf	_zero
  2091  051B  0008               	return
  2092  051C                     __end_of_Initialize:	
  2093                           
  2094                           	psect	text9
  2095  051C                     __ptext9:	
  2096 ;; *************** function _UART_Initialize *****************
  2097 ;; Defined at:
  2098 ;;		line 252 in file "main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2112 ;;      Params:         0       0       0       0
  2113 ;;      Locals:         0       0       0       0
  2114 ;;      Temps:          0       0       0       0
  2115 ;;      Totals:         0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    4
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_Initialize
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _UART_Initialize
  2128  051C                     _UART_Initialize:	
  2129                           
  2130                           ;main.c: 254: PIE1bits.RCIE = 0;
  2131                           
  2132                           ;incstack = 0
  2133                           ; Regs used in _UART_Initialize: [wreg+status,2]
  2134  051C  0021               	movlb	1	; select bank1
  2135  051D  1291               	bcf	17,5	;volatile
  2136                           
  2137                           ;main.c: 257: SPBRGH = 0x00;
  2138  051E  0023               	movlb	3	; select bank3
  2139  051F  019C               	clrf	28	;volatile
  2140                           
  2141                           ;main.c: 258: SPBRGL = 0x8A;
  2142  0520  308A               	movlw	138
  2143  0521  009B               	movwf	27	;volatile
  2144                           
  2145                           ;main.c: 259: TXSTAbits.BRGH = 1;
  2146  0522  151E               	bsf	30,2	;volatile
  2147                           
  2148                           ;main.c: 260: BAUDCONbits.BRG16 = 1;
  2149  0523  159F               	bsf	31,3	;volatile
  2150                           
  2151                           ;main.c: 263: RCSTAbits.SPEN = 1;
  2152  0524  179D               	bsf	29,7	;volatile
  2153                           
  2154                           ;main.c: 264: RCSTAbits.CREN = 1;
  2155  0525  161D               	bsf	29,4	;volatile
  2156                           
  2157                           ;main.c: 265: TXSTAbits.SYNC = 0;
  2158  0526  121E               	bcf	30,4	;volatile
  2159                           
  2160                           ;main.c: 268: INTCONbits.GIE = 1;
  2161  0527  178B               	bsf	11,7	;volatile
  2162                           
  2163                           ;main.c: 269: INTCONbits.PEIE = 1;
  2164  0528  170B               	bsf	11,6	;volatile
  2165                           
  2166                           ;main.c: 270: PIE1bits.RCIE = 1;
  2167  0529  0021               	movlb	1	; select bank1
  2168  052A  1691               	bsf	17,5	;volatile
  2169                           
  2170                           ;main.c: 273: RCSTAbits.CREN = 1;
  2171  052B  0023               	movlb	3	; select bank3
  2172  052C  161D               	bsf	29,4	;volatile
  2173  052D  0008               	return
  2174  052E                     __end_of_UART_Initialize:	
  2175                           
  2176                           	psect	text10
  2177  052E                     __ptext10:	
  2178 ;; *************** function _Pin_Initialize *****************
  2179 ;; Defined at:
  2180 ;;		line 230 in file "main.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		status,2
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2194 ;;      Params:         0       0       0       0
  2195 ;;      Locals:         0       0       0       0
  2196 ;;      Temps:          0       0       0       0
  2197 ;;      Totals:         0       0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    4
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_Initialize
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _Pin_Initialize
  2210  052E                     _Pin_Initialize:	
  2211                           
  2212                           ;main.c: 231: ANSELA = 0x00;
  2213                           
  2214                           ;incstack = 0
  2215                           ; Regs used in _Pin_Initialize: [status,2]
  2216  052E  0023               	movlb	3	; select bank3
  2217  052F  018C               	clrf	12	;volatile
  2218                           
  2219                           ;main.c: 232: ANSELB = 0x00;
  2220  0530  018D               	clrf	13	;volatile
  2221                           
  2222                           ;main.c: 234: TRISCbits.TRISC7 = 1;
  2223  0531  0021               	movlb	1	; select bank1
  2224  0532  178E               	bsf	14,7	;volatile
  2225                           
  2226                           ;main.c: 236: TRISAbits.TRISA0 = 0;
  2227  0533  100C               	bcf	12,0	;volatile
  2228                           
  2229                           ;main.c: 237: TRISAbits.TRISA1 = 0;
  2230  0534  108C               	bcf	12,1	;volatile
  2231                           
  2232                           ;main.c: 238: TRISAbits.TRISA2 = 0;
  2233  0535  110C               	bcf	12,2	;volatile
  2234                           
  2235                           ;main.c: 239: TRISAbits.TRISA3 = 0;
  2236  0536  118C               	bcf	12,3	;volatile
  2237                           
  2238                           ;main.c: 240: TRISBbits.TRISB5 = 0;
  2239  0537  128D               	bcf	13,5	;volatile
  2240                           
  2241                           ;main.c: 241: TRISBbits.TRISB4 = 0;
  2242  0538  120D               	bcf	13,4	;volatile
  2243                           
  2244                           ;main.c: 242: TRISBbits.TRISB2 = 0;
  2245  0539  110D               	bcf	13,2	;volatile
  2246                           
  2247                           ;main.c: 243: TRISBbits.TRISB3 = 0;
  2248  053A  118D               	bcf	13,3	;volatile
  2249                           
  2250                           ;main.c: 245: TRISBbits.TRISB1 = 0;
  2251  053B  108D               	bcf	13,1	;volatile
  2252                           
  2253                           ;main.c: 246: TRISBbits.TRISB0 = 0;
  2254  053C  100D               	bcf	13,0	;volatile
  2255                           
  2256                           ;main.c: 247: TRISCbits.TRISC5 = 0;
  2257  053D  128E               	bcf	14,5	;volatile
  2258                           
  2259                           ;main.c: 249: TRISCbits.TRISC4=0;
  2260  053E  120E               	bcf	14,4	;volatile
  2261  053F  0008               	return
  2262  0540                     __end_of_Pin_Initialize:	
  2263                           
  2264                           	psect	text11
  2265  0567                     __ptext11:	
  2266 ;; *************** function _Oscillator_Initialize *****************
  2267 ;; Defined at:
  2268 ;;		line 226 in file "main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0
  2283 ;;      Locals:         0       0       0       0
  2284 ;;      Temps:          0       0       0       0
  2285 ;;      Totals:         0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    4
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_Initialize
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           
  2297                           ;psect for function _Oscillator_Initialize
  2298  0567                     _Oscillator_Initialize:	
  2299                           
  2300                           ;main.c: 227: OSCCON = 0xF0;
  2301                           
  2302                           ;incstack = 0
  2303                           ; Regs used in _Oscillator_Initialize: [wreg]
  2304  0567  30F0               	movlw	240
  2305  0568  0021               	movlb	1	; select bank1
  2306  0569  0099               	movwf	25	;volatile
  2307  056A  0008               	return
  2308  056B                     __end_of_Oscillator_Initialize:	
  2309                           
  2310                           	psect	text12
  2311  030C                     __ptext12:	
  2312 ;; *************** function _Initialize_Parameters *****************
  2313 ;; Defined at:
  2314 ;;		line 116 in file "Controller_Protocol.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2328 ;;      Params:         0       0       0       0
  2329 ;;      Locals:         0       0       0       0
  2330 ;;      Temps:          0       1       0       0
  2331 ;;      Totals:         0       1       0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    5
  2335 ;; This function calls:
  2336 ;;		___bmul
  2337 ;; This function is called by:
  2338 ;;		_Initialize
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _Initialize_Parameters
  2344  030C                     _Initialize_Parameters:	
  2345                           
  2346                           ;Controller_Protocol.c: 117: static int i;;Controller_Protocol.c: 119: for (i = 0; i < 1
      +                          ; i++)OP[i].count = 1;
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _Initialize_Parameters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2350  030C  0020               	movlb	0	; select bank0
  2351  030D  01AD               	clrf	Initialize_Parameters@i
  2352  030E  01AE               	clrf	Initialize_Parameters@i+1
  2353  030F  082E               	movf	Initialize_Parameters@i+1,w
  2354  0310  3A80               	xorlw	128
  2355  0311  00DD               	movwf	??_Initialize_Parameters
  2356  0312  3080               	movlw	128
  2357  0313  025D               	subwf	??_Initialize_Parameters,w
  2358  0314  1D03               	skipz
  2359  0315  2B18               	goto	u1655
  2360  0316  3001               	movlw	1
  2361  0317  022D               	subwf	Initialize_Parameters@i,w
  2362  0318                     u1655:	
  2363  0318  1803               	btfsc	3,0
  2364  0319  2B3A               	goto	l1275
  2365  031A                     l1269:	
  2366  031A  0020               	movlb	0	; select bank0
  2367  031B  082D               	movf	Initialize_Parameters@i,w
  2368  031C  00DD               	movwf	??_Initialize_Parameters
  2369  031D  3001               	movlw	1
  2370  031E                     u1665:	
  2371  031E  35DD               	lslf	??_Initialize_Parameters,f
  2372  031F  3EFF               	addlw	-1
  2373  0320  1D03               	skipz
  2374  0321  2B1E               	goto	u1665
  2375  0322  355D               	lslf	??_Initialize_Parameters,w
  2376  0323  3E02               	addlw	2
  2377  0324  3E29               	addlw	(low (_OP| 0))& (0+255)
  2378  0325  0086               	movwf	6
  2379  0326  0187               	clrf	7
  2380  0327  3001               	movlw	1
  2381  0328  3FC0               	movwi [0]fsr1
  2382  0329  3000               	movlw	0
  2383  032A  3FC1               	movwi [1]fsr1
  2384  032B  3001               	movlw	1
  2385  032C  07AD               	addwf	Initialize_Parameters@i,f
  2386  032D  3000               	movlw	0
  2387  032E  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2388  032F  082E               	movf	Initialize_Parameters@i+1,w
  2389  0330  3A80               	xorlw	128
  2390  0331  00DD               	movwf	??_Initialize_Parameters
  2391  0332  3080               	movlw	128
  2392  0333  025D               	subwf	??_Initialize_Parameters,w
  2393  0334  1D03               	skipz
  2394  0335  2B38               	goto	u1675
  2395  0336  3001               	movlw	1
  2396  0337  022D               	subwf	Initialize_Parameters@i,w
  2397  0338                     u1675:	
  2398  0338  1C03               	skipc
  2399  0339  2B1A               	goto	l1269
  2400  033A                     l1275:	
  2401                           
  2402                           ;Controller_Protocol.c: 120: for (i = 0; i < 1; i++) {
  2403  033A  0020               	movlb	0	; select bank0
  2404  033B  01AD               	clrf	Initialize_Parameters@i
  2405  033C  01AE               	clrf	Initialize_Parameters@i+1
  2406  033D                     L2:	
  2407  033D  082E               	movf	Initialize_Parameters@i+1,w
  2408  033E  3A80               	xorlw	128
  2409  033F  00DD               	movwf	??_Initialize_Parameters
  2410  0340  3080               	movlw	128
  2411  0341  025D               	subwf	??_Initialize_Parameters,w
  2412  0342  1D03               	skipz
  2413  0343  2B46               	goto	u1685
  2414  0344  3001               	movlw	1
  2415  0345  022D               	subwf	Initialize_Parameters@i,w
  2416  0346                     u1685:	
  2417  0346  1803               	btfsc	3,0
  2418  0347  0008               	return
  2419                           
  2420                           ;Controller_Protocol.c: 121: StP[i].Buffer_count = 1;
  2421  0348  0020               	movlb	0	; select bank0
  2422  0349  082D               	movf	Initialize_Parameters@i,w
  2423  034A  00DD               	movwf	??_Initialize_Parameters
  2424  034B  3001               	movlw	1
  2425  034C                     u1695:	
  2426  034C  35DD               	lslf	??_Initialize_Parameters,f
  2427  034D  3EFF               	addlw	-1
  2428  034E  1D03               	skipz
  2429  034F  2B4C               	goto	u1695
  2430  0350  355D               	lslf	??_Initialize_Parameters,w
  2431  0351  3E25               	addlw	(low (_StP| 0))& (0+255)
  2432  0352  0086               	movwf	6
  2433  0353  0187               	clrf	7
  2434  0354  3001               	movlw	1
  2435  0355  3FC0               	movwi [0]fsr1
  2436  0356  3000               	movlw	0
  2437  0357  3FC1               	movwi [1]fsr1
  2438                           
  2439                           ;Controller_Protocol.c: 122: SeP[i].byte_data_complete = 1;
  2440  0358  3005               	movlw	5
  2441  0359  00DD               	movwf	??_Initialize_Parameters
  2442  035A  085D               	movf	??_Initialize_Parameters,w
  2443  035B  00D9               	movwf	___bmul@multiplicand
  2444  035C  082D               	movf	Initialize_Parameters@i,w
  2445  035D  3185  2540  3183   	fcall	___bmul
  2446  0360  3E04               	addlw	4
  2447  0361  3E20               	addlw	(low (_SeP| 0))& (0+255)
  2448  0362  0086               	movwf	6
  2449  0363  0187               	clrf	7
  2450  0364  0181               	clrf	1
  2451  0365  0A81               	incf	1,f
  2452  0366  3001               	movlw	1
  2453  0367  0020               	movlb	0	; select bank0
  2454  0368  07AD               	addwf	Initialize_Parameters@i,f
  2455  0369  3000               	movlw	0
  2456  036A  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2457  036B  2B3D               	goto	L2
  2458  036C                     __end_of_Initialize_Parameters:	
  2459                           
  2460                           	psect	text13
  2461  0540                     __ptext13:	
  2462 ;; *************** function ___bmul *****************
  2463 ;; Defined at:
  2464 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  multiplier      1    wreg     unsigned char 
  2467 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  multiplier      1   11[BANK0 ] unsigned char 
  2470 ;;  product         1   10[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      unsigned char 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2480 ;;      Params:         0       1       0       0
  2481 ;;      Locals:         0       2       0       0
  2482 ;;      Temps:          0       1       0       0
  2483 ;;      Totals:         0       4       0       0
  2484 ;;Total ram usage:        4 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    4
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_Initialize_Parameters
  2491 ;;		_Send_Till_EndSignal
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function ___bmul
  2497  0540                     ___bmul:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2501                           ;___bmul@multiplier stored from wreg
  2502  0540  0020               	movlb	0	; select bank0
  2503  0541  00DC               	movwf	___bmul@multiplier
  2504  0542  01DB               	clrf	___bmul@product
  2505  0543                     l1135:	
  2506  0543  1C5C               	btfss	___bmul@multiplier,0
  2507  0544  2D49               	goto	l1139
  2508  0545  0859               	movf	___bmul@multiplicand,w
  2509  0546  00DA               	movwf	??___bmul
  2510  0547  085A               	movf	??___bmul,w
  2511  0548  07DB               	addwf	___bmul@product,f
  2512  0549                     l1139:	
  2513  0549  1003               	clrc
  2514  054A  0DD9               	rlf	___bmul@multiplicand,f
  2515  054B  1003               	clrc
  2516  054C  0CDC               	rrf	___bmul@multiplier,f
  2517  054D  085C               	movf	___bmul@multiplier,w
  2518  054E  1D03               	btfss	3,2
  2519  054F  2D43               	goto	l1135
  2520  0550  085B               	movf	___bmul@product,w
  2521  0551  0008               	return
  2522  0552                     __end_of___bmul:	
  2523                           
  2524                           	psect	intentry
  2525  0004                     __pintentry:	
  2526 ;; *************** function _INTERRUPT_HANDLER *****************
  2527 ;; Defined at:
  2528 ;;		line 211 in file "main.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2542 ;;      Params:         0       0       0       0
  2543 ;;      Locals:         0       0       0       0
  2544 ;;      Temps:          0       0       0       0
  2545 ;;      Totals:         0       0       0       0
  2546 ;;Total ram usage:        0 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    3
  2549 ;; This function calls:
  2550 ;;		_Reception_from_master
  2551 ;; This function is called by:
  2552 ;;		Interrupt level 1
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556  0004                     _INTERRUPT_HANDLER:	
  2557                           
  2558                           ;incstack = 0
  2559  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2560                           
  2561                           ; Regs used in _INTERRUPT_HANDLER: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2562  0005  3180               	pagesel	$
  2563                           
  2564                           ;main.c: 212: if (PIR1bits.RCIF) {
  2565  0006  0020               	movlb	0	; select bank0
  2566  0007  1E91               	btfss	17,5	;volatile
  2567  0008  280C               	goto	i1l125
  2568                           
  2569                           ;main.c: 213: Reception_from_master(0xC0);
  2570  0009  30C0               	movlw	192
  2571  000A  3183  23C7         	fcall	_Reception_from_master
  2572  000C                     i1l125:	
  2573                           ;main.c: 214: } else;
  2574                           
  2575  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2576  000D  0009               	retfie
  2577  000E                     __end_of_INTERRUPT_HANDLER:	
  2578                           
  2579                           	psect	text15
  2580  03C7                     __ptext15:	
  2581 ;; *************** function _Reception_from_master *****************
  2582 ;; Defined at:
  2583 ;;		line 36 in file "communication.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  slave_addres    1    wreg     unsigned char 
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  slave_addres    1    6[BANK0 ] unsigned char 
  2588 ;;  error_comple    1    7[BANK0 ] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2598 ;;      Params:         0       0       0       0
  2599 ;;      Locals:         0       2       0       0
  2600 ;;      Temps:          3       0       0       0
  2601 ;;      Totals:         3       2       0       0
  2602 ;;Total ram usage:        5 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    2
  2605 ;; This function calls:
  2606 ;;		_Store_Datas
  2607 ;;		_slave_address_check
  2608 ;; This function is called by:
  2609 ;;		_INTERRUPT_HANDLER
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function _Reception_from_master
  2615  03C7                     _Reception_from_master:	
  2616                           
  2617                           ;incstack = 0
  2618                           ; Regs used in _Reception_from_master: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2619                           ;Reception_from_master@slave_address stored from wreg
  2620  03C7  0020               	movlb	0	; select bank0
  2621  03C8  00D7               	movwf	Reception_from_master@slave_address
  2622                           
  2623                           ;communication.c: 37: static uint8_t Receive_data_count = 0;;communication.c: 38: uint8_
      +                          t error_complete = 0;
  2624  03C9  01D8               	clrf	Reception_from_master@error_complete
  2625                           
  2626                           ;communication.c: 53: error_complete = Store_Datas(Buffer0, RCREG, 6 * 2 + 3, 0, EUSART_
      +                          ERROR_from_master);
  2627  03CA  0023               	movlb	3	; select bank3
  2628  03CB  0819               	movf	25,w	;volatile
  2629  03CC  00FA               	movwf	??_Reception_from_master
  2630  03CD  087A               	movf	??_Reception_from_master,w
  2631  03CE  00F2               	movwf	Store_Datas@received_data
  2632  03CF  300F               	movlw	15
  2633  03D0  00F3               	movwf	Store_Datas@number_of_receive_data
  2634  03D1  3000               	movlw	0
  2635  03D2  00F4               	movwf	Store_Datas@number_of_receive_data+1
  2636  03D3  3000               	movlw	0
  2637  03D4  00F5               	movwf	Store_Datas@bus_number
  2638  03D5  00F6               	movwf	Store_Datas@bus_number+1
  2639  03D6  3052               	movlw	low _EUSART_ERROR_from_master
  2640  03D7  00F7               	movwf	Store_Datas@EUSART_ERROR
  2641  03D8  3005               	movlw	high _EUSART_ERROR_from_master
  2642  03D9  00F8               	movwf	Store_Datas@EUSART_ERROR+1
  2643  03DA  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  2644  03DB  3180  2023  3183   	fcall	_Store_Datas
  2645  03DE  00FB               	movwf	??_Reception_from_master+1
  2646  03DF  087B               	movf	??_Reception_from_master+1,w
  2647  03E0  0020               	movlb	0	; select bank0
  2648  03E1  00D8               	movwf	Reception_from_master@error_complete
  2649                           
  2650                           ;communication.c: 56: if (error_complete == 1) {
  2651  03E2  0358               	decf	Reception_from_master@error_complete,w
  2652  03E3  1903               	btfsc	3,2
  2653  03E4  2BED               	goto	i1l1405
  2654                           
  2655                           ;communication.c: 58: } else if ((error_complete == 2) && (Receive_data_count != (6 * 2 
      +                          + 3 - 1))) {
  2656                           
  2657                           ;communication.c: 57: Receive_data_count = 0;
  2658  03E5  3002               	movlw	2
  2659  03E6  0658               	xorwf	Reception_from_master@error_complete,w
  2660  03E7  1D03               	btfss	3,2
  2661  03E8  2BEF               	goto	i1l1407
  2662  03E9  300E               	movlw	14
  2663  03EA  0634               	xorwf	Reception_from_master@Receive_data_count,w
  2664  03EB  1903               	btfsc	3,2
  2665  03EC  2BEF               	goto	i1l1407
  2666  03ED                     i1l1405:	
  2667                           
  2668                           ;communication.c: 59: Receive_data_count = 0;
  2669  03ED  01B4               	clrf	Reception_from_master@Receive_data_count
  2670                           
  2671                           ;communication.c: 60: } else {
  2672  03EE  2C03               	goto	i1l1411
  2673  03EF                     i1l1407:	
  2674                           
  2675                           ;communication.c: 61: slave_different_flag = slave_address_check(Receive_data_count, sla
      +                          ve_address, slave_different_flag);
  2676  03EF  0857               	movf	Reception_from_master@slave_address,w
  2677  03F0  00FA               	movwf	??_Reception_from_master
  2678  03F1  087A               	movf	??_Reception_from_master,w
  2679  03F2  00F0               	movwf	slave_address_check@slave_address
  2680  03F3  0866               	movf	_slave_different_flag,w
  2681  03F4  00FB               	movwf	??_Reception_from_master+1
  2682  03F5  087B               	movf	??_Reception_from_master+1,w
  2683  03F6  00F1               	movwf	slave_address_check@slave_flag
  2684  03F7  0834               	movf	Reception_from_master@Receive_data_count,w
  2685  03F8  3184  2473  3183   	fcall	_slave_address_check
  2686  03FB  00FC               	movwf	??_Reception_from_master+2
  2687  03FC  087C               	movf	??_Reception_from_master+2,w
  2688  03FD  0020               	movlb	0	; select bank0
  2689  03FE  00E6               	movwf	_slave_different_flag
  2690                           
  2691                           ;communication.c: 62: Receive_data_count++;
  2692  03FF  3001               	movlw	1
  2693  0400  00FA               	movwf	??_Reception_from_master
  2694  0401  087A               	movf	??_Reception_from_master,w
  2695  0402  07B4               	addwf	Reception_from_master@Receive_data_count,f
  2696  0403                     i1l1411:	
  2697                           
  2698                           ;communication.c: 63: };communication.c: 65: if ((error_complete == 2) && (Receive_data_
      +                          count == 6 * 2 + 3)) {
  2699  0403  3002               	movlw	2
  2700  0404  0658               	xorwf	Reception_from_master@error_complete,w
  2701  0405  1D03               	btfss	3,2
  2702  0406  0008               	return
  2703  0407  300F               	movlw	15
  2704  0408  0634               	xorwf	Reception_from_master@Receive_data_count,w
  2705  0409  1D03               	btfss	3,2
  2706  040A  0008               	return
  2707                           
  2708                           ;communication.c: 66: Receive_flag = 0;
  2709  040B  01E7               	clrf	_Receive_flag
  2710                           
  2711                           ;communication.c: 67: Receive_data_count = 0;
  2712  040C  01B4               	clrf	Reception_from_master@Receive_data_count
  2713  040D  0008               	return
  2714  040E                     __end_of_Reception_from_master:	
  2715                           
  2716                           	psect	text16
  2717  0473                     __ptext16:	
  2718 ;; *************** function _slave_address_check *****************
  2719 ;; Defined at:
  2720 ;;		line 74 in file "communication.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  data_count      1    wreg     unsigned char 
  2723 ;;  slave_addres    1    0[COMMON] unsigned char 
  2724 ;;  slave_flag      1    1[COMMON] unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  data_count      1    5[COMMON] unsigned char 
  2727 ;;  sample_data     1    6[COMMON] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      unsigned char 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2737 ;;      Params:         2       0       0       0
  2738 ;;      Locals:         2       0       0       0
  2739 ;;      Temps:          3       0       0       0
  2740 ;;      Totals:         7       0       0       0
  2741 ;;Total ram usage:        7 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_Reception_from_master
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _slave_address_check
  2752  0473                     _slave_address_check:	
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _slave_address_check: [wreg+status,2+status,0]
  2756                           ;slave_address_check@data_count stored from wreg
  2757  0473  00F5               	movwf	slave_address_check@data_count
  2758                           
  2759                           ;communication.c: 75: if (slave_flag == 2) {
  2760  0474  3002               	movlw	2
  2761  0475  0671               	xorwf	slave_address_check@slave_flag,w
  2762  0476  1D03               	btfss	3,2
  2763  0477  2C95               	goto	i1l1359
  2764                           
  2765                           ;communication.c: 76: if (data_count == 4) {
  2766  0478  3004               	movlw	4
  2767  0479  0675               	xorwf	slave_address_check@data_count,w
  2768  047A  1D03               	btfss	3,2
  2769  047B  2C93               	goto	i1l1353
  2770                           
  2771                           ;communication.c: 77: uint8_t sample_data = (Buffer0[1].upper_data << 4) | Buffer0[2].up
      +                          per_data;
  2772  047C  0020               	movlb	0	; select bank0
  2773  047D  0E38               	swapf	_Buffer0+2,w
  2774  047E  390F               	andlw	15
  2775  047F  00F2               	movwf	??_slave_address_check
  2776  0480  0E37               	swapf	_Buffer0+1,w
  2777  0481  390F               	andlw	15
  2778  0482  00F3               	movwf	??_slave_address_check+1
  2779  0483  3003               	movlw	3
  2780  0484                     u203_25:	
  2781  0484  35F3               	lslf	??_slave_address_check+1,f
  2782  0485  3EFF               	addlw	-1
  2783  0486  1D03               	skipz
  2784  0487  2C84               	goto	u203_25
  2785  0488  3573               	lslf	??_slave_address_check+1,w
  2786  0489  0472               	iorwf	??_slave_address_check,w
  2787  048A  00F4               	movwf	??_slave_address_check+2
  2788  048B  0874               	movf	??_slave_address_check+2,w
  2789  048C  00F6               	movwf	slave_address_check@sample_data
  2790                           
  2791                           ;communication.c: 79: if (sample_data == slave_address) {
  2792  048D  0876               	movf	slave_address_check@sample_data,w
  2793  048E  0670               	xorwf	slave_address_check@slave_address,w
  2794  048F  1D03               	skipz
  2795  0490  2C93               	goto	i1l1353
  2796                           
  2797                           ;communication.c: 80: return 1;
  2798  0491  3001               	movlw	1
  2799  0492  0008               	return
  2800  0493                     i1l1353:	
  2801                           
  2802                           ;communication.c: 81: };communication.c: 82: };communication.c: 83: return 2;
  2803  0493  3002               	movlw	2
  2804                           
  2805                           ;communication.c: 84: } else {
  2806  0494  0008               	return
  2807  0495                     i1l1359:	
  2808                           
  2809                           ;communication.c: 86: return slave_flag;
  2810  0495  0871               	movf	slave_address_check@slave_flag,w
  2811  0496  0008               	return
  2812  0497                     __end_of_slave_address_check:	
  2813                           
  2814                           	psect	text17
  2815  0023                     __ptext17:	
  2816 ;; *************** function _Store_Datas *****************
  2817 ;; Defined at:
  2818 ;;		line 34 in file "Controller_Protocol.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  Buffer          1    wreg     PTR struct .
  2821 ;;		 -> Buffer0(15), 
  2822 ;;  received_dat    1    2[COMMON] unsigned char 
  2823 ;;  number_of_re    2    3[COMMON] int 
  2824 ;;  bus_number      2    5[COMMON] int 
  2825 ;;  EUSART_ERROR    2    7[COMMON] PTR FTN()unsigned char 
  2826 ;;		 -> EUSART_ERROR_from_master(1), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  Buffer          1    9[COMMON] PTR struct .
  2829 ;;		 -> Buffer0(15), 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2839 ;;      Params:         7       0       0       0
  2840 ;;      Locals:         1       0       0       0
  2841 ;;      Temps:          0       6       0       0
  2842 ;;      Totals:         8       6       0       0
  2843 ;;Total ram usage:       14 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    1
  2846 ;; This function calls:
  2847 ;;		_EUSART_ERROR_from_master
  2848 ;; This function is called by:
  2849 ;;		_Reception_from_master
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _Store_Datas
  2855  0023                     _Store_Datas:	
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in _Store_Datas: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2859                           ;Store_Datas@Buffer stored from wreg
  2860  0023  00F9               	movwf	Store_Datas@Buffer
  2861                           
  2862                           ;Controller_Protocol.c: 35: if (EUSART_ERROR() == 1) {
  2863  0024  0878               	movf	Store_Datas@EUSART_ERROR+1,w
  2864  0025  008A               	movwf	10
  2865  0026  0877               	movf	Store_Datas@EUSART_ERROR,w
  2866  0027  000A               	callw
  2867  0028  3180               	pagesel	$
  2868  0029  3A01               	xorlw	1
  2869  002A  1D03               	skipz
  2870  002B  2857               	goto	i1l1299
  2871                           
  2872                           ;Controller_Protocol.c: 36: StP[bus_number].S_flag = 0;
  2873  002C  0875               	movf	Store_Datas@bus_number,w
  2874  002D  0020               	movlb	0	; select bank0
  2875  002E  00D1               	movwf	??_Store_Datas
  2876  002F  3001               	movlw	1
  2877  0030                     u172_25:	
  2878  0030  35D1               	lslf	??_Store_Datas,f
  2879  0031  3EFF               	addlw	-1
  2880  0032  1D03               	skipz
  2881  0033  2830               	goto	u172_25
  2882  0034  3551               	lslf	??_Store_Datas,w
  2883  0035  3E03               	addlw	3
  2884  0036  3E25               	addlw	(low (_StP| 0))& (0+255)
  2885  0037  0086               	movwf	6
  2886  0038  0187               	clrf	7
  2887  0039  0181               	clrf	1
  2888                           
  2889                           ;Controller_Protocol.c: 37: StP[bus_number].Buffer_count = 0;
  2890  003A  0875               	movf	Store_Datas@bus_number,w
  2891  003B  00D1               	movwf	??_Store_Datas
  2892  003C  3001               	movlw	1
  2893  003D                     u173_25:	
  2894  003D  35D1               	lslf	??_Store_Datas,f
  2895  003E  3EFF               	addlw	-1
  2896  003F  1D03               	skipz
  2897  0040  283D               	goto	u173_25
  2898  0041  3551               	lslf	??_Store_Datas,w
  2899  0042  3E25               	addlw	(low (_StP| 0))& (0+255)
  2900  0043  0086               	movwf	6
  2901  0044  0187               	clrf	7
  2902  0045  3000               	movlw	0
  2903  0046  3FC0               	movwi [0]fsr1
  2904  0047  3FC1               	movwi [1]fsr1
  2905                           
  2906                           ;Controller_Protocol.c: 38: StP[bus_number].Start_signal_has_come = 0;
  2907  0048  0875               	movf	Store_Datas@bus_number,w
  2908  0049  00D1               	movwf	??_Store_Datas
  2909  004A  3001               	movlw	1
  2910  004B                     u174_25:	
  2911  004B  35D1               	lslf	??_Store_Datas,f
  2912  004C  3EFF               	addlw	-1
  2913  004D  1D03               	skipz
  2914  004E  284B               	goto	u174_25
  2915  004F  3551               	lslf	??_Store_Datas,w
  2916  0050  3E02               	addlw	2
  2917  0051  3E25               	addlw	(low (_StP| 0))& (0+255)
  2918  0052  0086               	movwf	6
  2919  0053  0187               	clrf	7
  2920  0054  0181               	clrf	1
  2921                           
  2922                           ;Controller_Protocol.c: 39: return 1;
  2923  0055  3001               	movlw	1
  2924                           
  2925                           ;Controller_Protocol.c: 40: } else {
  2926  0056  0008               	return
  2927  0057                     i1l1299:	
  2928                           
  2929                           ;Controller_Protocol.c: 41: if (StP[bus_number].Start_signal_has_come == 0) {
  2930  0057  0875               	movf	Store_Datas@bus_number,w
  2931  0058  0020               	movlb	0	; select bank0
  2932  0059  00D1               	movwf	??_Store_Datas
  2933  005A  3001               	movlw	1
  2934  005B                     u175_25:	
  2935  005B  35D1               	lslf	??_Store_Datas,f
  2936  005C  3EFF               	addlw	-1
  2937  005D  1D03               	skipz
  2938  005E  285B               	goto	u175_25
  2939  005F  3551               	lslf	??_Store_Datas,w
  2940  0060  3E02               	addlw	2
  2941  0061  3E25               	addlw	(low (_StP| 0))& (0+255)
  2942  0062  0086               	movwf	6
  2943  0063  0187               	clrf	7
  2944  0064  0801               	movf	1,w
  2945  0065  1D03               	btfss	3,2
  2946  0066  28C4               	goto	i1l1315
  2947                           
  2948                           ;Controller_Protocol.c: 42: Buffer[StP[bus_number].S_flag].all_data = received_data;
  2949  0067  0872               	movf	Store_Datas@received_data,w
  2950  0068  00D1               	movwf	??_Store_Datas
  2951  0069  0875               	movf	Store_Datas@bus_number,w
  2952  006A  00D2               	movwf	??_Store_Datas+1
  2953  006B  3001               	movlw	1
  2954  006C                     u177_25:	
  2955  006C  35D2               	lslf	??_Store_Datas+1,f
  2956  006D  3EFF               	addlw	-1
  2957  006E  1D03               	skipz
  2958  006F  286C               	goto	u177_25
  2959  0070  3552               	lslf	??_Store_Datas+1,w
  2960  0071  3E03               	addlw	3
  2961  0072  3E25               	addlw	(low (_StP| 0))& (0+255)
  2962  0073  0086               	movwf	6
  2963  0074  0187               	clrf	7
  2964  0075  0801               	movf	1,w
  2965  0076  0779               	addwf	Store_Datas@Buffer,w
  2966  0077  00D3               	movwf	??_Store_Datas+2
  2967  0078  0853               	movf	??_Store_Datas+2,w
  2968  0079  0086               	movwf	6
  2969  007A  0187               	clrf	7
  2970  007B  0851               	movf	??_Store_Datas,w
  2971  007C  0081               	movwf	1
  2972                           
  2973                           ;Controller_Protocol.c: 43: if (StP[bus_number].S_flag == 1) {
  2974  007D  0875               	movf	Store_Datas@bus_number,w
  2975  007E  00D1               	movwf	??_Store_Datas
  2976  007F  3001               	movlw	1
  2977  0080                     u178_25:	
  2978  0080  35D1               	lslf	??_Store_Datas,f
  2979  0081  3EFF               	addlw	-1
  2980  0082  1D03               	skipz
  2981  0083  2880               	goto	u178_25
  2982  0084  3551               	lslf	??_Store_Datas,w
  2983  0085  3E03               	addlw	3
  2984  0086  3E25               	addlw	(low (_StP| 0))& (0+255)
  2985  0087  0086               	movwf	6
  2986  0088  0187               	clrf	7
  2987  0089  0301               	decf	1,w
  2988  008A  1D03               	btfss	3,2
  2989  008B  28AC               	goto	i1l1307
  2990                           
  2991                           ;Controller_Protocol.c: 44: if (Buffer[1].lower_data == 5) StP[bus_number].Start_signal_
      +                          has_come = 1;
  2992  008C  0A79               	incf	Store_Datas@Buffer,w
  2993  008D  0086               	movwf	6
  2994  008E  0187               	clrf	7
  2995  008F  0801               	movf	1,w
  2996  0090  390F               	andlw	15
  2997  0091  3A05               	xorlw	5
  2998  0092  1D03               	skipz
  2999  0093  28A2               	goto	i1l215
  3000  0094  0875               	movf	Store_Datas@bus_number,w
  3001  0095  00D1               	movwf	??_Store_Datas
  3002  0096  3001               	movlw	1
  3003  0097                     u181_25:	
  3004  0097  35D1               	lslf	??_Store_Datas,f
  3005  0098  3EFF               	addlw	-1
  3006  0099  1D03               	skipz
  3007  009A  2897               	goto	u181_25
  3008  009B  3551               	lslf	??_Store_Datas,w
  3009  009C  3E02               	addlw	2
  3010  009D  3E25               	addlw	(low (_StP| 0))& (0+255)
  3011  009E  0086               	movwf	6
  3012  009F  0187               	clrf	7
  3013  00A0  0181               	clrf	1
  3014  00A1  0A81               	incf	1,f
  3015  00A2                     i1l215:	
  3016                           
  3017                           ;Controller_Protocol.c: 45: StP[bus_number].S_flag = 0;
  3018  00A2  0875               	movf	Store_Datas@bus_number,w
  3019  00A3  00D1               	movwf	??_Store_Datas
  3020  00A4  3001               	movlw	1
  3021  00A5                     u182_25:	
  3022  00A5  35D1               	lslf	??_Store_Datas,f
  3023  00A6  3EFF               	addlw	-1
  3024  00A7  1D03               	skipz
  3025  00A8  28A5               	goto	u182_25
  3026  00A9  3551               	lslf	??_Store_Datas,w
  3027  00AA  3E03               	addlw	3
  3028  00AB  29A9               	goto	L3
  3029  00AC                     i1l1307:	
  3030                           ;Controller_Protocol.c: 46: } else if (Buffer[0].all_data == 'S') {
  3031                           
  3032  00AC  0879               	movf	Store_Datas@Buffer,w
  3033  00AD  0086               	movwf	6
  3034  00AE  0187               	clrf	7
  3035  00AF  3053               	movlw	83
  3036  00B0  0601               	xorwf	1,w
  3037  00B1  1D03               	btfss	3,2
  3038  00B2  28C2               	goto	i1l1311
  3039                           
  3040                           ;Controller_Protocol.c: 47: StP[bus_number].S_flag = 1;
  3041  00B3  0875               	movf	Store_Datas@bus_number,w
  3042  00B4  00D1               	movwf	??_Store_Datas
  3043  00B5  3001               	movlw	1
  3044  00B6                     u184_25:	
  3045  00B6  35D1               	lslf	??_Store_Datas,f
  3046  00B7  3EFF               	addlw	-1
  3047  00B8  1D03               	skipz
  3048  00B9  28B6               	goto	u184_25
  3049  00BA  3551               	lslf	??_Store_Datas,w
  3050  00BB  3E03               	addlw	3
  3051  00BC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3052  00BD  0086               	movwf	6
  3053  00BE  0187               	clrf	7
  3054  00BF  0181               	clrf	1
  3055  00C0  0A81               	incf	1,f
  3056                           
  3057                           ;Controller_Protocol.c: 48: }else return 1;
  3058  00C1  29AD               	goto	i1l1337
  3059  00C2                     i1l1311:	
  3060  00C2  3001               	movlw	1
  3061  00C3  0008               	return
  3062  00C4                     i1l1315:	
  3063                           ;Controller_Protocol.c: 49: } else {
  3064                           
  3065                           
  3066                           ;Controller_Protocol.c: 50: StP[bus_number].Buffer_count++;
  3067  00C4  0875               	movf	Store_Datas@bus_number,w
  3068  00C5  00D1               	movwf	??_Store_Datas
  3069  00C6  3001               	movlw	1
  3070  00C7                     u185_25:	
  3071  00C7  35D1               	lslf	??_Store_Datas,f
  3072  00C8  3EFF               	addlw	-1
  3073  00C9  1D03               	skipz
  3074  00CA  28C7               	goto	u185_25
  3075  00CB  3551               	lslf	??_Store_Datas,w
  3076  00CC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3077  00CD  0086               	movwf	6
  3078  00CE  0187               	clrf	7
  3079  00CF  3001               	movlw	1
  3080  00D0  0781               	addwf	1,f
  3081  00D1  3141               	addfsr 1,1
  3082  00D2  1803               	skipnc
  3083  00D3  0A81               	incf	1,f
  3084                           
  3085                           ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count > number_of_receive_data - 1
      +                          ){
  3086  00D4  0875               	movf	Store_Datas@bus_number,w
  3087  00D5  00D1               	movwf	??_Store_Datas
  3088  00D6  3001               	movlw	1
  3089  00D7                     u186_25:	
  3090  00D7  35D1               	lslf	??_Store_Datas,f
  3091  00D8  3EFF               	addlw	-1
  3092  00D9  1D03               	skipz
  3093  00DA  28D7               	goto	u186_25
  3094  00DB  3551               	lslf	??_Store_Datas,w
  3095  00DC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3096  00DD  0086               	movwf	6
  3097  00DE  0187               	clrf	7
  3098  00DF  3F40               	moviw [0]fsr1
  3099  00E0  00D2               	movwf	??_Store_Datas+1
  3100  00E1  3F41               	moviw [1]fsr1
  3101  00E2  00D3               	movwf	??_Store_Datas+2
  3102  00E3  0873               	movf	Store_Datas@number_of_receive_data,w
  3103  00E4  3EFF               	addlw	255
  3104  00E5  00D4               	movwf	??_Store_Datas+3
  3105  00E6  30FF               	movlw	255
  3106  00E7  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3107  00E8  00D5               	movwf	??_Store_Datas+4
  3108  00E9  0855               	movf	??_Store_Datas+4,w
  3109  00EA  3A80               	xorlw	128
  3110  00EB  00D6               	movwf	??_Store_Datas+5
  3111  00EC  0853               	movf	??_Store_Datas+2,w
  3112  00ED  3A80               	xorlw	128
  3113  00EE  0256               	subwf	??_Store_Datas+5,w
  3114  00EF  1D03               	skipz
  3115  00F0  28F3               	goto	u187_25
  3116  00F1  0852               	movf	??_Store_Datas+1,w
  3117  00F2  0254               	subwf	??_Store_Datas+3,w
  3118  00F3                     u187_25:	
  3119  00F3  1803               	skipnc
  3120  00F4  2914               	goto	i1l1323
  3121                           
  3122                           ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
  3123  00F5  0875               	movf	Store_Datas@bus_number,w
  3124  00F6  0020               	movlb	0	; select bank0
  3125  00F7  00D1               	movwf	??_Store_Datas
  3126  00F8  3001               	movlw	1
  3127  00F9                     u188_25:	
  3128  00F9  35D1               	lslf	??_Store_Datas,f
  3129  00FA  3EFF               	addlw	-1
  3130  00FB  1D03               	skipz
  3131  00FC  28F9               	goto	u188_25
  3132  00FD  3551               	lslf	??_Store_Datas,w
  3133  00FE  3E25               	addlw	(low (_StP| 0))& (0+255)
  3134  00FF  0086               	movwf	6
  3135  0100  0187               	clrf	7
  3136  0101  3001               	movlw	1
  3137  0102  3FC0               	movwi [0]fsr1
  3138  0103  3000               	movlw	0
  3139  0104  3FC1               	movwi [1]fsr1
  3140                           
  3141                           ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
  3142  0105  0875               	movf	Store_Datas@bus_number,w
  3143  0106  00D1               	movwf	??_Store_Datas
  3144  0107  3001               	movlw	1
  3145  0108                     u189_25:	
  3146  0108  35D1               	lslf	??_Store_Datas,f
  3147  0109  3EFF               	addlw	-1
  3148  010A  1D03               	skipz
  3149  010B  2908               	goto	u189_25
  3150  010C  3551               	lslf	??_Store_Datas,w
  3151  010D  3E02               	addlw	2
  3152  010E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3153  010F  0086               	movwf	6
  3154  0110  0187               	clrf	7
  3155  0111  0181               	clrf	1
  3156                           
  3157                           ;Controller_Protocol.c: 55: return 1;
  3158  0112  3001               	movlw	1
  3159  0113  0008               	return
  3160  0114                     i1l1323:	
  3161                           
  3162                           ;Controller_Protocol.c: 56: };Controller_Protocol.c: 58: Buffer[StP[bus_number].Buffer_c
      +                          ount].all_data = received_data;
  3163  0114  0872               	movf	Store_Datas@received_data,w
  3164  0115  0020               	movlb	0	; select bank0
  3165  0116  00D1               	movwf	??_Store_Datas
  3166  0117  0875               	movf	Store_Datas@bus_number,w
  3167  0118  00D2               	movwf	??_Store_Datas+1
  3168  0119  3001               	movlw	1
  3169  011A                     u190_25:	
  3170  011A  35D2               	lslf	??_Store_Datas+1,f
  3171  011B  3EFF               	addlw	-1
  3172  011C  1D03               	skipz
  3173  011D  291A               	goto	u190_25
  3174  011E  3552               	lslf	??_Store_Datas+1,w
  3175  011F  3E25               	addlw	(low (_StP| 0))& (0+255)
  3176  0120  0086               	movwf	6
  3177  0121  0187               	clrf	7
  3178  0122  0801               	movf	1,w
  3179  0123  0779               	addwf	Store_Datas@Buffer,w
  3180  0124  00D3               	movwf	??_Store_Datas+2
  3181  0125  0853               	movf	??_Store_Datas+2,w
  3182  0126  0086               	movwf	6
  3183  0127  0187               	clrf	7
  3184  0128  0851               	movf	??_Store_Datas,w
  3185  0129  0081               	movwf	1
  3186                           
  3187                           ;Controller_Protocol.c: 59: if (Buffer[StP[bus_number].Buffer_count].all_data == 'C') {
  3188  012A  0875               	movf	Store_Datas@bus_number,w
  3189  012B  00D1               	movwf	??_Store_Datas
  3190  012C  3001               	movlw	1
  3191  012D                     u191_25:	
  3192  012D  35D1               	lslf	??_Store_Datas,f
  3193  012E  3EFF               	addlw	-1
  3194  012F  1D03               	skipz
  3195  0130  292D               	goto	u191_25
  3196  0131  3551               	lslf	??_Store_Datas,w
  3197  0132  3E25               	addlw	(low (_StP| 0))& (0+255)
  3198  0133  0086               	movwf	6
  3199  0134  0187               	clrf	7
  3200  0135  0801               	movf	1,w
  3201  0136  0779               	addwf	Store_Datas@Buffer,w
  3202  0137  00D2               	movwf	??_Store_Datas+1
  3203  0138  0852               	movf	??_Store_Datas+1,w
  3204  0139  0086               	movwf	6
  3205  013A  0187               	clrf	7
  3206  013B  3043               	movlw	67
  3207  013C  0601               	xorwf	1,w
  3208  013D  1D03               	btfss	3,2
  3209  013E  2974               	goto	i1l1333
  3210                           
  3211                           ;Controller_Protocol.c: 61: if (Buffer[StP[bus_number].Buffer_count - 1].upper_data == 3
      +                          ) {
  3212  013F  0875               	movf	Store_Datas@bus_number,w
  3213  0140  00D1               	movwf	??_Store_Datas
  3214  0141  3001               	movlw	1
  3215  0142                     u193_25:	
  3216  0142  35D1               	lslf	??_Store_Datas,f
  3217  0143  3EFF               	addlw	-1
  3218  0144  1D03               	skipz
  3219  0145  2942               	goto	u193_25
  3220  0146  3551               	lslf	??_Store_Datas,w
  3221  0147  3E25               	addlw	(low (_StP| 0))& (0+255)
  3222  0148  0086               	movwf	6
  3223  0149  0187               	clrf	7
  3224  014A  0801               	movf	1,w
  3225  014B  3EFF               	addlw	-1
  3226  014C  0779               	addwf	Store_Datas@Buffer,w
  3227  014D  00D2               	movwf	??_Store_Datas+1
  3228  014E  0852               	movf	??_Store_Datas+1,w
  3229  014F  0086               	movwf	6
  3230  0150  0187               	clrf	7
  3231  0151  0E01               	swapf	1,w
  3232  0152  390F               	andlw	15
  3233  0153  3A03               	xorlw	3
  3234  0154  1D03               	skipz
  3235  0155  2974               	goto	i1l1333
  3236                           
  3237                           ;Controller_Protocol.c: 62: StP[bus_number].Buffer_count = 1;
  3238  0156  0875               	movf	Store_Datas@bus_number,w
  3239  0157  00D1               	movwf	??_Store_Datas
  3240  0158  3001               	movlw	1
  3241  0159                     u195_25:	
  3242  0159  35D1               	lslf	??_Store_Datas,f
  3243  015A  3EFF               	addlw	-1
  3244  015B  1D03               	skipz
  3245  015C  2959               	goto	u195_25
  3246  015D  3551               	lslf	??_Store_Datas,w
  3247  015E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3248  015F  0086               	movwf	6
  3249  0160  0187               	clrf	7
  3250  0161  3001               	movlw	1
  3251  0162  3FC0               	movwi [0]fsr1
  3252  0163  3000               	movlw	0
  3253  0164  3FC1               	movwi [1]fsr1
  3254                           
  3255                           ;Controller_Protocol.c: 63: StP[bus_number].Start_signal_has_come = 0;
  3256  0165  0875               	movf	Store_Datas@bus_number,w
  3257  0166  00D1               	movwf	??_Store_Datas
  3258  0167  3001               	movlw	1
  3259  0168                     u196_25:	
  3260  0168  35D1               	lslf	??_Store_Datas,f
  3261  0169  3EFF               	addlw	-1
  3262  016A  1D03               	skipz
  3263  016B  2968               	goto	u196_25
  3264  016C  3551               	lslf	??_Store_Datas,w
  3265  016D  3E02               	addlw	2
  3266  016E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3267  016F  0086               	movwf	6
  3268  0170  0187               	clrf	7
  3269  0171  0181               	clrf	1
  3270                           
  3271                           ;Controller_Protocol.c: 64: return 2;
  3272  0172  3002               	movlw	2
  3273  0173  0008               	return
  3274  0174                     i1l1333:	
  3275                           
  3276                           ;Controller_Protocol.c: 65: };Controller_Protocol.c: 66: };Controller_Protocol.c: 67: if
      +                           (StP[bus_number].Buffer_count == number_of_receive_data - 1) {
  3277  0174  0875               	movf	Store_Datas@bus_number,w
  3278  0175  00D1               	movwf	??_Store_Datas
  3279  0176  3001               	movlw	1
  3280  0177                     u197_25:	
  3281  0177  35D1               	lslf	??_Store_Datas,f
  3282  0178  3EFF               	addlw	-1
  3283  0179  1D03               	skipz
  3284  017A  2977               	goto	u197_25
  3285  017B  3551               	lslf	??_Store_Datas,w
  3286  017C  3E25               	addlw	(low (_StP| 0))& (0+255)
  3287  017D  0086               	movwf	6
  3288  017E  0187               	clrf	7
  3289  017F  3F40               	moviw [0]fsr1
  3290  0180  00D2               	movwf	??_Store_Datas+1
  3291  0181  3F41               	moviw [1]fsr1
  3292  0182  00D3               	movwf	??_Store_Datas+2
  3293  0183  0873               	movf	Store_Datas@number_of_receive_data,w
  3294  0184  3EFF               	addlw	255
  3295  0185  00D4               	movwf	??_Store_Datas+3
  3296  0186  30FF               	movlw	255
  3297  0187  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3298  0188  00D5               	movwf	??_Store_Datas+4
  3299  0189  0853               	movf	??_Store_Datas+2,w
  3300  018A  0655               	xorwf	??_Store_Datas+4,w
  3301  018B  1D03               	skipz
  3302  018C  298F               	goto	u198_25
  3303  018D  0852               	movf	??_Store_Datas+1,w
  3304  018E  0654               	xorwf	??_Store_Datas+3,w
  3305  018F                     u198_25:	
  3306  018F  1D03               	skipz
  3307  0190  29AD               	goto	i1l1337
  3308                           
  3309                           ;Controller_Protocol.c: 68: StP[bus_number].Buffer_count = 1;
  3310  0191  0875               	movf	Store_Datas@bus_number,w
  3311  0192  00D1               	movwf	??_Store_Datas
  3312  0193  3001               	movlw	1
  3313  0194                     u199_25:	
  3314  0194  35D1               	lslf	??_Store_Datas,f
  3315  0195  3EFF               	addlw	-1
  3316  0196  1D03               	skipz
  3317  0197  2994               	goto	u199_25
  3318  0198  3551               	lslf	??_Store_Datas,w
  3319  0199  3E25               	addlw	(low (_StP| 0))& (0+255)
  3320  019A  0086               	movwf	6
  3321  019B  0187               	clrf	7
  3322  019C  3001               	movlw	1
  3323  019D  3FC0               	movwi [0]fsr1
  3324  019E  3000               	movlw	0
  3325  019F  3FC1               	movwi [1]fsr1
  3326                           
  3327                           ;Controller_Protocol.c: 69: StP[bus_number].Start_signal_has_come = 0;
  3328  01A0  0875               	movf	Store_Datas@bus_number,w
  3329  01A1  00D1               	movwf	??_Store_Datas
  3330  01A2  3001               	movlw	1
  3331  01A3                     u200_25:	
  3332  01A3  35D1               	lslf	??_Store_Datas,f
  3333  01A4  3EFF               	addlw	-1
  3334  01A5  1D03               	skipz
  3335  01A6  29A3               	goto	u200_25
  3336  01A7  3551               	lslf	??_Store_Datas,w
  3337  01A8  3E02               	addlw	2
  3338  01A9                     L3:	
  3339  01A9  3E25               	addlw	(low (_StP| 0))& (0+255)
  3340  01AA  0086               	movwf	6
  3341  01AB  0187               	clrf	7
  3342  01AC  0181               	clrf	1
  3343  01AD                     i1l1337:	
  3344                           
  3345                           ;Controller_Protocol.c: 70: };Controller_Protocol.c: 71: };Controller_Protocol.c: 73: re
      +                          turn 0;
  3346  01AD  3000               	movlw	0
  3347  01AE  0008               	return
  3348  01AF                     __end_of_Store_Datas:	
  3349                           
  3350                           	psect	text18
  3351  0552                     __ptext18:	
  3352 ;; *************** function _EUSART_ERROR_from_master *****************
  3353 ;; Defined at:
  3354 ;;		line 24 in file "communication.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  waste_data      1    1[COMMON] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      unsigned char 
  3361 ;; Registers used:
  3362 ;;		wreg
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3368 ;;      Params:         0       0       0       0
  3369 ;;      Locals:         1       0       0       0
  3370 ;;      Temps:          1       0       0       0
  3371 ;;      Totals:         2       0       0       0
  3372 ;;Total ram usage:        2 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_Reception_from_master
  3378 ;;		_Store_Datas
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _EUSART_ERROR_from_master
  3384  0552                     _EUSART_ERROR_from_master:	
  3385                           
  3386                           ;communication.c: 25: if ((RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1)) {
  3387                           
  3388                           ;incstack = 0
  3389                           ; Regs used in _EUSART_ERROR_from_master: [wreg]
  3390  0552  0023               	movlb	3	; select bank3
  3391  0553  191D               	btfsc	29,2	;volatile
  3392  0554  2D57               	goto	i1l1121
  3393  0555  1C9D               	btfss	29,1	;volatile
  3394  0556  2D5F               	goto	i1l1129
  3395  0557                     i1l1121:	
  3396                           
  3397                           ;communication.c: 27: uint8_t waste_data = RCREG;
  3398  0557  0819               	movf	25,w	;volatile
  3399  0558  00F0               	movwf	??_EUSART_ERROR_from_master
  3400  0559  0870               	movf	??_EUSART_ERROR_from_master,w
  3401  055A  00F1               	movwf	EUSART_ERROR_from_master@waste_data
  3402                           
  3403                           ;communication.c: 29: RCSTAbits.CREN = 0;
  3404  055B  121D               	bcf	29,4	;volatile
  3405                           
  3406                           ;communication.c: 30: RCSTAbits.CREN = 1;
  3407  055C  161D               	bsf	29,4	;volatile
  3408                           
  3409                           ;communication.c: 31: return 1;
  3410  055D  3001               	movlw	1
  3411  055E  0008               	return
  3412  055F                     i1l1129:	
  3413                           
  3414                           ;communication.c: 32: };communication.c: 33: return 0;
  3415  055F  3000               	movlw	0
  3416  0560  0008               	return
  3417  0561                     __end_of_EUSART_ERROR_from_master:	
  3418  007E                     btemp	set	126	;btemp
  3419  007E                     int$flags	set	126
  3420  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     21      72
    BANK1            80      4       4
    BANK2            80      0       0

Pointer List with Targets:

    Store_Datas@Buffer	PTR struct . size(1) Largest target is 15
		 -> Buffer0(BANK0[15]), 

    Store_Datas@EUSART_ERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_ERROR_from_master(), 

    Organize_Datas@Buffer	PTR struct . size(1) Largest target is 15
		 -> Buffer0(BANK0[15]), 

    Organize_Datas@RxData	PTR struct . size(1) Largest target is 12
		 -> RxData0(BANK0[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas
    _Store_Datas->_EUSART_ERROR_from_master

Critical Paths under _main in BANK0

    _main->_Reception_from_master_main
    _SetData->_ChangeAddress
    _ChangeData->_Write_data
    _ChangeAddress->_Write_Address
    _Reception_from_master_main->_Organize_Datas
    _Initialize->_Initialize_Parameters
    _Initialize_Parameters->___bmul

Critical Paths under _INTERRUPT_HANDLER in BANK0

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4    3819
                                             20 BANK0      1     1      0
                                              0 BANK1      4     0      4
                         _Initialize
                     _Organize_Datas
         _Reception_from_master_main
                            _SetData
 ---------------------------------------------------------------------------------
 (1) _SetData                                              1     1      0    1025
                                             13 BANK0      1     1      0
                      _ChangeAddress
                         _ChangeData
 ---------------------------------------------------------------------------------
 (2) _ChangeData                                           0     0      0     784
                         _Write_data
 ---------------------------------------------------------------------------------
 (3) _Write_data                                           2     0      2     784
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ChangeAddress                                        3     3      0     241
                                             10 BANK0      3     3      0
                      _Write_Address
 ---------------------------------------------------------------------------------
 (3) _Write_Address                                        2     0      2     218
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Reception_from_master_main                           1     1      0    1182
                                             19 BANK0      1     1      0
                     _Organize_Datas
 ---------------------------------------------------------------------------------
 (2) _Organize_Datas                                      11     6      5    1182
                                              8 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           1     1      0     430
                                             13 BANK0      1     1      0
              _Initialize_Parameters
              _Oscillator_Initialize
                     _Pin_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Pin_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Initialize_Parameters                                1     1      0     430
                                             12 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     430
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_HANDLER                                    0     0      0    1395
              _Reception_from_master
 ---------------------------------------------------------------------------------
 (5) _Reception_from_master                                5     5      0    1395
                                             10 COMMON     3     3      0
                                              6 BANK0      2     2      0
                        _Store_Datas
                _slave_address_check
 ---------------------------------------------------------------------------------
 (6) _slave_address_check                                  7     5      2     263
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (6) _Store_Datas                                         14     7      7    1042
                                              2 COMMON     8     1      7
                                              0 BANK0      6     6      0
           _EUSART_ERROR_from_master *
 ---------------------------------------------------------------------------------
 (7) _EUSART_ERROR_from_master                             2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
     _Initialize_Parameters
       ___bmul
     _Oscillator_Initialize
     _Pin_Initialize
     _UART_Initialize
   _Organize_Datas
   _Reception_from_master_main
     _Organize_Datas
   _SetData
     _ChangeAddress
       _Write_Address
     _ChangeData
       _Write_data

 _INTERRUPT_HANDLER (ROOT)
   _Reception_from_master
     _Store_Datas
       _EUSART_ERROR_from_master *
     _slave_address_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      59       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     15      48       6       90.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      4       4       8        5.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      59      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jul 17 17:07:57 2019

                         ___bmul@product 005B                 Store_Datas@received_data 0072  
                            __CFG_CP$OFF 0000                                       _OP 0029  
                                    l200 01CF                                      l203 0296  
                                    l205 02EA                             __CFG_CPD$OFF 0000  
                                    _SeP 0020                                      _StP 0025  
                  _Oscillator_Initialize 0567       EUSART_ERROR_from_master@waste_data 0071  
                           __CFG_BORV$HI 0000                                      wreg 0009  
                           __CFG_LVP$OFF 0000                               _ChangeData 036C  
                                   l1201 03B0                                     l1135 0543  
                                   l1207 03BF                                     l1153 0284  
                                   l1139 0549                                     l1157 02D8  
                                   l1167 04A6                                     l1191 0391  
                                   l1183 037A                                     l1193 0399  
                                   l1185 0382                                     l1275 033A  
                                   l1269 031A                                     l1383 04D3  
                                   l1199 03A8                                     l1465 0468  
                                   l1459 0452                                     u1110 04E8  
                                   u1104 04E2                                     u1130 04F0  
                                   u1210 042C                                     u1124 04EA  
                                   u1204 0426                                     u1230 0434  
                                   u1150 0414                                     u1224 042E  
                                   u1090 04E0                                     u1250 043C  
                                   u1170 041C                                     u1244 0436  
                                   u1164 0416                                     u1405 0230  
                                   u1270 0444                                     u1190 0424  
                                   u1415 0246                                     u1264 043E  
                                   u1184 041E                                     u1505 02DB  
                                   u1425 025B                                     u1290 044C  
                                   u1515 02ED                                     u1355 01B4  
                                   u1284 0446                                     u1525 02FE  
                                   u1445 0274                                     u1365 01C4  
                                   u1535 01D2                                     u1455 0287  
                                   u1375 01EE                                     u1545 01E8  
                                   u1465 0299                                     u1385 0203  
                                   u1475 02AF                                     u1395 021A  
                                   u1655 0318                                     u1495 02C8  
                                   u1665 031E                                     u1675 0338  
                                   u1685 0346                                     u1695 034C  
                           __CFG_WRT$OFF 0000                                     _main 044F  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                                     _zero 002F  
                 ?_Reception_from_master 0070                                     start 000E  
                          __CFG_IESO$OFF 0000                        ___bmul@multiplier 005C  
                        __end_of_SetData 0509                         ?_UART_Initialize 0070  
               Organize_Datas@bus_number 005C                            __CFG_PLLEN$ON 0000  
                 __size_of_Write_Address 0019                                    ?_main 00A0  
                          __CFG_WDTE$OFF 0000                    Store_Datas@bus_number 0075  
                                  i1l125 000C                                    i1l215 00A2  
                                  _RCREG 0199                           __CFG_FCMEN$OFF 0000  
       slave_address_check@slave_address 0070                           _Organize_Datas 01AF  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
Reception_from_master@Receive_data_count 0034                    _Initialize_Parameters 030C  
                                  status 0003             Organize_Datas@number_of_data 005A  
                                  wtemp0 007E                           __CFG_MCLRE$OFF 0000  
                        __initialization 0010              ?_Reception_from_master_main 0070  
                           __end_of_main 0473                               _Initialize 0509  
                 ?_Oscillator_Initialize 0070                                   ??_main 0065  
                 __end_of_Organize_Datas 030C                              ?_ChangeData 0070  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 i1l1121 0557                                   i1l1311 00C2  
                                 i1l1129 055F                                   i1l1323 0114  
                                 i1l1307 00AC                                   i1l1315 00C4  
                                 i1l1411 0403                                   i1l1333 0174  
                                 i1l1405 03ED                                   i1l1407 03EF  
                                 i1l1337 01AD                                   i1l1353 0493  
                                 u200_25 01A3                                   i1l1359 0495  
                                 i1l1299 0057                            _Write_Address 04DA  
                                 u203_25 0484         __end_of_EUSART_ERROR_from_master 0561  
                                 u172_25 0030                                   u181_25 0097  
                                 u173_25 003D                                   u190_25 011A  
                                 u182_25 00A5                                   u174_25 004B  
                                 u191_25 012D                                   u175_25 005B  
                                 u184_25 00B6                                   u193_25 0142  
                                 u185_25 00C7                                   u177_25 006C  
                                 u186_25 00D7                                   u178_25 0080  
                                 u195_25 0159                                   u187_25 00F3  
                                 u196_25 0168                                   u188_25 00F9  
                                 u197_25 0177                                   u189_25 0108  
                                 u198_25 018F                                   u199_25 0194  
                                 _OSCCON 0099                                   _SPBRGH 019C  
                                 _SPBRGL 019B                           __CFG_PWRTE$OFF 0000  
                              ??_SetData 005E                                   ___bmul 0540  
           __size_of_slave_address_check 0024                   __size_of_ChangeAddress 0023  
                        ?_Organize_Datas 0059                   ?_Initialize_Parameters 0070  
                         ?_Write_Address 0059                  __end_of__initialization 001F  
                    ___bmul@multiplicand 0059                           __pcstackCOMMON 0070  
                           __pidataBANK0 056B                               _Write_data 040E  
                    __size_of_ChangeData 005B                              ?_Initialize 0070  
    __size_of_Reception_from_master_main 0020                  ??_Reception_from_master 007A  
                             __pbssBANK0 0020                            ??_Store_Datas 0051  
                        __CFG_VCAPEN$OFF 0000                            _ChangeAddress 0497  
                Store_Datas@EUSART_ERROR 0077                 _EUSART_ERROR_from_master 0552  
                             __pmaintext 044F                                  ?___bmul 0059  
                             __pintentry 0004                  __size_of_Pin_Initialize 0012  
                      Store_Datas@Buffer 0079                          ??_Write_Address 005B  
                    __size_of_Initialize 0013                           ?_ChangeAddress 0070  
                                _Buffer0 0036                                  _RxData0 0045  
                                _SetData 04F3                       _not_of_before_data 0033  
                    __end_of_Store_Datas 01AF                          __size_of___bmul 0012  
                ??_Oscillator_Initialize 0059                              ?_Write_data 0059  
                                _address 0031                          __CFG_STVREN$OFF 0000  
                                __ptext1 04F3                                  __ptext2 036C  
                                __ptext3 040E                                  __ptext4 0497  
                                __ptext5 04DA                                  __ptext6 04BA  
                                __ptext7 01AF                                  __ptext8 0509  
                                __ptext9 051C                        _INTERRUPT_HANDLER 0004  
                     ?_INTERRUPT_HANDLER 0070                 __size_of_UART_Initialize 0012  
                           ??_ChangeData 005B                                  clrloop0 0562  
                   end_of_initialization 001F                      _slave_address_check 0473  
                    ??_INTERRUPT_HANDLER 007D      Reception_from_master@error_complete 0058  
                              _RCSTAbits 019D                     ?_slave_address_check 0070  
         slave_address_check@sample_data 0076                __end_of_INTERRUPT_HANDLER 000E  
                     __end_of_ChangeData 03C7                     _slave_different_flag 0066  
                       ??_Organize_Datas 005E                         __CFG_FOSC$INTOSC 0000  
                ??_Initialize_Parameters 005D                                _TRISAbits 008C  
                              _TRISBbits 008D                                _TRISCbits 008E  
                        ??_ChangeAddress 005B                      __size_of_Write_data 0041  
                            _Store_Datas 0023                                _TXSTAbits 019E  
                  ??_slave_address_check 0072                           _Pin_Initialize 052E  
                         __end_of___bmul 0552                             ??_Initialize 005E  
                            _BAUDCONbits 019F        Store_Datas@number_of_receive_data 0073  
                    start_initialization 0010               ??_EUSART_ERROR_from_master 0070  
                      ??_UART_Initialize 0059           __size_of_Reception_from_master 0047  
          __end_of_Reception_from_master 040E                       __end_of_Initialize 051C  
                   Write_Address@address 0059                   __end_of_Pin_Initialize 0540  
                               ??___bmul 005A                              __pdataBANK0 0066  
             __size_of_INTERRUPT_HANDLER 000A                        ChangeAddress@None 005C  
                   Write_data@servo_data 0059                                ___latbits 0001  
                          __pcstackBANK0 0051                            __pcstackBANK1 00A0  
                           _Receive_flag 0067                                 ?_SetData 0070  
                        ?_Pin_Initialize 0070             ??_Reception_from_master_main 0064  
                           ??_Write_data 005B       Reception_from_master@slave_address 0057  
         __size_of_Oscillator_Initialize 0004            __end_of_Oscillator_Initialize 056B  
                  __end_of_Write_Address 04F3                       __end_of_Write_data 044F  
                               _LATAbits 010C                                 _LATBbits 010D  
                               _LATCbits 010E                                clear_ram0 0561  
                               _PIE1bits 0091                                 _PIR1bits 0011  
                 Initialize_Parameters@i 002D                           _address_status 0035  
         __size_of_Initialize_Parameters 0060            __end_of_Initialize_Parameters 036C  
                           ?_Store_Datas 0072                         __size_of_SetData 0016  
          slave_address_check@data_count 0075                          _UART_Initialize 051C  
                               __ptext10 052E                                 __ptext11 0567  
                               __ptext12 030C                                 __ptext13 0540  
                               __ptext15 03C7                                 __ptext16 0473  
                               __ptext17 0023                                 __ptext18 0552  
                  __end_of_ChangeAddress 04BA                            __size_of_main 0024  
            __end_of_slave_address_check 0497                     Organize_Datas@Buffer 0059  
     __end_of_Reception_from_master_main 04DA               _Reception_from_master_main 04BA  
                   Organize_Datas@RxData 0063                                 int$flags 007E  
                               main@argc 00A0                                 main@argv 00A2  
                             _INTCONbits 000B                                 intlevel1 0000  
                __size_of_Organize_Datas 015D                         ??_Pin_Initialize 0059  
                      __CFG_CLKOUTEN$OFF 0000                    _Reception_from_master 03C7  
      __size_of_EUSART_ERROR_from_master 000F                ?_EUSART_ERROR_from_master 0070  
                __end_of_UART_Initialize 052E            slave_address_check@slave_flag 0071  
                   __size_of_Store_Datas 018C  
