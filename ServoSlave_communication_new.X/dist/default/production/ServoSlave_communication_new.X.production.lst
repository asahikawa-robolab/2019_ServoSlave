

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Aug 06 15:11:42 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F1933
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.00
    33                           ; Generated 27/05/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1933 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020D                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029F                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031C                     	;# 
   194  031D                     	;# 
   195  031E                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0791                     	;# 
   206  0792                     	;# 
   207  0793                     	;# 
   208  0794                     	;# 
   209  0795                     	;# 
   210  0798                     	;# 
   211  0799                     	;# 
   212  07A0                     	;# 
   213  07A1                     	;# 
   214  07A3                     	;# 
   215  07A4                     	;# 
   216  07A6                     	;# 
   217  07A7                     	;# 
   218  07A9                     	;# 
   219  07AA                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  0110                     	;# 
   283  0111                     	;# 
   284  0112                     	;# 
   285  0113                     	;# 
   286  0114                     	;# 
   287  0115                     	;# 
   288  0116                     	;# 
   289  0117                     	;# 
   290  0118                     	;# 
   291  0119                     	;# 
   292  011A                     	;# 
   293  011B                     	;# 
   294  011D                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020D                     	;# 
   318  0210                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0291                     	;# 
   328  0291                     	;# 
   329  0292                     	;# 
   330  0293                     	;# 
   331  0294                     	;# 
   332  0295                     	;# 
   333  0295                     	;# 
   334  0296                     	;# 
   335  0298                     	;# 
   336  0298                     	;# 
   337  0299                     	;# 
   338  029A                     	;# 
   339  029B                     	;# 
   340  029C                     	;# 
   341  029C                     	;# 
   342  029D                     	;# 
   343  029E                     	;# 
   344  029F                     	;# 
   345  0311                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0315                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0318                     	;# 
   354  0318                     	;# 
   355  0319                     	;# 
   356  031A                     	;# 
   357  031C                     	;# 
   358  031C                     	;# 
   359  031D                     	;# 
   360  031E                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  0415                     	;# 
   365  0416                     	;# 
   366  0417                     	;# 
   367  041C                     	;# 
   368  041D                     	;# 
   369  041E                     	;# 
   370  0791                     	;# 
   371  0792                     	;# 
   372  0793                     	;# 
   373  0794                     	;# 
   374  0795                     	;# 
   375  0798                     	;# 
   376  0799                     	;# 
   377  07A0                     	;# 
   378  07A1                     	;# 
   379  07A3                     	;# 
   380  07A4                     	;# 
   381  07A6                     	;# 
   382  07A7                     	;# 
   383  07A9                     	;# 
   384  07AA                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  000E                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0015                     	;# 
   416  0016                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001C                     	;# 
   424  001E                     	;# 
   425  001F                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  0110                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011D                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0193                     	;# 
   468  0194                     	;# 
   469  0195                     	;# 
   470  0196                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019B                     	;# 
   474  019B                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019C                     	;# 
   479  019D                     	;# 
   480  019E                     	;# 
   481  019F                     	;# 
   482  020D                     	;# 
   483  0210                     	;# 
   484  0211                     	;# 
   485  0212                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0215                     	;# 
   489  0215                     	;# 
   490  0216                     	;# 
   491  0217                     	;# 
   492  0291                     	;# 
   493  0291                     	;# 
   494  0292                     	;# 
   495  0293                     	;# 
   496  0294                     	;# 
   497  0295                     	;# 
   498  0295                     	;# 
   499  0296                     	;# 
   500  0298                     	;# 
   501  0298                     	;# 
   502  0299                     	;# 
   503  029A                     	;# 
   504  029B                     	;# 
   505  029C                     	;# 
   506  029C                     	;# 
   507  029D                     	;# 
   508  029E                     	;# 
   509  029F                     	;# 
   510  0311                     	;# 
   511  0311                     	;# 
   512  0312                     	;# 
   513  0313                     	;# 
   514  0314                     	;# 
   515  0315                     	;# 
   516  0315                     	;# 
   517  0316                     	;# 
   518  0318                     	;# 
   519  0318                     	;# 
   520  0319                     	;# 
   521  031A                     	;# 
   522  031C                     	;# 
   523  031C                     	;# 
   524  031D                     	;# 
   525  031E                     	;# 
   526  0394                     	;# 
   527  0395                     	;# 
   528  0396                     	;# 
   529  0415                     	;# 
   530  0416                     	;# 
   531  0417                     	;# 
   532  041C                     	;# 
   533  041D                     	;# 
   534  041E                     	;# 
   535  0791                     	;# 
   536  0792                     	;# 
   537  0793                     	;# 
   538  0794                     	;# 
   539  0795                     	;# 
   540  0798                     	;# 
   541  0799                     	;# 
   542  07A0                     	;# 
   543  07A1                     	;# 
   544  07A3                     	;# 
   545  07A4                     	;# 
   546  07A6                     	;# 
   547  07A7                     	;# 
   548  07A9                     	;# 
   549  07AA                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561                           
   562                           	psect	idataBANK0
   563  053F                     __pidataBANK0:	
   564                           
   565                           ;initializer for _slave_different_flag
   566  053F  3402               	retlw	2
   567                           
   568                           ;initializer for _Receive_flag
   569  0540  3401               	retlw	1
   570  000B                     _INTCONbits	set	11
   571  0011                     _PIR1bits	set	17
   572  0091                     _PIE1bits	set	145
   573  008D                     _TRISBbits	set	141
   574  008C                     _TRISAbits	set	140
   575  008E                     _TRISCbits	set	142
   576  0099                     _OSCCON	set	153
   577  010C                     _LATAbits	set	268
   578  010D                     _LATBbits	set	269
   579  010E                     _LATCbits	set	270
   580  0199                     _RCREG	set	409
   581  019D                     _RCSTAbits	set	413
   582  019F                     _BAUDCONbits	set	415
   583  019E                     _TXSTAbits	set	414
   584  019B                     _SPBRGL	set	411
   585  019C                     _SPBRGH	set	412
   586  018D                     _ANSELB	set	397
   587  018C                     _ANSELA	set	396
   588                           
   589                           ; #config settings
   590  0000                     
   591                           	psect	cinit
   592  0010                     start_initialization:	
   593  0010                     __initialization:	
   594                           
   595                           ; Initialize objects allocated to BANK0
   596  0010  3185  253F  3180   	fcall	__pidataBANK0	;fetch initializer
   597  0013  00E6               	movwf	__pdataBANK0& (0+127)
   598  0014  3185  2540  3180   	fcall	__pidataBANK0+1	;fetch initializer
   599  0017  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   600                           
   601                           ; Clear objects allocated to BANK0
   602  0018  3020               	movlw	low __pbssBANK0
   603  0019  0084               	movwf	4
   604  001A  3000               	movlw	high __pbssBANK0
   605  001B  0085               	movwf	5
   606  001C  302D               	movlw	45
   607  001D  3185  2535         	fcall	clear_ram0
   608  001F                     end_of_initialization:	
   609                           ;End of C runtime variable initialization code
   610                           
   611  001F                     __end_of__initialization:	
   612  001F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   613  0020  0020               	movlb	0
   614  0021  3184  2C23         	ljmp	_main	;jump to C main() function
   615                           
   616                           	psect	bssBANK0
   617  0020                     __pbssBANK0:	
   618  0020                     _SeP:	
   619  0020                     	ds	5
   620  0025                     _StP:	
   621  0025                     	ds	4
   622  0029                     _OP:	
   623  0029                     	ds	4
   624  002D                     Initialize_Parameters@i:	
   625  002D                     	ds	2
   626  002F                     _zero:	
   627  002F                     	ds	2
   628  0031                     _address:	
   629  0031                     	ds	2
   630  0033                     _not_of_before_data:	
   631  0033                     	ds	1
   632  0034                     Reception_from_master@Receive_data_count:	
   633  0034                     	ds	1
   634  0035                     _address_status:	
   635  0035                     	ds	1
   636  0036                     _Buffer0:	
   637  0036                     	ds	13
   638  0043                     _RxData0:	
   639  0043                     	ds	10
   640                           
   641                           	psect	dataBANK0
   642  0066                     __pdataBANK0:	
   643  0066                     _slave_different_flag:	
   644  0066                     	ds	1
   645  0067                     _Receive_flag:	
   646  0067                     	ds	1
   647                           
   648                           	psect	clrtext
   649  0535                     clear_ram0:	
   650                           ;	Called with FSR0 containing the base address, and
   651                           ;	WREG with the size to clear
   652                           
   653  0535  0064               	clrwdt	;clear the watchdog before getting into this loop
   654  0536                     clrloop0:	
   655  0536  0180               	clrf	0	;clear RAM location pointed to by FSR
   656  0537  3101               	addfsr 0,1
   657  0538  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   658  0539  2D36               	goto	clrloop0	;have we reached the end yet?
   659  053A  3400               	retlw	0	;all done for this memory range, return
   660                           
   661                           	psect	cstackCOMMON
   662  0070                     __pcstackCOMMON:	
   663  0070                     ?_Initialize:	
   664  0070                     ?_Reception_from_master_main:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_SetData:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_ChangeAddress:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_ChangeData:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_Reception_from_master:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Oscillator_Initialize:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Pin_Initialize:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_UART_Initialize:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_Initialize_Parameters:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_slave_address_check:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_INTERRUPT_HANDLER:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_EUSART_ERROR_from_master:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_EUSART_ERROR_from_master:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     slave_address_check@slave_address:	
   704                           ; 1 bytes @ 0x0
   705                           
   706                           
   707                           ; 1 bytes @ 0x0
   708  0070                     	ds	1
   709  0071                     EUSART_ERROR_from_master@waste_data:	
   710  0071                     slave_address_check@slave_flag:	
   711                           ; 1 bytes @ 0x1
   712                           
   713                           
   714                           ; 1 bytes @ 0x1
   715  0071                     	ds	1
   716  0072                     ?_Store_Datas:	
   717  0072                     ??_slave_address_check:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     Store_Datas@received_data:	
   721                           ; 1 bytes @ 0x2
   722                           
   723                           
   724                           ; 1 bytes @ 0x2
   725  0072                     	ds	1
   726  0073                     Store_Datas@number_of_receive_data:	
   727                           
   728                           ; 2 bytes @ 0x3
   729  0073                     	ds	2
   730  0075                     slave_address_check@data_count:	
   731  0075                     Store_Datas@bus_number:	
   732                           ; 1 bytes @ 0x5
   733                           
   734                           
   735                           ; 2 bytes @ 0x5
   736  0075                     	ds	1
   737  0076                     slave_address_check@sample_data:	
   738                           
   739                           ; 1 bytes @ 0x6
   740  0076                     	ds	1
   741  0077                     Store_Datas@EUSART_ERROR:	
   742                           
   743                           ; 2 bytes @ 0x7
   744  0077                     	ds	2
   745  0079                     Store_Datas@Buffer:	
   746                           
   747                           ; 1 bytes @ 0x9
   748  0079                     	ds	1
   749  007A                     ??_Reception_from_master:	
   750                           
   751                           ; 1 bytes @ 0xA
   752  007A                     	ds	3
   753  007D                     ??_INTERRUPT_HANDLER:	
   754                           
   755                           	psect	cstackBANK0
   756  004D                     __pcstackBANK0:	
   757                           ; 1 bytes @ 0xD
   758                           
   759  004D                     ??_Store_Datas:	
   760                           
   761                           ; 1 bytes @ 0x0
   762  004D                     	ds	6
   763  0053                     Reception_from_master@slave_address:	
   764                           
   765                           ; 1 bytes @ 0x6
   766  0053                     	ds	1
   767  0054                     Reception_from_master@error_complete:	
   768                           
   769                           ; 1 bytes @ 0x7
   770  0054                     	ds	1
   771  0055                     ?_Organize_Datas:	
   772  0055                     ?_Write_Address:	
   773                           ; 1 bytes @ 0x8
   774                           
   775  0055                     ?_Write_data:	
   776                           ; 1 bytes @ 0x8
   777                           
   778  0055                     ??_Oscillator_Initialize:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0055                     ??_Pin_Initialize:	
   782                           ; 1 bytes @ 0x8
   783                           
   784  0055                     ??_UART_Initialize:	
   785                           ; 1 bytes @ 0x8
   786                           
   787  0055                     ?___bmul:	
   788                           ; 1 bytes @ 0x8
   789                           
   790  0055                     Organize_Datas@Buffer:	
   791                           ; 1 bytes @ 0x8
   792                           
   793  0055                     ___bmul@multiplicand:	
   794                           ; 1 bytes @ 0x8
   795                           
   796  0055                     Write_Address@address:	
   797                           ; 1 bytes @ 0x8
   798                           
   799  0055                     Write_data@servo_data:	
   800                           ; 2 bytes @ 0x8
   801                           
   802                           
   803                           ; 2 bytes @ 0x8
   804  0055                     	ds	1
   805  0056                     ??___bmul:	
   806  0056                     Organize_Datas@number_of_data:	
   807                           ; 1 bytes @ 0x9
   808                           
   809                           
   810                           ; 2 bytes @ 0x9
   811  0056                     	ds	1
   812  0057                     ??_ChangeAddress:	
   813  0057                     ??_ChangeData:	
   814                           ; 1 bytes @ 0xA
   815                           
   816  0057                     ??_Write_Address:	
   817                           ; 1 bytes @ 0xA
   818                           
   819  0057                     ??_Write_data:	
   820                           ; 1 bytes @ 0xA
   821                           
   822  0057                     ___bmul@product:	
   823                           ; 1 bytes @ 0xA
   824                           
   825                           
   826                           ; 1 bytes @ 0xA
   827  0057                     	ds	1
   828  0058                     ___bmul@multiplier:	
   829  0058                     ChangeAddress@None:	
   830                           ; 1 bytes @ 0xB
   831                           
   832  0058                     Organize_Datas@bus_number:	
   833                           ; 2 bytes @ 0xB
   834                           
   835                           
   836                           ; 2 bytes @ 0xB
   837  0058                     	ds	1
   838  0059                     ??_Initialize_Parameters:	
   839                           
   840                           ; 1 bytes @ 0xC
   841  0059                     	ds	1
   842  005A                     ??_Initialize:	
   843  005A                     ??_Organize_Datas:	
   844                           ; 1 bytes @ 0xD
   845                           
   846  005A                     ??_SetData:	
   847                           ; 1 bytes @ 0xD
   848                           
   849                           
   850                           ; 1 bytes @ 0xD
   851  005A                     	ds	5
   852  005F                     Organize_Datas@RxData:	
   853                           
   854                           ; 1 bytes @ 0x12
   855  005F                     	ds	1
   856  0060                     ??_Reception_from_master_main:	
   857                           
   858                           ; 1 bytes @ 0x13
   859  0060                     	ds	1
   860  0061                     ?_main:	
   861  0061                     main@argc:	
   862                           ; 2 bytes @ 0x14
   863                           
   864                           
   865                           ; 2 bytes @ 0x14
   866  0061                     	ds	2
   867  0063                     main@argv:	
   868                           
   869                           ; 2 bytes @ 0x16
   870  0063                     	ds	2
   871  0065                     ??_main:	
   872                           
   873                           ; 1 bytes @ 0x18
   874  0065                     	ds	1
   875                           
   876                           	psect	maintext
   877  0423                     __pmaintext:	
   878 ;;
   879 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   880 ;;
   881 ;; *************** function _main *****************
   882 ;; Defined at:
   883 ;;		line 111 in file "main.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  argc            2   20[BANK0 ] int 
   886 ;;  argv            2   22[BANK0 ] PTR PTR unsigned char 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2   20[BANK0 ] int 
   891 ;; Registers used:
   892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : B1F/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   898 ;;      Params:         0       4       0       0
   899 ;;      Locals:         0       0       0       0
   900 ;;      Temps:          0       1       0       0
   901 ;;      Totals:         0       5       0       0
   902 ;;Total ram usage:        5 bytes
   903 ;; Hardware stack levels required when called:    7
   904 ;; This function calls:
   905 ;;		_Initialize
   906 ;;		_Organize_Datas
   907 ;;		_Reception_from_master_main
   908 ;;		_SetData
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           
   915                           ;psect for function _main
   916  0423                     _main:	
   917                           
   918                           ;main.c: 112: Initialize();
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   922  0423  3184  24DD  3184   	fcall	_Initialize
   923  0426                     l1379:	
   924                           ;main.c: 115: while (Receive_flag != 0);
   925                           
   926  0426  0020               	movlb	0	; select bank0
   927  0427  0867               	movf	_Receive_flag,w
   928  0428  1D03               	btfss	3,2
   929  0429  2C26               	goto	l1379
   930                           
   931                           ;main.c: 116: Organize_Datas(RxData0, Buffer0, 5, 0);
   932  042A  3036               	movlw	(low (_Buffer0| 0))& (0+255)
   933  042B  00E5               	movwf	??_main
   934  042C  0865               	movf	??_main,w
   935  042D  00D5               	movwf	Organize_Datas@Buffer
   936  042E  3005               	movlw	5
   937  042F  00D6               	movwf	Organize_Datas@number_of_data
   938  0430  3000               	movlw	0
   939  0431  00D7               	movwf	Organize_Datas@number_of_data+1
   940  0432  3000               	movlw	0
   941  0433  00D8               	movwf	Organize_Datas@bus_number
   942  0434  00D9               	movwf	Organize_Datas@bus_number+1
   943  0435  3043               	movlw	(low (_RxData0| 0))& (0+255)
   944  0436  3181  21AF  3184   	fcall	_Organize_Datas
   945                           
   946                           ;main.c: 117: Receive_flag = 1;
   947  0439  0020               	movlb	0	; select bank0
   948  043A  01E7               	clrf	_Receive_flag
   949  043B  0AE7               	incf	_Receive_flag,f
   950  043C                     l1385:	
   951                           ;main.c: 120: while (1) {
   952                           
   953                           
   954                           ;main.c: 121: if (Receive_flag == 0) {
   955  043C  0020               	movlb	0	; select bank0
   956  043D  0867               	movf	_Receive_flag,w
   957  043E  1D03               	btfss	3,2
   958  043F  2C3C               	goto	l1385
   959                           
   960                           ;main.c: 122: Reception_from_master_main();
   961  0440  3184  248E  3184   	fcall	_Reception_from_master_main
   962                           
   963                           ;main.c: 123: SetData();
   964  0443  3184  24C7  3184   	fcall	_SetData
   965  0446  2C3C               	goto	l1385
   966  0447                     __end_of_main:	
   967                           ;main.c: 125: };main.c: 126: };main.c: 128: return (0);;	Return value of _main is never 
      +                          used
   968                           
   969                           
   970                           	psect	text1
   971  04C7                     __ptext1:	
   972 ;; *************** function _SetData *****************
   973 ;; Defined at:
   974 ;;		line 131 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   988 ;;      Params:         0       0       0       0
   989 ;;      Locals:         0       0       0       0
   990 ;;      Temps:          0       1       0       0
   991 ;;      Totals:         0       1       0       0
   992 ;;Total ram usage:        1 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    6
   995 ;; This function calls:
   996 ;;		_ChangeAddress
   997 ;;		_ChangeData
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _SetData
  1005  04C7                     _SetData:	
  1006                           
  1007                           ;main.c: 132: LATCbits.LATC4 ^= 1;
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _SetData: [wreg+status,2+status,0+pclath+cstack]
  1011  04C7  0022               	movlb	2	; select bank2
  1012  04C8  0E0E               	swapf	14,w	;volatile
  1013  04C9  3901               	andlw	1
  1014  04CA  0020               	movlb	0	; select bank0
  1015  04CB  00DA               	movwf	??_SetData
  1016  04CC  3001               	movlw	1
  1017  04CD  06DA               	xorwf	??_SetData,f
  1018  04CE  0EDA               	swapf	??_SetData,f
  1019  04CF  0022               	movlb	2	; select bank2
  1020  04D0  080E               	movf	14,w	;volatile
  1021  04D1  0020               	movlb	0	; select bank0
  1022  04D2  065A               	xorwf	??_SetData,w
  1023  04D3  39EF               	andlw	-17
  1024  04D4  065A               	xorwf	??_SetData,w
  1025  04D5  0022               	movlb	2	; select bank2
  1026  04D6  008E               	movwf	14	;volatile
  1027                           
  1028                           ;main.c: 134: ChangeAddress();
  1029  04D7  3184  246B  3184   	fcall	_ChangeAddress
  1030                           
  1031                           ;main.c: 135: ChangeData();
  1032  04DA  3183  23F4         	fcall	_ChangeData
  1033  04DC  0008               	return
  1034  04DD                     __end_of_SetData:	
  1035                           
  1036                           	psect	text2
  1037  03F4                     __ptext2:	
  1038 ;; *************** function _ChangeData *****************
  1039 ;; Defined at:
  1040 ;;		line 178 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1054 ;;      Params:         0       0       0       0
  1055 ;;      Locals:         0       0       0       0
  1056 ;;      Temps:          0       0       0       0
  1057 ;;      Totals:         0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    5
  1061 ;; This function calls:
  1062 ;;		_Write_data
  1063 ;; This function is called by:
  1064 ;;		_SetData
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _ChangeData
  1070  03F4                     _ChangeData:	
  1071                           
  1072                           ;main.c: 181: if (address.all_data == 1) {
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _ChangeData: [wreg+status,2+status,0+pclath+cstack]
  1076  03F4  0020               	movlb	0	; select bank0
  1077  03F5  0331               	decf	_address,w
  1078  03F6  1D03               	btfss	3,2
  1079  03F7  2BFF               	goto	l1157
  1080                           
  1081                           ;main.c: 182: Write_data(RxData0[1]);
  1082  03F8  0846               	movf	_RxData0+3,w
  1083  03F9  00D6               	movwf	Write_data@servo_data+1
  1084  03FA  0845               	movf	_RxData0+2,w
  1085  03FB  00D5               	movwf	Write_data@servo_data
  1086  03FC  3183  23B3         	fcall	_Write_data
  1087                           
  1088                           ;main.c: 183: } else if (address.all_data == 2) {
  1089  03FE  0008               	return
  1090  03FF                     l1157:	
  1091  03FF  3002               	movlw	2
  1092  0400  0020               	movlb	0	; select bank0
  1093  0401  0631               	xorwf	_address,w
  1094  0402  1D03               	btfss	3,2
  1095  0403  2C0B               	goto	l1161
  1096                           
  1097                           ;main.c: 184: Write_data(RxData0[2]);
  1098  0404  0848               	movf	_RxData0+5,w
  1099  0405  00D6               	movwf	Write_data@servo_data+1
  1100  0406  0847               	movf	_RxData0+4,w
  1101  0407  00D5               	movwf	Write_data@servo_data
  1102  0408  3183  23B3         	fcall	_Write_data
  1103                           
  1104                           ;main.c: 185: } else if (address.all_data == 3) {
  1105  040A  0008               	return
  1106  040B                     l1161:	
  1107  040B  3003               	movlw	3
  1108  040C  0020               	movlb	0	; select bank0
  1109  040D  0631               	xorwf	_address,w
  1110  040E  1D03               	btfss	3,2
  1111  040F  2C17               	goto	l1165
  1112                           
  1113                           ;main.c: 186: Write_data(RxData0[3]);
  1114  0410  084A               	movf	_RxData0+7,w
  1115  0411  00D6               	movwf	Write_data@servo_data+1
  1116  0412  0849               	movf	_RxData0+6,w
  1117  0413  00D5               	movwf	Write_data@servo_data
  1118  0414  3183  23B3         	fcall	_Write_data
  1119                           
  1120                           ;main.c: 187: } else if (address.all_data == 4) {
  1121  0416  0008               	return
  1122  0417                     l1165:	
  1123  0417  3004               	movlw	4
  1124  0418  0020               	movlb	0	; select bank0
  1125  0419  0631               	xorwf	_address,w
  1126  041A  1D03               	btfss	3,2
  1127  041B  0008               	return
  1128                           
  1129                           ;main.c: 188: Write_data(RxData0[4]);
  1130  041C  084C               	movf	_RxData0+9,w
  1131  041D  00D6               	movwf	Write_data@servo_data+1
  1132  041E  084B               	movf	_RxData0+8,w
  1133  041F  00D5               	movwf	Write_data@servo_data
  1134  0420  3183  23B3         	fcall	_Write_data
  1135                           
  1136                           ;main.c: 189: } else;
  1137  0422  0008               	return
  1138  0423                     __end_of_ChangeData:	
  1139                           
  1140                           	psect	text3
  1141  03B3                     __ptext3:	
  1142 ;; *************** function _Write_data *****************
  1143 ;; Defined at:
  1144 ;;		line 193 in file "main.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;  servo_data      2    8[BANK0 ] struct .
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		None
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1158 ;;      Params:         0       2       0       0
  1159 ;;      Locals:         0       0       0       0
  1160 ;;      Temps:          0       0       0       0
  1161 ;;      Totals:         0       2       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; Hardware stack levels required when called:    4
  1165 ;; This function calls:
  1166 ;;		Nothing
  1167 ;; This function is called by:
  1168 ;;		_ChangeData
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _Write_data
  1174  03B3                     _Write_data:	
  1175                           
  1176                           ;main.c: 195: LATAbits.LATA0 = servo_data.data0;
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _Write_data: []
  1180  03B3  0020               	movlb	0	; select bank0
  1181  03B4  1C55               	btfss	Write_data@servo_data,0
  1182  03B5  2BB9               	goto	u1110
  1183  03B6  0022               	movlb	2	; select bank2
  1184  03B7  140C               	bsf	12,0	;volatile
  1185  03B8  2BBB               	goto	u1124
  1186  03B9                     u1110:	
  1187  03B9  0022               	movlb	2	; select bank2
  1188  03BA  100C               	bcf	12,0	;volatile
  1189  03BB                     u1124:	
  1190                           
  1191                           ;main.c: 196: LATAbits.LATA1 = servo_data.data1;
  1192  03BB  0020               	movlb	0	; select bank0
  1193  03BC  1CD5               	btfss	Write_data@servo_data,1
  1194  03BD  2BC1               	goto	u1130
  1195  03BE  0022               	movlb	2	; select bank2
  1196  03BF  148C               	bsf	12,1	;volatile
  1197  03C0  2BC3               	goto	u1144
  1198  03C1                     u1130:	
  1199  03C1  0022               	movlb	2	; select bank2
  1200  03C2  108C               	bcf	12,1	;volatile
  1201  03C3                     u1144:	
  1202                           
  1203                           ;main.c: 197: LATAbits.LATA2 = servo_data.data2;
  1204  03C3  0020               	movlb	0	; select bank0
  1205  03C4  1D55               	btfss	Write_data@servo_data,2
  1206  03C5  2BC9               	goto	u1150
  1207  03C6  0022               	movlb	2	; select bank2
  1208  03C7  150C               	bsf	12,2	;volatile
  1209  03C8  2BCB               	goto	u1164
  1210  03C9                     u1150:	
  1211  03C9  0022               	movlb	2	; select bank2
  1212  03CA  110C               	bcf	12,2	;volatile
  1213  03CB                     u1164:	
  1214                           
  1215                           ;main.c: 198: LATAbits.LATA3 = servo_data.data3;
  1216  03CB  0020               	movlb	0	; select bank0
  1217  03CC  1DD5               	btfss	Write_data@servo_data,3
  1218  03CD  2BD1               	goto	u1170
  1219  03CE  0022               	movlb	2	; select bank2
  1220  03CF  158C               	bsf	12,3	;volatile
  1221  03D0  2BD3               	goto	u1184
  1222  03D1                     u1170:	
  1223  03D1  0022               	movlb	2	; select bank2
  1224  03D2  118C               	bcf	12,3	;volatile
  1225  03D3                     u1184:	
  1226                           
  1227                           ;main.c: 199: LATBbits.LATB5 = servo_data.data4;
  1228  03D3  0020               	movlb	0	; select bank0
  1229  03D4  1E55               	btfss	Write_data@servo_data,4
  1230  03D5  2BD9               	goto	u1190
  1231  03D6  0022               	movlb	2	; select bank2
  1232  03D7  168D               	bsf	13,5	;volatile
  1233  03D8  2BDB               	goto	u1204
  1234  03D9                     u1190:	
  1235  03D9  0022               	movlb	2	; select bank2
  1236  03DA  128D               	bcf	13,5	;volatile
  1237  03DB                     u1204:	
  1238                           
  1239                           ;main.c: 200: LATBbits.LATB4 = servo_data.data5;
  1240  03DB  0020               	movlb	0	; select bank0
  1241  03DC  1ED5               	btfss	Write_data@servo_data,5
  1242  03DD  2BE1               	goto	u1210
  1243  03DE  0022               	movlb	2	; select bank2
  1244  03DF  160D               	bsf	13,4	;volatile
  1245  03E0  2BE3               	goto	u1224
  1246  03E1                     u1210:	
  1247  03E1  0022               	movlb	2	; select bank2
  1248  03E2  120D               	bcf	13,4	;volatile
  1249  03E3                     u1224:	
  1250                           
  1251                           ;main.c: 201: LATBbits.LATB2 = servo_data.data6;
  1252  03E3  0020               	movlb	0	; select bank0
  1253  03E4  1F55               	btfss	Write_data@servo_data,6
  1254  03E5  2BE9               	goto	u1230
  1255  03E6  0022               	movlb	2	; select bank2
  1256  03E7  150D               	bsf	13,2	;volatile
  1257  03E8  2BEB               	goto	u1244
  1258  03E9                     u1230:	
  1259  03E9  0022               	movlb	2	; select bank2
  1260  03EA  110D               	bcf	13,2	;volatile
  1261  03EB                     u1244:	
  1262                           
  1263                           ;main.c: 202: LATBbits.LATB3 = servo_data.data7;
  1264  03EB  0020               	movlb	0	; select bank0
  1265  03EC  1FD5               	btfss	Write_data@servo_data,7
  1266  03ED  2BF1               	goto	u1250
  1267  03EE  0022               	movlb	2	; select bank2
  1268  03EF  158D               	bsf	13,3	;volatile
  1269  03F0  0008               	return
  1270  03F1                     u1250:	
  1271  03F1  0022               	movlb	2	; select bank2
  1272  03F2  118D               	bcf	13,3	;volatile
  1273  03F3  0008               	return
  1274  03F4                     __end_of_Write_data:	
  1275                           
  1276                           	psect	text4
  1277  046B                     __ptext4:	
  1278 ;; *************** function _ChangeAddress *****************
  1279 ;; Defined at:
  1280 ;;		line 138 in file "main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  None            2   11[BANK0 ] struct .
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1294 ;;      Params:         0       0       0       0
  1295 ;;      Locals:         0       2       0       0
  1296 ;;      Temps:          0       1       0       0
  1297 ;;      Totals:         0       3       0       0
  1298 ;;Total ram usage:        3 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    5
  1301 ;; This function calls:
  1302 ;;		_Write_Address
  1303 ;; This function is called by:
  1304 ;;		_SetData
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _ChangeAddress
  1310  046B                     _ChangeAddress:	
  1311                           
  1312                           ;main.c: 139: Processed None;;main.c: 140: None.all_data = 0b000;
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _ChangeAddress: [wreg+status,2+status,0+pclath+cstack]
  1316  046B  0020               	movlb	0	; select bank0
  1317  046C  01D8               	clrf	ChangeAddress@None
  1318                           
  1319                           ;main.c: 144: if (address_status == 0b000) {
  1320  046D  0835               	movf	_address_status,w
  1321  046E  1D03               	btfss	3,2
  1322  046F  2C7A               	goto	l1143
  1323                           
  1324                           ;main.c: 147: Write_Address(address);
  1325  0470  0832               	movf	_address+1,w
  1326  0471  00D6               	movwf	Write_Address@address+1
  1327  0472  0831               	movf	_address,w
  1328  0473  00D5               	movwf	Write_Address@address
  1329  0474  3184  24AE         	fcall	_Write_Address
  1330                           
  1331                           ;main.c: 150: address_status = 1;
  1332  0476  0020               	movlb	0	; select bank0
  1333  0477  01B5               	clrf	_address_status
  1334  0478  0AB5               	incf	_address_status,f
  1335                           
  1336                           ;main.c: 152: } else {
  1337  0479  0008               	return
  1338  047A                     l1143:	
  1339                           
  1340                           ;main.c: 155: Write_Address(None);
  1341  047A  0859               	movf	ChangeAddress@None+1,w
  1342  047B  00D6               	movwf	Write_Address@address+1
  1343  047C  0858               	movf	ChangeAddress@None,w
  1344  047D  00D5               	movwf	Write_Address@address
  1345  047E  3184  24AE  3184   	fcall	_Write_Address
  1346                           
  1347                           ;main.c: 158: address_status = 0b000;
  1348  0481  0020               	movlb	0	; select bank0
  1349  0482  01B5               	clrf	_address_status
  1350                           
  1351                           ;main.c: 161: address.all_data++;
  1352  0483  3001               	movlw	1
  1353  0484  00D7               	movwf	??_ChangeAddress
  1354  0485  0857               	movf	??_ChangeAddress,w
  1355  0486  07B1               	addwf	_address,f
  1356                           
  1357                           ;main.c: 164: if (address.all_data >= 0b101) {
  1358  0487  3005               	movlw	5
  1359  0488  0231               	subwf	_address,w
  1360  0489  1C03               	skipc
  1361  048A  0008               	return
  1362                           
  1363                           ;main.c: 165: address.all_data = 0b001;
  1364  048B  01B1               	clrf	_address
  1365  048C  0AB1               	incf	_address,f
  1366  048D  0008               	return
  1367  048E                     __end_of_ChangeAddress:	
  1368                           
  1369                           	psect	text5
  1370  04AE                     __ptext5:	
  1371 ;; *************** function _Write_Address *****************
  1372 ;; Defined at:
  1373 ;;		line 172 in file "main.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  address         2    8[BANK0 ] struct .
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		None
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1387 ;;      Params:         0       2       0       0
  1388 ;;      Locals:         0       0       0       0
  1389 ;;      Temps:          0       0       0       0
  1390 ;;      Totals:         0       2       0       0
  1391 ;;Total ram usage:        2 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    4
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_ChangeAddress
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _Write_Address
  1403  04AE                     _Write_Address:	
  1404                           
  1405                           ;main.c: 173: LATBbits.LATB1 = address.data0;
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _Write_Address: []
  1409  04AE  0020               	movlb	0	; select bank0
  1410  04AF  1C55               	btfss	Write_Address@address,0
  1411  04B0  2CB4               	goto	u1050
  1412  04B1  0022               	movlb	2	; select bank2
  1413  04B2  148D               	bsf	13,1	;volatile
  1414  04B3  2CB6               	goto	u1064
  1415  04B4                     u1050:	
  1416  04B4  0022               	movlb	2	; select bank2
  1417  04B5  108D               	bcf	13,1	;volatile
  1418  04B6                     u1064:	
  1419                           
  1420                           ;main.c: 174: LATBbits.LATB0 = address.data1;
  1421  04B6  0020               	movlb	0	; select bank0
  1422  04B7  1CD5               	btfss	Write_Address@address,1
  1423  04B8  2CBC               	goto	u1070
  1424  04B9  0022               	movlb	2	; select bank2
  1425  04BA  140D               	bsf	13,0	;volatile
  1426  04BB  2CBE               	goto	u1084
  1427  04BC                     u1070:	
  1428  04BC  0022               	movlb	2	; select bank2
  1429  04BD  100D               	bcf	13,0	;volatile
  1430  04BE                     u1084:	
  1431                           
  1432                           ;main.c: 175: LATCbits.LATC5 = address.data2;
  1433  04BE  0020               	movlb	0	; select bank0
  1434  04BF  1D55               	btfss	Write_Address@address,2
  1435  04C0  2CC4               	goto	u1090
  1436  04C1  0022               	movlb	2	; select bank2
  1437  04C2  168E               	bsf	14,5	;volatile
  1438  04C3  0008               	return
  1439  04C4                     u1090:	
  1440  04C4  0022               	movlb	2	; select bank2
  1441  04C5  128E               	bcf	14,5	;volatile
  1442  04C6  0008               	return
  1443  04C7                     __end_of_Write_Address:	
  1444                           
  1445                           	psect	text6
  1446  048E                     __ptext6:	
  1447 ;; *************** function _Reception_from_master_main *****************
  1448 ;; Defined at:
  1449 ;;		line 90 in file "communication.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1463 ;;      Params:         0       0       0       0
  1464 ;;      Locals:         0       0       0       0
  1465 ;;      Temps:          0       1       0       0
  1466 ;;      Totals:         0       1       0       0
  1467 ;;Total ram usage:        1 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    5
  1470 ;; This function calls:
  1471 ;;		_Organize_Datas
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _Reception_from_master_main
  1479  048E                     _Reception_from_master_main:	
  1480                           
  1481                           ;communication.c: 91: if (Receive_flag == 0) {
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _Reception_from_master_main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  1485  048E  0020               	movlb	0	; select bank0
  1486  048F  0867               	movf	_Receive_flag,w
  1487  0490  1D03               	btfss	3,2
  1488  0491  0008               	return
  1489                           
  1490                           ;communication.c: 93: if (slave_different_flag == 1) {
  1491  0492  0366               	decf	_slave_different_flag,w
  1492  0493  1D03               	btfss	3,2
  1493  0494  2CA7               	goto	l1343
  1494                           
  1495                           ;communication.c: 94: Organize_Datas(RxData0, Buffer0, 5, 0);
  1496  0495  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  1497  0496  00E0               	movwf	??_Reception_from_master_main
  1498  0497  0860               	movf	??_Reception_from_master_main,w
  1499  0498  00D5               	movwf	Organize_Datas@Buffer
  1500  0499  3005               	movlw	5
  1501  049A  00D6               	movwf	Organize_Datas@number_of_data
  1502  049B  3000               	movlw	0
  1503  049C  00D7               	movwf	Organize_Datas@number_of_data+1
  1504  049D  3000               	movlw	0
  1505  049E  00D8               	movwf	Organize_Datas@bus_number
  1506  049F  00D9               	movwf	Organize_Datas@bus_number+1
  1507  04A0  3043               	movlw	(low (_RxData0| 0))& (0+255)
  1508  04A1  3181  21AF  3184   	fcall	_Organize_Datas
  1509                           
  1510                           ;communication.c: 95: slave_different_flag = 2;
  1511  04A4  3002               	movlw	2
  1512  04A5  0020               	movlb	0	; select bank0
  1513  04A6  2CA8               	goto	L1
  1514  04A7                     l1343:	
  1515                           ;communication.c: 96: } else {
  1516                           
  1517                           
  1518                           ;communication.c: 97: slave_different_flag = 2;
  1519  04A7  3002               	movlw	2
  1520  04A8                     L1:	
  1521  04A8  00E0               	movwf	??_Reception_from_master_main
  1522  04A9  0860               	movf	??_Reception_from_master_main,w
  1523  04AA  00E6               	movwf	_slave_different_flag
  1524                           
  1525                           ;communication.c: 98: };communication.c: 99: Receive_flag = 1;
  1526  04AB  01E7               	clrf	_Receive_flag
  1527  04AC  0AE7               	incf	_Receive_flag,f
  1528                           
  1529                           ;communication.c: 100: } else;
  1530  04AD  0008               	return
  1531  04AE                     __end_of_Reception_from_master_main:	
  1532                           
  1533                           	psect	text7
  1534  01AF                     __ptext7:	
  1535 ;; *************** function _Organize_Datas *****************
  1536 ;; Defined at:
  1537 ;;		line 20 in file "Controller_Protocol.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  RxData          1    wreg     PTR struct .
  1540 ;;		 -> RxData0(10), 
  1541 ;;  Buffer          1    8[BANK0 ] PTR struct .
  1542 ;;		 -> Buffer0(13), 
  1543 ;;  number_of_da    2    9[BANK0 ] int 
  1544 ;;  bus_number      2   11[BANK0 ] int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  RxData          1   18[BANK0 ] PTR struct .
  1547 ;;		 -> RxData0(10), 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1557 ;;      Params:         0       5       0       0
  1558 ;;      Locals:         0       1       0       0
  1559 ;;      Temps:          0       5       0       0
  1560 ;;      Totals:         0      11       0       0
  1561 ;;Total ram usage:       11 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    4
  1564 ;; This function calls:
  1565 ;;		Nothing
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;;		_Reception_from_master_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _Organize_Datas
  1574  01AF                     _Organize_Datas:	
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _Organize_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  1578                           ;Organize_Datas@RxData stored from wreg
  1579  01AF  0020               	movlb	0	; select bank0
  1580  01B0  00DF               	movwf	Organize_Datas@RxData
  1581                           
  1582                           ;Controller_Protocol.c: 22: OP[bus_number].count = 1;
  1583  01B1  0858               	movf	Organize_Datas@bus_number,w
  1584  01B2  00DA               	movwf	??_Organize_Datas
  1585  01B3  3001               	movlw	1
  1586  01B4                     u1315:	
  1587  01B4  35DA               	lslf	??_Organize_Datas,f
  1588  01B5  3EFF               	addlw	-1
  1589  01B6  1D03               	skipz
  1590  01B7  29B4               	goto	u1315
  1591  01B8  355A               	lslf	??_Organize_Datas,w
  1592  01B9  3E02               	addlw	2
  1593  01BA  3E29               	addlw	(low (_OP| 0))& (0+255)
  1594  01BB  0086               	movwf	6
  1595  01BC  0187               	clrf	7
  1596  01BD  3001               	movlw	1
  1597  01BE  3FC0               	movwi [0]fsr1
  1598  01BF  3000               	movlw	0
  1599  01C0  3FC1               	movwi [1]fsr1
  1600                           
  1601                           ;Controller_Protocol.c: 23: for (OP[bus_number].num = 0; OP[bus_number].num < number_of_
      +                          data; OP[bus_number].num++) {
  1602  01C1  0858               	movf	Organize_Datas@bus_number,w
  1603  01C2  00DA               	movwf	??_Organize_Datas
  1604  01C3  3001               	movlw	1
  1605  01C4                     u1325:	
  1606  01C4  35DA               	lslf	??_Organize_Datas,f
  1607  01C5  3EFF               	addlw	-1
  1608  01C6  1D03               	skipz
  1609  01C7  29C4               	goto	u1325
  1610  01C8  355A               	lslf	??_Organize_Datas,w
  1611  01C9  3E29               	addlw	(low (_OP| 0))& (0+255)
  1612  01CA  0086               	movwf	6
  1613  01CB  0187               	clrf	7
  1614  01CC  3000               	movlw	0
  1615  01CD  3FC0               	movwi [0]fsr1
  1616  01CE  3FC1               	movwi [1]fsr1
  1617  01CF                     l192:	
  1618  01CF  0858               	movf	Organize_Datas@bus_number,w
  1619  01D0  00DA               	movwf	??_Organize_Datas
  1620  01D1  3001               	movlw	1
  1621  01D2                     u1495:	
  1622  01D2  35DA               	lslf	??_Organize_Datas,f
  1623  01D3  3EFF               	addlw	-1
  1624  01D4  1D03               	skipz
  1625  01D5  29D2               	goto	u1495
  1626  01D6  355A               	lslf	??_Organize_Datas,w
  1627  01D7  3E29               	addlw	(low (_OP| 0))& (0+255)
  1628  01D8  0086               	movwf	6
  1629  01D9  0187               	clrf	7
  1630  01DA  3F40               	moviw [0]fsr1
  1631  01DB  00DB               	movwf	??_Organize_Datas+1
  1632  01DC  3F41               	moviw [1]fsr1
  1633  01DD  00DC               	movwf	??_Organize_Datas+2
  1634  01DE  085C               	movf	??_Organize_Datas+2,w
  1635  01DF  3A80               	xorlw	128
  1636  01E0  00DD               	movwf	??_Organize_Datas+3
  1637  01E1  0857               	movf	Organize_Datas@number_of_data+1,w
  1638  01E2  3A80               	xorlw	128
  1639  01E3  025D               	subwf	??_Organize_Datas+3,w
  1640  01E4  1D03               	skipz
  1641  01E5  29E8               	goto	u1505
  1642  01E6  0856               	movf	Organize_Datas@number_of_data,w
  1643  01E7  025B               	subwf	??_Organize_Datas+1,w
  1644  01E8                     u1505:	
  1645  01E8  1803               	btfsc	3,0
  1646  01E9  0008               	return
  1647                           
  1648                           ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number
      +                          ].count].upper_data;
  1649  01EA  0020               	movlb	0	; select bank0
  1650  01EB  0858               	movf	Organize_Datas@bus_number,w
  1651  01EC  00DA               	movwf	??_Organize_Datas
  1652  01ED  3001               	movlw	1
  1653  01EE                     u1335:	
  1654  01EE  35DA               	lslf	??_Organize_Datas,f
  1655  01EF  3EFF               	addlw	-1
  1656  01F0  1D03               	skipz
  1657  01F1  29EE               	goto	u1335
  1658  01F2  355A               	lslf	??_Organize_Datas,w
  1659  01F3  3E02               	addlw	2
  1660  01F4  3E29               	addlw	(low (_OP| 0))& (0+255)
  1661  01F5  0086               	movwf	6
  1662  01F6  0187               	clrf	7
  1663  01F7  0801               	movf	1,w
  1664  01F8  0755               	addwf	Organize_Datas@Buffer,w
  1665  01F9  00DB               	movwf	??_Organize_Datas+1
  1666  01FA  085B               	movf	??_Organize_Datas+1,w
  1667  01FB  0086               	movwf	6
  1668  01FC  0187               	clrf	7
  1669  01FD  0E01               	swapf	1,w
  1670  01FE  390F               	andlw	15
  1671  01FF  00DC               	movwf	??_Organize_Datas+2
  1672  0200  0858               	movf	Organize_Datas@bus_number,w
  1673  0201  00DD               	movwf	??_Organize_Datas+3
  1674  0202  3001               	movlw	1
  1675  0203                     u1345:	
  1676  0203  35DD               	lslf	??_Organize_Datas+3,f
  1677  0204  3EFF               	addlw	-1
  1678  0205  1D03               	skipz
  1679  0206  2A03               	goto	u1345
  1680  0207  355D               	lslf	??_Organize_Datas+3,w
  1681  0208  3E29               	addlw	(low (_OP| 0))& (0+255)
  1682  0209  0086               	movwf	6
  1683  020A  0187               	clrf	7
  1684  020B  3501               	lslf	1,w
  1685  020C  075F               	addwf	Organize_Datas@RxData,w
  1686  020D  00DE               	movwf	??_Organize_Datas+4
  1687  020E  085E               	movf	??_Organize_Datas+4,w
  1688  020F  0086               	movwf	6
  1689  0210  0187               	clrf	7
  1690  0211  0EDC               	swapf	??_Organize_Datas+2,f
  1691  0212  0801               	movf	1,w
  1692  0213  065C               	xorwf	??_Organize_Datas+2,w
  1693  0214  390F               	andlw	-241
  1694  0215  065C               	xorwf	??_Organize_Datas+2,w
  1695  0216  0081               	movwf	1
  1696                           
  1697                           ;Controller_Protocol.c: 25: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number
      +                          ].count + 1].upper_data;
  1698  0217  0858               	movf	Organize_Datas@bus_number,w
  1699  0218  00DA               	movwf	??_Organize_Datas
  1700  0219  3001               	movlw	1
  1701  021A                     u1355:	
  1702  021A  35DA               	lslf	??_Organize_Datas,f
  1703  021B  3EFF               	addlw	-1
  1704  021C  1D03               	skipz
  1705  021D  2A1A               	goto	u1355
  1706  021E  355A               	lslf	??_Organize_Datas,w
  1707  021F  3E02               	addlw	2
  1708  0220  3E29               	addlw	(low (_OP| 0))& (0+255)
  1709  0221  0086               	movwf	6
  1710  0222  0187               	clrf	7
  1711  0223  0801               	movf	1,w
  1712  0224  3E01               	addlw	1
  1713  0225  0755               	addwf	Organize_Datas@Buffer,w
  1714  0226  00DB               	movwf	??_Organize_Datas+1
  1715  0227  085B               	movf	??_Organize_Datas+1,w
  1716  0228  0086               	movwf	6
  1717  0229  0187               	clrf	7
  1718  022A  0E01               	swapf	1,w
  1719  022B  390F               	andlw	15
  1720  022C  00DC               	movwf	??_Organize_Datas+2
  1721  022D  0858               	movf	Organize_Datas@bus_number,w
  1722  022E  00DD               	movwf	??_Organize_Datas+3
  1723  022F  3001               	movlw	1
  1724  0230                     u1365:	
  1725  0230  35DD               	lslf	??_Organize_Datas+3,f
  1726  0231  3EFF               	addlw	-1
  1727  0232  1D03               	skipz
  1728  0233  2A30               	goto	u1365
  1729  0234  355D               	lslf	??_Organize_Datas+3,w
  1730  0235  3E29               	addlw	(low (_OP| 0))& (0+255)
  1731  0236  0086               	movwf	6
  1732  0237  0187               	clrf	7
  1733  0238  3501               	lslf	1,w
  1734  0239  075F               	addwf	Organize_Datas@RxData,w
  1735  023A  00DE               	movwf	??_Organize_Datas+4
  1736  023B  085E               	movf	??_Organize_Datas+4,w
  1737  023C  0086               	movwf	6
  1738  023D  0187               	clrf	7
  1739  023E  0801               	movf	1,w
  1740  023F  065C               	xorwf	??_Organize_Datas+2,w
  1741  0240  39F0               	andlw	-16
  1742  0241  065C               	xorwf	??_Organize_Datas+2,w
  1743  0242  0081               	movwf	1
  1744                           
  1745                           ;Controller_Protocol.c: 26: if ((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus
      +                          _number].count + 1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
  1746  0243  0858               	movf	Organize_Datas@bus_number,w
  1747  0244  00DA               	movwf	??_Organize_Datas
  1748  0245  3001               	movlw	1
  1749  0246                     u1375:	
  1750  0246  35DA               	lslf	??_Organize_Datas,f
  1751  0247  3EFF               	addlw	-1
  1752  0248  1D03               	skipz
  1753  0249  2A46               	goto	u1375
  1754  024A  355A               	lslf	??_Organize_Datas,w
  1755  024B  3E02               	addlw	2
  1756  024C  3E29               	addlw	(low (_OP| 0))& (0+255)
  1757  024D  0086               	movwf	6
  1758  024E  0187               	clrf	7
  1759  024F  0801               	movf	1,w
  1760  0250  0755               	addwf	Organize_Datas@Buffer,w
  1761  0251  00DB               	movwf	??_Organize_Datas+1
  1762  0252  085B               	movf	??_Organize_Datas+1,w
  1763  0253  0086               	movwf	6
  1764  0254  0187               	clrf	7
  1765  0255  0E01               	swapf	1,w
  1766  0256  390F               	andlw	15
  1767  0257  00DC               	movwf	??_Organize_Datas+2
  1768  0258  0858               	movf	Organize_Datas@bus_number,w
  1769  0259  00DD               	movwf	??_Organize_Datas+3
  1770  025A  3001               	movlw	1
  1771  025B                     u1385:	
  1772  025B  35DD               	lslf	??_Organize_Datas+3,f
  1773  025C  3EFF               	addlw	-1
  1774  025D  1D03               	skipz
  1775  025E  2A5B               	goto	u1385
  1776  025F  355D               	lslf	??_Organize_Datas+3,w
  1777  0260  3E02               	addlw	2
  1778  0261  3E29               	addlw	(low (_OP| 0))& (0+255)
  1779  0262  0086               	movwf	6
  1780  0263  0187               	clrf	7
  1781  0264  0801               	movf	1,w
  1782  0265  3E01               	addlw	1
  1783  0266  0755               	addwf	Organize_Datas@Buffer,w
  1784  0267  00DE               	movwf	??_Organize_Datas+4
  1785  0268  085E               	movf	??_Organize_Datas+4,w
  1786  0269  0086               	movwf	6
  1787  026A  0187               	clrf	7
  1788  026B  0801               	movf	1,w
  1789  026C  390F               	andlw	15
  1790  026D  045C               	iorwf	??_Organize_Datas+2,w
  1791  026E  3A0F               	xorlw	15
  1792  026F  1D03               	skipz
  1793  0270  2A84               	goto	l1129
  1794  0271  0858               	movf	Organize_Datas@bus_number,w
  1795  0272  00DA               	movwf	??_Organize_Datas
  1796  0273  3001               	movlw	1
  1797  0274                     u1405:	
  1798  0274  35DA               	lslf	??_Organize_Datas,f
  1799  0275  3EFF               	addlw	-1
  1800  0276  1D03               	skipz
  1801  0277  2A74               	goto	u1405
  1802  0278  355A               	lslf	??_Organize_Datas,w
  1803  0279  3E29               	addlw	(low (_OP| 0))& (0+255)
  1804  027A  0086               	movwf	6
  1805  027B  0187               	clrf	7
  1806  027C  3501               	lslf	1,w
  1807  027D  075F               	addwf	Organize_Datas@RxData,w
  1808  027E  00DB               	movwf	??_Organize_Datas+1
  1809  027F  0A5B               	incf	??_Organize_Datas+1,w
  1810  0280  0086               	movwf	6
  1811  0281  0187               	clrf	7
  1812  0282  1001               	bcf	1,0
  1813  0283  2A96               	goto	l195
  1814  0284                     l1129:	
  1815                           
  1816                           ;Controller_Protocol.c: 27: else RxData[OP[bus_number].num].UD_error = 1;
  1817  0284  0858               	movf	Organize_Datas@bus_number,w
  1818  0285  00DA               	movwf	??_Organize_Datas
  1819  0286  3001               	movlw	1
  1820  0287                     u1415:	
  1821  0287  35DA               	lslf	??_Organize_Datas,f
  1822  0288  3EFF               	addlw	-1
  1823  0289  1D03               	skipz
  1824  028A  2A87               	goto	u1415
  1825  028B  355A               	lslf	??_Organize_Datas,w
  1826  028C  3E29               	addlw	(low (_OP| 0))& (0+255)
  1827  028D  0086               	movwf	6
  1828  028E  0187               	clrf	7
  1829  028F  3501               	lslf	1,w
  1830  0290  075F               	addwf	Organize_Datas@RxData,w
  1831  0291  00DB               	movwf	??_Organize_Datas+1
  1832  0292  0A5B               	incf	??_Organize_Datas+1,w
  1833  0293  0086               	movwf	6
  1834  0294  0187               	clrf	7
  1835  0295  1401               	bsf	1,0
  1836  0296                     l195:	
  1837                           
  1838                           ;Controller_Protocol.c: 28: if ((Buffer[OP[bus_number].count + 1].upper_data | Buffer[OP
      +                          [bus_number].count + 2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
  1839  0296  0858               	movf	Organize_Datas@bus_number,w
  1840  0297  00DA               	movwf	??_Organize_Datas
  1841  0298  3001               	movlw	1
  1842  0299                     u1425:	
  1843  0299  35DA               	lslf	??_Organize_Datas,f
  1844  029A  3EFF               	addlw	-1
  1845  029B  1D03               	skipz
  1846  029C  2A99               	goto	u1425
  1847  029D  355A               	lslf	??_Organize_Datas,w
  1848  029E  3E02               	addlw	2
  1849  029F  3E29               	addlw	(low (_OP| 0))& (0+255)
  1850  02A0  0086               	movwf	6
  1851  02A1  0187               	clrf	7
  1852  02A2  0801               	movf	1,w
  1853  02A3  3E01               	addlw	1
  1854  02A4  0755               	addwf	Organize_Datas@Buffer,w
  1855  02A5  00DB               	movwf	??_Organize_Datas+1
  1856  02A6  085B               	movf	??_Organize_Datas+1,w
  1857  02A7  0086               	movwf	6
  1858  02A8  0187               	clrf	7
  1859  02A9  0E01               	swapf	1,w
  1860  02AA  390F               	andlw	15
  1861  02AB  00DC               	movwf	??_Organize_Datas+2
  1862  02AC  0858               	movf	Organize_Datas@bus_number,w
  1863  02AD  00DD               	movwf	??_Organize_Datas+3
  1864  02AE  3001               	movlw	1
  1865  02AF                     u1435:	
  1866  02AF  35DD               	lslf	??_Organize_Datas+3,f
  1867  02B0  3EFF               	addlw	-1
  1868  02B1  1D03               	skipz
  1869  02B2  2AAF               	goto	u1435
  1870  02B3  355D               	lslf	??_Organize_Datas+3,w
  1871  02B4  3E02               	addlw	2
  1872  02B5  3E29               	addlw	(low (_OP| 0))& (0+255)
  1873  02B6  0086               	movwf	6
  1874  02B7  0187               	clrf	7
  1875  02B8  0801               	movf	1,w
  1876  02B9  3E02               	addlw	2
  1877  02BA  0755               	addwf	Organize_Datas@Buffer,w
  1878  02BB  00DE               	movwf	??_Organize_Datas+4
  1879  02BC  085E               	movf	??_Organize_Datas+4,w
  1880  02BD  0086               	movwf	6
  1881  02BE  0187               	clrf	7
  1882  02BF  0801               	movf	1,w
  1883  02C0  390F               	andlw	15
  1884  02C1  045C               	iorwf	??_Organize_Datas+2,w
  1885  02C2  3A0F               	xorlw	15
  1886  02C3  1D03               	skipz
  1887  02C4  2AD8               	goto	l1133
  1888  02C5  0858               	movf	Organize_Datas@bus_number,w
  1889  02C6  00DA               	movwf	??_Organize_Datas
  1890  02C7  3001               	movlw	1
  1891  02C8                     u1455:	
  1892  02C8  35DA               	lslf	??_Organize_Datas,f
  1893  02C9  3EFF               	addlw	-1
  1894  02CA  1D03               	skipz
  1895  02CB  2AC8               	goto	u1455
  1896  02CC  355A               	lslf	??_Organize_Datas,w
  1897  02CD  3E29               	addlw	(low (_OP| 0))& (0+255)
  1898  02CE  0086               	movwf	6
  1899  02CF  0187               	clrf	7
  1900  02D0  3501               	lslf	1,w
  1901  02D1  075F               	addwf	Organize_Datas@RxData,w
  1902  02D2  00DB               	movwf	??_Organize_Datas+1
  1903  02D3  0A5B               	incf	??_Organize_Datas+1,w
  1904  02D4  0086               	movwf	6
  1905  02D5  0187               	clrf	7
  1906  02D6  1081               	bcf	1,1
  1907  02D7  2AEA               	goto	l197
  1908  02D8                     l1133:	
  1909                           
  1910                           ;Controller_Protocol.c: 29: else RxData[OP[bus_number].num].LD_error = 1;
  1911  02D8  0858               	movf	Organize_Datas@bus_number,w
  1912  02D9  00DA               	movwf	??_Organize_Datas
  1913  02DA  3001               	movlw	1
  1914  02DB                     u1465:	
  1915  02DB  35DA               	lslf	??_Organize_Datas,f
  1916  02DC  3EFF               	addlw	-1
  1917  02DD  1D03               	skipz
  1918  02DE  2ADB               	goto	u1465
  1919  02DF  355A               	lslf	??_Organize_Datas,w
  1920  02E0  3E29               	addlw	(low (_OP| 0))& (0+255)
  1921  02E1  0086               	movwf	6
  1922  02E2  0187               	clrf	7
  1923  02E3  3501               	lslf	1,w
  1924  02E4  075F               	addwf	Organize_Datas@RxData,w
  1925  02E5  00DB               	movwf	??_Organize_Datas+1
  1926  02E6  0A5B               	incf	??_Organize_Datas+1,w
  1927  02E7  0086               	movwf	6
  1928  02E8  0187               	clrf	7
  1929  02E9  1481               	bsf	1,1
  1930  02EA                     l197:	
  1931                           
  1932                           ;Controller_Protocol.c: 30: OP[bus_number].count += 2;
  1933  02EA  0858               	movf	Organize_Datas@bus_number,w
  1934  02EB  00DA               	movwf	??_Organize_Datas
  1935  02EC  3001               	movlw	1
  1936  02ED                     u1475:	
  1937  02ED  35DA               	lslf	??_Organize_Datas,f
  1938  02EE  3EFF               	addlw	-1
  1939  02EF  1D03               	skipz
  1940  02F0  2AED               	goto	u1475
  1941  02F1  355A               	lslf	??_Organize_Datas,w
  1942  02F2  3E02               	addlw	2
  1943  02F3  3E29               	addlw	(low (_OP| 0))& (0+255)
  1944  02F4  0086               	movwf	6
  1945  02F5  0187               	clrf	7
  1946  02F6  3002               	movlw	2
  1947  02F7  0781               	addwf	1,f
  1948  02F8  3141               	addfsr 1,1
  1949  02F9  1803               	skipnc
  1950  02FA  0A81               	incf	1,f
  1951  02FB  0858               	movf	Organize_Datas@bus_number,w
  1952  02FC  00DA               	movwf	??_Organize_Datas
  1953  02FD  3001               	movlw	1
  1954  02FE                     u1485:	
  1955  02FE  35DA               	lslf	??_Organize_Datas,f
  1956  02FF  3EFF               	addlw	-1
  1957  0300  1D03               	skipz
  1958  0301  2AFE               	goto	u1485
  1959  0302  355A               	lslf	??_Organize_Datas,w
  1960  0303  3E29               	addlw	(low (_OP| 0))& (0+255)
  1961  0304  0086               	movwf	6
  1962  0305  0187               	clrf	7
  1963  0306  3001               	movlw	1
  1964  0307  0781               	addwf	1,f
  1965  0308  3141               	addfsr 1,1
  1966  0309  1803               	skipnc
  1967  030A  0A81               	incf	1,f
  1968  030B  29CF               	goto	l192
  1969  030C                     __end_of_Organize_Datas:	
  1970                           
  1971                           	psect	text8
  1972  04DD                     __ptext8:	
  1973 ;; *************** function _Initialize *****************
  1974 ;; Defined at:
  1975 ;;		line 212 in file "main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1989 ;;      Params:         0       0       0       0
  1990 ;;      Locals:         0       0       0       0
  1991 ;;      Temps:          0       1       0       0
  1992 ;;      Totals:         0       1       0       0
  1993 ;;Total ram usage:        1 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    6
  1996 ;; This function calls:
  1997 ;;		_Initialize_Parameters
  1998 ;;		_Oscillator_Initialize
  1999 ;;		_Pin_Initialize
  2000 ;;		_UART_Initialize
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _Initialize
  2008  04DD                     _Initialize:	
  2009                           
  2010                           ;main.c: 213: Oscillator_Initialize();
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2014  04DD  3185  253B  3184   	fcall	_Oscillator_Initialize
  2015                           
  2016                           ;main.c: 214: Pin_Initialize();
  2017  04E0  3185  2502  3184   	fcall	_Pin_Initialize
  2018                           
  2019                           ;main.c: 215: UART_Initialize();
  2020  04E3  3184  24F0  3184   	fcall	_UART_Initialize
  2021                           
  2022                           ;main.c: 216: Initialize_Parameters();
  2023  04E6  3183  230C         	fcall	_Initialize_Parameters
  2024                           
  2025                           ;main.c: 217: address.all_data = 0b001;
  2026  04E8  0020               	movlb	0	; select bank0
  2027  04E9  01B1               	clrf	_address
  2028  04EA  0AB1               	incf	_address,f
  2029                           
  2030                           ;main.c: 218: zero.all_data = 0xFF;
  2031  04EB  30FF               	movlw	255
  2032  04EC  00DA               	movwf	??_Initialize
  2033  04ED  085A               	movf	??_Initialize,w
  2034  04EE  00AF               	movwf	_zero
  2035  04EF  0008               	return
  2036  04F0                     __end_of_Initialize:	
  2037                           
  2038                           	psect	text9
  2039  04F0                     __ptext9:	
  2040 ;; *************** function _UART_Initialize *****************
  2041 ;; Defined at:
  2042 ;;		line 247 in file "main.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2056 ;;      Params:         0       0       0       0
  2057 ;;      Locals:         0       0       0       0
  2058 ;;      Temps:          0       0       0       0
  2059 ;;      Totals:         0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    4
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_Initialize
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _UART_Initialize
  2072  04F0                     _UART_Initialize:	
  2073                           
  2074                           ;main.c: 249: PIE1bits.RCIE = 0;
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in _UART_Initialize: [wreg+status,2]
  2078  04F0  0021               	movlb	1	; select bank1
  2079  04F1  1291               	bcf	17,5	;volatile
  2080                           
  2081                           ;main.c: 252: SPBRGH = 0x00;
  2082  04F2  0023               	movlb	3	; select bank3
  2083  04F3  019C               	clrf	28	;volatile
  2084                           
  2085                           ;main.c: 253: SPBRGL = 0x8A;
  2086  04F4  308A               	movlw	138
  2087  04F5  009B               	movwf	27	;volatile
  2088                           
  2089                           ;main.c: 254: TXSTAbits.BRGH = 1;
  2090  04F6  151E               	bsf	30,2	;volatile
  2091                           
  2092                           ;main.c: 255: BAUDCONbits.BRG16 = 1;
  2093  04F7  159F               	bsf	31,3	;volatile
  2094                           
  2095                           ;main.c: 258: RCSTAbits.SPEN = 1;
  2096  04F8  179D               	bsf	29,7	;volatile
  2097                           
  2098                           ;main.c: 259: RCSTAbits.CREN = 1;
  2099  04F9  161D               	bsf	29,4	;volatile
  2100                           
  2101                           ;main.c: 260: TXSTAbits.SYNC = 0;
  2102  04FA  121E               	bcf	30,4	;volatile
  2103                           
  2104                           ;main.c: 263: INTCONbits.GIE = 1;
  2105  04FB  178B               	bsf	11,7	;volatile
  2106                           
  2107                           ;main.c: 264: INTCONbits.PEIE = 1;
  2108  04FC  170B               	bsf	11,6	;volatile
  2109                           
  2110                           ;main.c: 265: PIE1bits.RCIE = 1;
  2111  04FD  0021               	movlb	1	; select bank1
  2112  04FE  1691               	bsf	17,5	;volatile
  2113                           
  2114                           ;main.c: 268: RCSTAbits.CREN = 1;
  2115  04FF  0023               	movlb	3	; select bank3
  2116  0500  161D               	bsf	29,4	;volatile
  2117  0501  0008               	return
  2118  0502                     __end_of_UART_Initialize:	
  2119                           
  2120                           	psect	text10
  2121  0502                     __ptext10:	
  2122 ;; *************** function _Pin_Initialize *****************
  2123 ;; Defined at:
  2124 ;;		line 225 in file "main.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2138 ;;      Params:         0       0       0       0
  2139 ;;      Locals:         0       0       0       0
  2140 ;;      Temps:          0       0       0       0
  2141 ;;      Totals:         0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    4
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_Initialize
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _Pin_Initialize
  2154  0502                     _Pin_Initialize:	
  2155                           
  2156                           ;main.c: 226: ANSELA = 0x00;
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _Pin_Initialize: [status,2]
  2160  0502  0023               	movlb	3	; select bank3
  2161  0503  018C               	clrf	12	;volatile
  2162                           
  2163                           ;main.c: 227: ANSELB = 0x00;
  2164  0504  018D               	clrf	13	;volatile
  2165                           
  2166                           ;main.c: 229: TRISCbits.TRISC7 = 1;
  2167  0505  0021               	movlb	1	; select bank1
  2168  0506  178E               	bsf	14,7	;volatile
  2169                           
  2170                           ;main.c: 231: TRISAbits.TRISA0 = 0;
  2171  0507  100C               	bcf	12,0	;volatile
  2172                           
  2173                           ;main.c: 232: TRISAbits.TRISA1 = 0;
  2174  0508  108C               	bcf	12,1	;volatile
  2175                           
  2176                           ;main.c: 233: TRISAbits.TRISA2 = 0;
  2177  0509  110C               	bcf	12,2	;volatile
  2178                           
  2179                           ;main.c: 234: TRISAbits.TRISA3 = 0;
  2180  050A  118C               	bcf	12,3	;volatile
  2181                           
  2182                           ;main.c: 235: TRISBbits.TRISB5 = 0;
  2183  050B  128D               	bcf	13,5	;volatile
  2184                           
  2185                           ;main.c: 236: TRISBbits.TRISB4 = 0;
  2186  050C  120D               	bcf	13,4	;volatile
  2187                           
  2188                           ;main.c: 237: TRISBbits.TRISB2 = 0;
  2189  050D  110D               	bcf	13,2	;volatile
  2190                           
  2191                           ;main.c: 238: TRISBbits.TRISB3 = 0;
  2192  050E  118D               	bcf	13,3	;volatile
  2193                           
  2194                           ;main.c: 240: TRISBbits.TRISB1 = 0;
  2195  050F  108D               	bcf	13,1	;volatile
  2196                           
  2197                           ;main.c: 241: TRISBbits.TRISB0 = 0;
  2198  0510  100D               	bcf	13,0	;volatile
  2199                           
  2200                           ;main.c: 242: TRISCbits.TRISC5 = 0;
  2201  0511  128E               	bcf	14,5	;volatile
  2202                           
  2203                           ;main.c: 244: TRISCbits.TRISC4 = 0;
  2204  0512  120E               	bcf	14,4	;volatile
  2205  0513  0008               	return
  2206  0514                     __end_of_Pin_Initialize:	
  2207                           
  2208                           	psect	text11
  2209  053B                     __ptext11:	
  2210 ;; *************** function _Oscillator_Initialize *****************
  2211 ;; Defined at:
  2212 ;;		line 221 in file "main.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2226 ;;      Params:         0       0       0       0
  2227 ;;      Locals:         0       0       0       0
  2228 ;;      Temps:          0       0       0       0
  2229 ;;      Totals:         0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    4
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_Initialize
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _Oscillator_Initialize
  2242  053B                     _Oscillator_Initialize:	
  2243                           
  2244                           ;main.c: 222: OSCCON = 0xF0;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _Oscillator_Initialize: [wreg]
  2248  053B  30F0               	movlw	240
  2249  053C  0021               	movlb	1	; select bank1
  2250  053D  0099               	movwf	25	;volatile
  2251  053E  0008               	return
  2252  053F                     __end_of_Oscillator_Initialize:	
  2253                           
  2254                           	psect	text12
  2255  030C                     __ptext12:	
  2256 ;; *************** function _Initialize_Parameters *****************
  2257 ;; Defined at:
  2258 ;;		line 116 in file "Controller_Protocol.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2272 ;;      Params:         0       0       0       0
  2273 ;;      Locals:         0       0       0       0
  2274 ;;      Temps:          0       1       0       0
  2275 ;;      Totals:         0       1       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    5
  2279 ;; This function calls:
  2280 ;;		___bmul
  2281 ;; This function is called by:
  2282 ;;		_Initialize
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _Initialize_Parameters
  2288  030C                     _Initialize_Parameters:	
  2289                           
  2290                           ;Controller_Protocol.c: 117: static int i;;Controller_Protocol.c: 119: for (i = 0; i < 1
      +                          ; i++)OP[i].count = 1;
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _Initialize_Parameters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2294  030C  0020               	movlb	0	; select bank0
  2295  030D  01AD               	clrf	Initialize_Parameters@i
  2296  030E  01AE               	clrf	Initialize_Parameters@i+1
  2297  030F  082E               	movf	Initialize_Parameters@i+1,w
  2298  0310  3A80               	xorlw	128
  2299  0311  00D9               	movwf	??_Initialize_Parameters
  2300  0312  3080               	movlw	128
  2301  0313  0259               	subwf	??_Initialize_Parameters,w
  2302  0314  1D03               	skipz
  2303  0315  2B18               	goto	u1575
  2304  0316  3001               	movlw	1
  2305  0317  022D               	subwf	Initialize_Parameters@i,w
  2306  0318                     u1575:	
  2307  0318  1803               	btfsc	3,0
  2308  0319  2B3A               	goto	l1235
  2309  031A                     l1229:	
  2310  031A  0020               	movlb	0	; select bank0
  2311  031B  082D               	movf	Initialize_Parameters@i,w
  2312  031C  00D9               	movwf	??_Initialize_Parameters
  2313  031D  3001               	movlw	1
  2314  031E                     u1585:	
  2315  031E  35D9               	lslf	??_Initialize_Parameters,f
  2316  031F  3EFF               	addlw	-1
  2317  0320  1D03               	skipz
  2318  0321  2B1E               	goto	u1585
  2319  0322  3559               	lslf	??_Initialize_Parameters,w
  2320  0323  3E02               	addlw	2
  2321  0324  3E29               	addlw	(low (_OP| 0))& (0+255)
  2322  0325  0086               	movwf	6
  2323  0326  0187               	clrf	7
  2324  0327  3001               	movlw	1
  2325  0328  3FC0               	movwi [0]fsr1
  2326  0329  3000               	movlw	0
  2327  032A  3FC1               	movwi [1]fsr1
  2328  032B  3001               	movlw	1
  2329  032C  07AD               	addwf	Initialize_Parameters@i,f
  2330  032D  3000               	movlw	0
  2331  032E  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2332  032F  082E               	movf	Initialize_Parameters@i+1,w
  2333  0330  3A80               	xorlw	128
  2334  0331  00D9               	movwf	??_Initialize_Parameters
  2335  0332  3080               	movlw	128
  2336  0333  0259               	subwf	??_Initialize_Parameters,w
  2337  0334  1D03               	skipz
  2338  0335  2B38               	goto	u1595
  2339  0336  3001               	movlw	1
  2340  0337  022D               	subwf	Initialize_Parameters@i,w
  2341  0338                     u1595:	
  2342  0338  1C03               	skipc
  2343  0339  2B1A               	goto	l1229
  2344  033A                     l1235:	
  2345                           
  2346                           ;Controller_Protocol.c: 120: for (i = 0; i < 1; i++) {
  2347  033A  0020               	movlb	0	; select bank0
  2348  033B  01AD               	clrf	Initialize_Parameters@i
  2349  033C  01AE               	clrf	Initialize_Parameters@i+1
  2350  033D                     L2:	
  2351  033D  082E               	movf	Initialize_Parameters@i+1,w
  2352  033E  3A80               	xorlw	128
  2353  033F  00D9               	movwf	??_Initialize_Parameters
  2354  0340  3080               	movlw	128
  2355  0341  0259               	subwf	??_Initialize_Parameters,w
  2356  0342  1D03               	skipz
  2357  0343  2B46               	goto	u1605
  2358  0344  3001               	movlw	1
  2359  0345  022D               	subwf	Initialize_Parameters@i,w
  2360  0346                     u1605:	
  2361  0346  1803               	btfsc	3,0
  2362  0347  0008               	return
  2363                           
  2364                           ;Controller_Protocol.c: 121: StP[i].Buffer_count = 1;
  2365  0348  0020               	movlb	0	; select bank0
  2366  0349  082D               	movf	Initialize_Parameters@i,w
  2367  034A  00D9               	movwf	??_Initialize_Parameters
  2368  034B  3001               	movlw	1
  2369  034C                     u1615:	
  2370  034C  35D9               	lslf	??_Initialize_Parameters,f
  2371  034D  3EFF               	addlw	-1
  2372  034E  1D03               	skipz
  2373  034F  2B4C               	goto	u1615
  2374  0350  3559               	lslf	??_Initialize_Parameters,w
  2375  0351  3E25               	addlw	(low (_StP| 0))& (0+255)
  2376  0352  0086               	movwf	6
  2377  0353  0187               	clrf	7
  2378  0354  3001               	movlw	1
  2379  0355  3FC0               	movwi [0]fsr1
  2380  0356  3000               	movlw	0
  2381  0357  3FC1               	movwi [1]fsr1
  2382                           
  2383                           ;Controller_Protocol.c: 122: SeP[i].byte_data_complete = 1;
  2384  0358  3005               	movlw	5
  2385  0359  00D9               	movwf	??_Initialize_Parameters
  2386  035A  0859               	movf	??_Initialize_Parameters,w
  2387  035B  00D5               	movwf	___bmul@multiplicand
  2388  035C  082D               	movf	Initialize_Parameters@i,w
  2389  035D  3185  2514  3183   	fcall	___bmul
  2390  0360  3E04               	addlw	4
  2391  0361  3E20               	addlw	(low (_SeP| 0))& (0+255)
  2392  0362  0086               	movwf	6
  2393  0363  0187               	clrf	7
  2394  0364  0181               	clrf	1
  2395  0365  0A81               	incf	1,f
  2396  0366  3001               	movlw	1
  2397  0367  0020               	movlb	0	; select bank0
  2398  0368  07AD               	addwf	Initialize_Parameters@i,f
  2399  0369  3000               	movlw	0
  2400  036A  3DAE               	addwfc	Initialize_Parameters@i+1,f
  2401  036B  2B3D               	goto	L2
  2402  036C                     __end_of_Initialize_Parameters:	
  2403                           
  2404                           	psect	text13
  2405  0514                     __ptext13:	
  2406 ;; *************** function ___bmul *****************
  2407 ;; Defined at:
  2408 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  multiplier      1    wreg     unsigned char 
  2411 ;;  multiplicand    1    8[BANK0 ] unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  multiplier      1   11[BANK0 ] unsigned char 
  2414 ;;  product         1   10[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2424 ;;      Params:         0       1       0       0
  2425 ;;      Locals:         0       2       0       0
  2426 ;;      Temps:          0       1       0       0
  2427 ;;      Totals:         0       4       0       0
  2428 ;;Total ram usage:        4 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    4
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_Initialize_Parameters
  2435 ;;		_Send_Till_EndSignal
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function ___bmul
  2441  0514                     ___bmul:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2445                           ;___bmul@multiplier stored from wreg
  2446  0514  0020               	movlb	0	; select bank0
  2447  0515  00D8               	movwf	___bmul@multiplier
  2448  0516  01D7               	clrf	___bmul@product
  2449  0517                     l1111:	
  2450  0517  1C58               	btfss	___bmul@multiplier,0
  2451  0518  2D1D               	goto	l1115
  2452  0519  0855               	movf	___bmul@multiplicand,w
  2453  051A  00D6               	movwf	??___bmul
  2454  051B  0856               	movf	??___bmul,w
  2455  051C  07D7               	addwf	___bmul@product,f
  2456  051D                     l1115:	
  2457  051D  1003               	clrc
  2458  051E  0DD5               	rlf	___bmul@multiplicand,f
  2459  051F  1003               	clrc
  2460  0520  0CD8               	rrf	___bmul@multiplier,f
  2461  0521  0858               	movf	___bmul@multiplier,w
  2462  0522  1D03               	btfss	3,2
  2463  0523  2D17               	goto	l1111
  2464  0524  0857               	movf	___bmul@product,w
  2465  0525  0008               	return
  2466  0526                     __end_of___bmul:	
  2467                           
  2468                           	psect	intentry
  2469  0004                     __pintentry:	
  2470 ;; *************** function _INTERRUPT_HANDLER *****************
  2471 ;; Defined at:
  2472 ;;		line 206 in file "main.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2486 ;;      Params:         0       0       0       0
  2487 ;;      Locals:         0       0       0       0
  2488 ;;      Temps:          0       0       0       0
  2489 ;;      Totals:         0       0       0       0
  2490 ;;Total ram usage:        0 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    3
  2493 ;; This function calls:
  2494 ;;		_Reception_from_master
  2495 ;; This function is called by:
  2496 ;;		Interrupt level 1
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500  0004                     _INTERRUPT_HANDLER:	
  2501                           
  2502                           ;incstack = 0
  2503  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2504                           
  2505                           ; Regs used in _INTERRUPT_HANDLER: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2506  0005  3180               	pagesel	$
  2507                           
  2508                           ;main.c: 207: if (PIR1bits.RCIF) {
  2509  0006  0020               	movlb	0	; select bank0
  2510  0007  1E91               	btfss	17,5	;volatile
  2511  0008  280C               	goto	i1l117
  2512                           
  2513                           ;main.c: 208: Reception_from_master(0xC0);
  2514  0009  30C0               	movlw	192
  2515  000A  3183  236C         	fcall	_Reception_from_master
  2516  000C                     i1l117:	
  2517                           ;main.c: 209: } else;
  2518                           
  2519  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2520  000D  0009               	retfie
  2521  000E                     __end_of_INTERRUPT_HANDLER:	
  2522                           
  2523                           	psect	text15
  2524  036C                     __ptext15:	
  2525 ;; *************** function _Reception_from_master *****************
  2526 ;; Defined at:
  2527 ;;		line 36 in file "communication.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  slave_addres    1    wreg     unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  slave_addres    1    6[BANK0 ] unsigned char 
  2532 ;;  error_comple    1    7[BANK0 ] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2542 ;;      Params:         0       0       0       0
  2543 ;;      Locals:         0       2       0       0
  2544 ;;      Temps:          3       0       0       0
  2545 ;;      Totals:         3       2       0       0
  2546 ;;Total ram usage:        5 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    2
  2549 ;; This function calls:
  2550 ;;		_Store_Datas
  2551 ;;		_slave_address_check
  2552 ;; This function is called by:
  2553 ;;		_INTERRUPT_HANDLER
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           
  2558                           ;psect for function _Reception_from_master
  2559  036C                     _Reception_from_master:	
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _Reception_from_master: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2563                           ;Reception_from_master@slave_address stored from wreg
  2564  036C  0020               	movlb	0	; select bank0
  2565  036D  00D3               	movwf	Reception_from_master@slave_address
  2566                           
  2567                           ;communication.c: 37: static uint8_t Receive_data_count = 0;;communication.c: 38: uint8_
      +                          t error_complete = 0;
  2568  036E  01D4               	clrf	Reception_from_master@error_complete
  2569                           
  2570                           ;communication.c: 53: error_complete = Store_Datas(Buffer0, RCREG, 5 * 2 + 3, 0, EUSART_
      +                          ERROR_from_master);
  2571  036F  0023               	movlb	3	; select bank3
  2572  0370  0819               	movf	25,w	;volatile
  2573  0371  00FA               	movwf	??_Reception_from_master
  2574  0372  087A               	movf	??_Reception_from_master,w
  2575  0373  00F2               	movwf	Store_Datas@received_data
  2576  0374  300D               	movlw	13
  2577  0375  00F3               	movwf	Store_Datas@number_of_receive_data
  2578  0376  3000               	movlw	0
  2579  0377  00F4               	movwf	Store_Datas@number_of_receive_data+1
  2580  0378  3000               	movlw	0
  2581  0379  00F5               	movwf	Store_Datas@bus_number
  2582  037A  00F6               	movwf	Store_Datas@bus_number+1
  2583  037B  3026               	movlw	low _EUSART_ERROR_from_master
  2584  037C  00F7               	movwf	Store_Datas@EUSART_ERROR
  2585  037D  3005               	movlw	high _EUSART_ERROR_from_master
  2586  037E  00F8               	movwf	Store_Datas@EUSART_ERROR+1
  2587  037F  3036               	movlw	(low (_Buffer0| 0))& (0+255)
  2588  0380  3180  2023  3183   	fcall	_Store_Datas
  2589  0383  00FB               	movwf	??_Reception_from_master+1
  2590  0384  087B               	movf	??_Reception_from_master+1,w
  2591  0385  0020               	movlb	0	; select bank0
  2592  0386  00D4               	movwf	Reception_from_master@error_complete
  2593                           
  2594                           ;communication.c: 56: if (error_complete == 1) {
  2595  0387  0354               	decf	Reception_from_master@error_complete,w
  2596  0388  1903               	btfsc	3,2
  2597  0389  2B92               	goto	i1l1365
  2598                           
  2599                           ;communication.c: 58: } else if ((error_complete == 2) && (Receive_data_count != (5 * 2 
      +                          + 3 - 1))) {
  2600                           
  2601                           ;communication.c: 57: Receive_data_count = 0;
  2602  038A  3002               	movlw	2
  2603  038B  0654               	xorwf	Reception_from_master@error_complete,w
  2604  038C  1D03               	btfss	3,2
  2605  038D  2B94               	goto	i1l1367
  2606  038E  300C               	movlw	12
  2607  038F  0634               	xorwf	Reception_from_master@Receive_data_count,w
  2608  0390  1903               	btfsc	3,2
  2609  0391  2B94               	goto	i1l1367
  2610  0392                     i1l1365:	
  2611                           
  2612                           ;communication.c: 59: Receive_data_count = 0;
  2613  0392  01B4               	clrf	Reception_from_master@Receive_data_count
  2614                           
  2615                           ;communication.c: 60: } else {
  2616  0393  2BA8               	goto	i1l1371
  2617  0394                     i1l1367:	
  2618                           
  2619                           ;communication.c: 61: slave_different_flag = slave_address_check(Receive_data_count, sla
      +                          ve_address, slave_different_flag);
  2620  0394  0853               	movf	Reception_from_master@slave_address,w
  2621  0395  00FA               	movwf	??_Reception_from_master
  2622  0396  087A               	movf	??_Reception_from_master,w
  2623  0397  00F0               	movwf	slave_address_check@slave_address
  2624  0398  0866               	movf	_slave_different_flag,w
  2625  0399  00FB               	movwf	??_Reception_from_master+1
  2626  039A  087B               	movf	??_Reception_from_master+1,w
  2627  039B  00F1               	movwf	slave_address_check@slave_flag
  2628  039C  0834               	movf	Reception_from_master@Receive_data_count,w
  2629  039D  3184  2447  3183   	fcall	_slave_address_check
  2630  03A0  00FC               	movwf	??_Reception_from_master+2
  2631  03A1  087C               	movf	??_Reception_from_master+2,w
  2632  03A2  0020               	movlb	0	; select bank0
  2633  03A3  00E6               	movwf	_slave_different_flag
  2634                           
  2635                           ;communication.c: 62: Receive_data_count++;
  2636  03A4  3001               	movlw	1
  2637  03A5  00FA               	movwf	??_Reception_from_master
  2638  03A6  087A               	movf	??_Reception_from_master,w
  2639  03A7  07B4               	addwf	Reception_from_master@Receive_data_count,f
  2640  03A8                     i1l1371:	
  2641                           
  2642                           ;communication.c: 63: };communication.c: 65: if ((error_complete == 2) && (Receive_data_
      +                          count == 5 * 2 + 3)) {
  2643  03A8  3002               	movlw	2
  2644  03A9  0654               	xorwf	Reception_from_master@error_complete,w
  2645  03AA  1D03               	btfss	3,2
  2646  03AB  0008               	return
  2647  03AC  300D               	movlw	13
  2648  03AD  0634               	xorwf	Reception_from_master@Receive_data_count,w
  2649  03AE  1D03               	btfss	3,2
  2650  03AF  0008               	return
  2651                           
  2652                           ;communication.c: 66: Receive_flag = 0;
  2653  03B0  01E7               	clrf	_Receive_flag
  2654                           
  2655                           ;communication.c: 67: Receive_data_count = 0;
  2656  03B1  01B4               	clrf	Reception_from_master@Receive_data_count
  2657  03B2  0008               	return
  2658  03B3                     __end_of_Reception_from_master:	
  2659                           
  2660                           	psect	text16
  2661  0447                     __ptext16:	
  2662 ;; *************** function _slave_address_check *****************
  2663 ;; Defined at:
  2664 ;;		line 74 in file "communication.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  data_count      1    wreg     unsigned char 
  2667 ;;  slave_addres    1    0[COMMON] unsigned char 
  2668 ;;  slave_flag      1    1[COMMON] unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  data_count      1    5[COMMON] unsigned char 
  2671 ;;  sample_data     1    6[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      unsigned char 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2681 ;;      Params:         2       0       0       0
  2682 ;;      Locals:         2       0       0       0
  2683 ;;      Temps:          3       0       0       0
  2684 ;;      Totals:         7       0       0       0
  2685 ;;Total ram usage:        7 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_Reception_from_master
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           
  2695                           ;psect for function _slave_address_check
  2696  0447                     _slave_address_check:	
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _slave_address_check: [wreg+status,2+status,0]
  2700                           ;slave_address_check@data_count stored from wreg
  2701  0447  00F5               	movwf	slave_address_check@data_count
  2702                           
  2703                           ;communication.c: 75: if (slave_flag == 2) {
  2704  0448  3002               	movlw	2
  2705  0449  0671               	xorwf	slave_address_check@slave_flag,w
  2706  044A  1D03               	btfss	3,2
  2707  044B  2C69               	goto	i1l1319
  2708                           
  2709                           ;communication.c: 76: if (data_count == 4) {
  2710  044C  3004               	movlw	4
  2711  044D  0675               	xorwf	slave_address_check@data_count,w
  2712  044E  1D03               	btfss	3,2
  2713  044F  2C67               	goto	i1l1313
  2714                           
  2715                           ;communication.c: 77: uint8_t sample_data = (Buffer0[1].upper_data << 4) | Buffer0[2].up
      +                          per_data;
  2716  0450  0020               	movlb	0	; select bank0
  2717  0451  0E38               	swapf	_Buffer0+2,w
  2718  0452  390F               	andlw	15
  2719  0453  00F2               	movwf	??_slave_address_check
  2720  0454  0E37               	swapf	_Buffer0+1,w
  2721  0455  390F               	andlw	15
  2722  0456  00F3               	movwf	??_slave_address_check+1
  2723  0457  3003               	movlw	3
  2724  0458                     u195_25:	
  2725  0458  35F3               	lslf	??_slave_address_check+1,f
  2726  0459  3EFF               	addlw	-1
  2727  045A  1D03               	skipz
  2728  045B  2C58               	goto	u195_25
  2729  045C  3573               	lslf	??_slave_address_check+1,w
  2730  045D  0472               	iorwf	??_slave_address_check,w
  2731  045E  00F4               	movwf	??_slave_address_check+2
  2732  045F  0874               	movf	??_slave_address_check+2,w
  2733  0460  00F6               	movwf	slave_address_check@sample_data
  2734                           
  2735                           ;communication.c: 79: if (sample_data == slave_address) {
  2736  0461  0876               	movf	slave_address_check@sample_data,w
  2737  0462  0670               	xorwf	slave_address_check@slave_address,w
  2738  0463  1D03               	skipz
  2739  0464  2C67               	goto	i1l1313
  2740                           
  2741                           ;communication.c: 80: return 1;
  2742  0465  3001               	movlw	1
  2743  0466  0008               	return
  2744  0467                     i1l1313:	
  2745                           
  2746                           ;communication.c: 81: };communication.c: 82: };communication.c: 83: return 2;
  2747  0467  3002               	movlw	2
  2748                           
  2749                           ;communication.c: 84: } else {
  2750  0468  0008               	return
  2751  0469                     i1l1319:	
  2752                           
  2753                           ;communication.c: 86: return slave_flag;
  2754  0469  0871               	movf	slave_address_check@slave_flag,w
  2755  046A  0008               	return
  2756  046B                     __end_of_slave_address_check:	
  2757                           
  2758                           	psect	text17
  2759  0023                     __ptext17:	
  2760 ;; *************** function _Store_Datas *****************
  2761 ;; Defined at:
  2762 ;;		line 34 in file "Controller_Protocol.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  Buffer          1    wreg     PTR struct .
  2765 ;;		 -> Buffer0(13), 
  2766 ;;  received_dat    1    2[COMMON] unsigned char 
  2767 ;;  number_of_re    2    3[COMMON] int 
  2768 ;;  bus_number      2    5[COMMON] int 
  2769 ;;  EUSART_ERROR    2    7[COMMON] PTR FTN()unsigned char 
  2770 ;;		 -> EUSART_ERROR_from_master(1), 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  Buffer          1    9[COMMON] PTR struct .
  2773 ;;		 -> Buffer0(13), 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      unsigned char 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2783 ;;      Params:         7       0       0       0
  2784 ;;      Locals:         1       0       0       0
  2785 ;;      Temps:          0       6       0       0
  2786 ;;      Totals:         8       6       0       0
  2787 ;;Total ram usage:       14 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    1
  2790 ;; This function calls:
  2791 ;;		_EUSART_ERROR_from_master
  2792 ;; This function is called by:
  2793 ;;		_Reception_from_master
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _Store_Datas
  2799  0023                     _Store_Datas:	
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _Store_Datas: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2803                           ;Store_Datas@Buffer stored from wreg
  2804  0023  00F9               	movwf	Store_Datas@Buffer
  2805                           
  2806                           ;Controller_Protocol.c: 35: if (EUSART_ERROR() == 1) {
  2807  0024  0878               	movf	Store_Datas@EUSART_ERROR+1,w
  2808  0025  008A               	movwf	10
  2809  0026  0877               	movf	Store_Datas@EUSART_ERROR,w
  2810  0027  000A               	callw
  2811  0028  3180               	pagesel	$
  2812  0029  3A01               	xorlw	1
  2813  002A  1D03               	skipz
  2814  002B  2857               	goto	i1l1259
  2815                           
  2816                           ;Controller_Protocol.c: 36: StP[bus_number].S_flag = 0;
  2817  002C  0875               	movf	Store_Datas@bus_number,w
  2818  002D  0020               	movlb	0	; select bank0
  2819  002E  00CD               	movwf	??_Store_Datas
  2820  002F  3001               	movlw	1
  2821  0030                     u164_25:	
  2822  0030  35CD               	lslf	??_Store_Datas,f
  2823  0031  3EFF               	addlw	-1
  2824  0032  1D03               	skipz
  2825  0033  2830               	goto	u164_25
  2826  0034  354D               	lslf	??_Store_Datas,w
  2827  0035  3E03               	addlw	3
  2828  0036  3E25               	addlw	(low (_StP| 0))& (0+255)
  2829  0037  0086               	movwf	6
  2830  0038  0187               	clrf	7
  2831  0039  0181               	clrf	1
  2832                           
  2833                           ;Controller_Protocol.c: 37: StP[bus_number].Buffer_count = 0;
  2834  003A  0875               	movf	Store_Datas@bus_number,w
  2835  003B  00CD               	movwf	??_Store_Datas
  2836  003C  3001               	movlw	1
  2837  003D                     u165_25:	
  2838  003D  35CD               	lslf	??_Store_Datas,f
  2839  003E  3EFF               	addlw	-1
  2840  003F  1D03               	skipz
  2841  0040  283D               	goto	u165_25
  2842  0041  354D               	lslf	??_Store_Datas,w
  2843  0042  3E25               	addlw	(low (_StP| 0))& (0+255)
  2844  0043  0086               	movwf	6
  2845  0044  0187               	clrf	7
  2846  0045  3000               	movlw	0
  2847  0046  3FC0               	movwi [0]fsr1
  2848  0047  3FC1               	movwi [1]fsr1
  2849                           
  2850                           ;Controller_Protocol.c: 38: StP[bus_number].Start_signal_has_come = 0;
  2851  0048  0875               	movf	Store_Datas@bus_number,w
  2852  0049  00CD               	movwf	??_Store_Datas
  2853  004A  3001               	movlw	1
  2854  004B                     u166_25:	
  2855  004B  35CD               	lslf	??_Store_Datas,f
  2856  004C  3EFF               	addlw	-1
  2857  004D  1D03               	skipz
  2858  004E  284B               	goto	u166_25
  2859  004F  354D               	lslf	??_Store_Datas,w
  2860  0050  3E02               	addlw	2
  2861  0051  3E25               	addlw	(low (_StP| 0))& (0+255)
  2862  0052  0086               	movwf	6
  2863  0053  0187               	clrf	7
  2864  0054  0181               	clrf	1
  2865                           
  2866                           ;Controller_Protocol.c: 39: return 1;
  2867  0055  3001               	movlw	1
  2868                           
  2869                           ;Controller_Protocol.c: 40: } else {
  2870  0056  0008               	return
  2871  0057                     i1l1259:	
  2872                           
  2873                           ;Controller_Protocol.c: 41: if (StP[bus_number].Start_signal_has_come == 0) {
  2874  0057  0875               	movf	Store_Datas@bus_number,w
  2875  0058  0020               	movlb	0	; select bank0
  2876  0059  00CD               	movwf	??_Store_Datas
  2877  005A  3001               	movlw	1
  2878  005B                     u167_25:	
  2879  005B  35CD               	lslf	??_Store_Datas,f
  2880  005C  3EFF               	addlw	-1
  2881  005D  1D03               	skipz
  2882  005E  285B               	goto	u167_25
  2883  005F  354D               	lslf	??_Store_Datas,w
  2884  0060  3E02               	addlw	2
  2885  0061  3E25               	addlw	(low (_StP| 0))& (0+255)
  2886  0062  0086               	movwf	6
  2887  0063  0187               	clrf	7
  2888  0064  0801               	movf	1,w
  2889  0065  1D03               	btfss	3,2
  2890  0066  28C4               	goto	i1l1275
  2891                           
  2892                           ;Controller_Protocol.c: 42: Buffer[StP[bus_number].S_flag].all_data = received_data;
  2893  0067  0872               	movf	Store_Datas@received_data,w
  2894  0068  00CD               	movwf	??_Store_Datas
  2895  0069  0875               	movf	Store_Datas@bus_number,w
  2896  006A  00CE               	movwf	??_Store_Datas+1
  2897  006B  3001               	movlw	1
  2898  006C                     u169_25:	
  2899  006C  35CE               	lslf	??_Store_Datas+1,f
  2900  006D  3EFF               	addlw	-1
  2901  006E  1D03               	skipz
  2902  006F  286C               	goto	u169_25
  2903  0070  354E               	lslf	??_Store_Datas+1,w
  2904  0071  3E03               	addlw	3
  2905  0072  3E25               	addlw	(low (_StP| 0))& (0+255)
  2906  0073  0086               	movwf	6
  2907  0074  0187               	clrf	7
  2908  0075  0801               	movf	1,w
  2909  0076  0779               	addwf	Store_Datas@Buffer,w
  2910  0077  00CF               	movwf	??_Store_Datas+2
  2911  0078  084F               	movf	??_Store_Datas+2,w
  2912  0079  0086               	movwf	6
  2913  007A  0187               	clrf	7
  2914  007B  084D               	movf	??_Store_Datas,w
  2915  007C  0081               	movwf	1
  2916                           
  2917                           ;Controller_Protocol.c: 43: if (StP[bus_number].S_flag == 1) {
  2918  007D  0875               	movf	Store_Datas@bus_number,w
  2919  007E  00CD               	movwf	??_Store_Datas
  2920  007F  3001               	movlw	1
  2921  0080                     u170_25:	
  2922  0080  35CD               	lslf	??_Store_Datas,f
  2923  0081  3EFF               	addlw	-1
  2924  0082  1D03               	skipz
  2925  0083  2880               	goto	u170_25
  2926  0084  354D               	lslf	??_Store_Datas,w
  2927  0085  3E03               	addlw	3
  2928  0086  3E25               	addlw	(low (_StP| 0))& (0+255)
  2929  0087  0086               	movwf	6
  2930  0088  0187               	clrf	7
  2931  0089  0301               	decf	1,w
  2932  008A  1D03               	btfss	3,2
  2933  008B  28AC               	goto	i1l1267
  2934                           
  2935                           ;Controller_Protocol.c: 44: if (Buffer[1].lower_data == 5) StP[bus_number].Start_signal_
      +                          has_come = 1;
  2936  008C  0A79               	incf	Store_Datas@Buffer,w
  2937  008D  0086               	movwf	6
  2938  008E  0187               	clrf	7
  2939  008F  0801               	movf	1,w
  2940  0090  390F               	andlw	15
  2941  0091  3A05               	xorlw	5
  2942  0092  1D03               	skipz
  2943  0093  28A2               	goto	i1l207
  2944  0094  0875               	movf	Store_Datas@bus_number,w
  2945  0095  00CD               	movwf	??_Store_Datas
  2946  0096  3001               	movlw	1
  2947  0097                     u173_25:	
  2948  0097  35CD               	lslf	??_Store_Datas,f
  2949  0098  3EFF               	addlw	-1
  2950  0099  1D03               	skipz
  2951  009A  2897               	goto	u173_25
  2952  009B  354D               	lslf	??_Store_Datas,w
  2953  009C  3E02               	addlw	2
  2954  009D  3E25               	addlw	(low (_StP| 0))& (0+255)
  2955  009E  0086               	movwf	6
  2956  009F  0187               	clrf	7
  2957  00A0  0181               	clrf	1
  2958  00A1  0A81               	incf	1,f
  2959  00A2                     i1l207:	
  2960                           
  2961                           ;Controller_Protocol.c: 45: StP[bus_number].S_flag = 0;
  2962  00A2  0875               	movf	Store_Datas@bus_number,w
  2963  00A3  00CD               	movwf	??_Store_Datas
  2964  00A4  3001               	movlw	1
  2965  00A5                     u174_25:	
  2966  00A5  35CD               	lslf	??_Store_Datas,f
  2967  00A6  3EFF               	addlw	-1
  2968  00A7  1D03               	skipz
  2969  00A8  28A5               	goto	u174_25
  2970  00A9  354D               	lslf	??_Store_Datas,w
  2971  00AA  3E03               	addlw	3
  2972  00AB  29A9               	goto	L3
  2973  00AC                     i1l1267:	
  2974                           ;Controller_Protocol.c: 46: } else if (Buffer[0].all_data == 'S') {
  2975                           
  2976  00AC  0879               	movf	Store_Datas@Buffer,w
  2977  00AD  0086               	movwf	6
  2978  00AE  0187               	clrf	7
  2979  00AF  3053               	movlw	83
  2980  00B0  0601               	xorwf	1,w
  2981  00B1  1D03               	btfss	3,2
  2982  00B2  28C2               	goto	i1l1271
  2983                           
  2984                           ;Controller_Protocol.c: 47: StP[bus_number].S_flag = 1;
  2985  00B3  0875               	movf	Store_Datas@bus_number,w
  2986  00B4  00CD               	movwf	??_Store_Datas
  2987  00B5  3001               	movlw	1
  2988  00B6                     u176_25:	
  2989  00B6  35CD               	lslf	??_Store_Datas,f
  2990  00B7  3EFF               	addlw	-1
  2991  00B8  1D03               	skipz
  2992  00B9  28B6               	goto	u176_25
  2993  00BA  354D               	lslf	??_Store_Datas,w
  2994  00BB  3E03               	addlw	3
  2995  00BC  3E25               	addlw	(low (_StP| 0))& (0+255)
  2996  00BD  0086               	movwf	6
  2997  00BE  0187               	clrf	7
  2998  00BF  0181               	clrf	1
  2999  00C0  0A81               	incf	1,f
  3000                           
  3001                           ;Controller_Protocol.c: 48: }else return 1;
  3002  00C1  29AD               	goto	i1l1297
  3003  00C2                     i1l1271:	
  3004  00C2  3001               	movlw	1
  3005  00C3  0008               	return
  3006  00C4                     i1l1275:	
  3007                           ;Controller_Protocol.c: 49: } else {
  3008                           
  3009                           
  3010                           ;Controller_Protocol.c: 50: StP[bus_number].Buffer_count++;
  3011  00C4  0875               	movf	Store_Datas@bus_number,w
  3012  00C5  00CD               	movwf	??_Store_Datas
  3013  00C6  3001               	movlw	1
  3014  00C7                     u177_25:	
  3015  00C7  35CD               	lslf	??_Store_Datas,f
  3016  00C8  3EFF               	addlw	-1
  3017  00C9  1D03               	skipz
  3018  00CA  28C7               	goto	u177_25
  3019  00CB  354D               	lslf	??_Store_Datas,w
  3020  00CC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3021  00CD  0086               	movwf	6
  3022  00CE  0187               	clrf	7
  3023  00CF  3001               	movlw	1
  3024  00D0  0781               	addwf	1,f
  3025  00D1  3141               	addfsr 1,1
  3026  00D2  1803               	skipnc
  3027  00D3  0A81               	incf	1,f
  3028                           
  3029                           ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count > number_of_receive_data - 1
      +                          ){
  3030  00D4  0875               	movf	Store_Datas@bus_number,w
  3031  00D5  00CD               	movwf	??_Store_Datas
  3032  00D6  3001               	movlw	1
  3033  00D7                     u178_25:	
  3034  00D7  35CD               	lslf	??_Store_Datas,f
  3035  00D8  3EFF               	addlw	-1
  3036  00D9  1D03               	skipz
  3037  00DA  28D7               	goto	u178_25
  3038  00DB  354D               	lslf	??_Store_Datas,w
  3039  00DC  3E25               	addlw	(low (_StP| 0))& (0+255)
  3040  00DD  0086               	movwf	6
  3041  00DE  0187               	clrf	7
  3042  00DF  3F40               	moviw [0]fsr1
  3043  00E0  00CE               	movwf	??_Store_Datas+1
  3044  00E1  3F41               	moviw [1]fsr1
  3045  00E2  00CF               	movwf	??_Store_Datas+2
  3046  00E3  0873               	movf	Store_Datas@number_of_receive_data,w
  3047  00E4  3EFF               	addlw	255
  3048  00E5  00D0               	movwf	??_Store_Datas+3
  3049  00E6  30FF               	movlw	255
  3050  00E7  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3051  00E8  00D1               	movwf	??_Store_Datas+4
  3052  00E9  0851               	movf	??_Store_Datas+4,w
  3053  00EA  3A80               	xorlw	128
  3054  00EB  00D2               	movwf	??_Store_Datas+5
  3055  00EC  084F               	movf	??_Store_Datas+2,w
  3056  00ED  3A80               	xorlw	128
  3057  00EE  0252               	subwf	??_Store_Datas+5,w
  3058  00EF  1D03               	skipz
  3059  00F0  28F3               	goto	u179_25
  3060  00F1  084E               	movf	??_Store_Datas+1,w
  3061  00F2  0250               	subwf	??_Store_Datas+3,w
  3062  00F3                     u179_25:	
  3063  00F3  1803               	skipnc
  3064  00F4  2914               	goto	i1l1283
  3065                           
  3066                           ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
  3067  00F5  0875               	movf	Store_Datas@bus_number,w
  3068  00F6  0020               	movlb	0	; select bank0
  3069  00F7  00CD               	movwf	??_Store_Datas
  3070  00F8  3001               	movlw	1
  3071  00F9                     u180_25:	
  3072  00F9  35CD               	lslf	??_Store_Datas,f
  3073  00FA  3EFF               	addlw	-1
  3074  00FB  1D03               	skipz
  3075  00FC  28F9               	goto	u180_25
  3076  00FD  354D               	lslf	??_Store_Datas,w
  3077  00FE  3E25               	addlw	(low (_StP| 0))& (0+255)
  3078  00FF  0086               	movwf	6
  3079  0100  0187               	clrf	7
  3080  0101  3001               	movlw	1
  3081  0102  3FC0               	movwi [0]fsr1
  3082  0103  3000               	movlw	0
  3083  0104  3FC1               	movwi [1]fsr1
  3084                           
  3085                           ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
  3086  0105  0875               	movf	Store_Datas@bus_number,w
  3087  0106  00CD               	movwf	??_Store_Datas
  3088  0107  3001               	movlw	1
  3089  0108                     u181_25:	
  3090  0108  35CD               	lslf	??_Store_Datas,f
  3091  0109  3EFF               	addlw	-1
  3092  010A  1D03               	skipz
  3093  010B  2908               	goto	u181_25
  3094  010C  354D               	lslf	??_Store_Datas,w
  3095  010D  3E02               	addlw	2
  3096  010E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3097  010F  0086               	movwf	6
  3098  0110  0187               	clrf	7
  3099  0111  0181               	clrf	1
  3100                           
  3101                           ;Controller_Protocol.c: 55: return 1;
  3102  0112  3001               	movlw	1
  3103  0113  0008               	return
  3104  0114                     i1l1283:	
  3105                           
  3106                           ;Controller_Protocol.c: 56: };Controller_Protocol.c: 58: Buffer[StP[bus_number].Buffer_c
      +                          ount].all_data = received_data;
  3107  0114  0872               	movf	Store_Datas@received_data,w
  3108  0115  0020               	movlb	0	; select bank0
  3109  0116  00CD               	movwf	??_Store_Datas
  3110  0117  0875               	movf	Store_Datas@bus_number,w
  3111  0118  00CE               	movwf	??_Store_Datas+1
  3112  0119  3001               	movlw	1
  3113  011A                     u182_25:	
  3114  011A  35CE               	lslf	??_Store_Datas+1,f
  3115  011B  3EFF               	addlw	-1
  3116  011C  1D03               	skipz
  3117  011D  291A               	goto	u182_25
  3118  011E  354E               	lslf	??_Store_Datas+1,w
  3119  011F  3E25               	addlw	(low (_StP| 0))& (0+255)
  3120  0120  0086               	movwf	6
  3121  0121  0187               	clrf	7
  3122  0122  0801               	movf	1,w
  3123  0123  0779               	addwf	Store_Datas@Buffer,w
  3124  0124  00CF               	movwf	??_Store_Datas+2
  3125  0125  084F               	movf	??_Store_Datas+2,w
  3126  0126  0086               	movwf	6
  3127  0127  0187               	clrf	7
  3128  0128  084D               	movf	??_Store_Datas,w
  3129  0129  0081               	movwf	1
  3130                           
  3131                           ;Controller_Protocol.c: 59: if (Buffer[StP[bus_number].Buffer_count].all_data == 'C') {
  3132  012A  0875               	movf	Store_Datas@bus_number,w
  3133  012B  00CD               	movwf	??_Store_Datas
  3134  012C  3001               	movlw	1
  3135  012D                     u183_25:	
  3136  012D  35CD               	lslf	??_Store_Datas,f
  3137  012E  3EFF               	addlw	-1
  3138  012F  1D03               	skipz
  3139  0130  292D               	goto	u183_25
  3140  0131  354D               	lslf	??_Store_Datas,w
  3141  0132  3E25               	addlw	(low (_StP| 0))& (0+255)
  3142  0133  0086               	movwf	6
  3143  0134  0187               	clrf	7
  3144  0135  0801               	movf	1,w
  3145  0136  0779               	addwf	Store_Datas@Buffer,w
  3146  0137  00CE               	movwf	??_Store_Datas+1
  3147  0138  084E               	movf	??_Store_Datas+1,w
  3148  0139  0086               	movwf	6
  3149  013A  0187               	clrf	7
  3150  013B  3043               	movlw	67
  3151  013C  0601               	xorwf	1,w
  3152  013D  1D03               	btfss	3,2
  3153  013E  2974               	goto	i1l1293
  3154                           
  3155                           ;Controller_Protocol.c: 61: if (Buffer[StP[bus_number].Buffer_count - 1].upper_data == 3
      +                          ) {
  3156  013F  0875               	movf	Store_Datas@bus_number,w
  3157  0140  00CD               	movwf	??_Store_Datas
  3158  0141  3001               	movlw	1
  3159  0142                     u185_25:	
  3160  0142  35CD               	lslf	??_Store_Datas,f
  3161  0143  3EFF               	addlw	-1
  3162  0144  1D03               	skipz
  3163  0145  2942               	goto	u185_25
  3164  0146  354D               	lslf	??_Store_Datas,w
  3165  0147  3E25               	addlw	(low (_StP| 0))& (0+255)
  3166  0148  0086               	movwf	6
  3167  0149  0187               	clrf	7
  3168  014A  0801               	movf	1,w
  3169  014B  3EFF               	addlw	-1
  3170  014C  0779               	addwf	Store_Datas@Buffer,w
  3171  014D  00CE               	movwf	??_Store_Datas+1
  3172  014E  084E               	movf	??_Store_Datas+1,w
  3173  014F  0086               	movwf	6
  3174  0150  0187               	clrf	7
  3175  0151  0E01               	swapf	1,w
  3176  0152  390F               	andlw	15
  3177  0153  3A03               	xorlw	3
  3178  0154  1D03               	skipz
  3179  0155  2974               	goto	i1l1293
  3180                           
  3181                           ;Controller_Protocol.c: 62: StP[bus_number].Buffer_count = 1;
  3182  0156  0875               	movf	Store_Datas@bus_number,w
  3183  0157  00CD               	movwf	??_Store_Datas
  3184  0158  3001               	movlw	1
  3185  0159                     u187_25:	
  3186  0159  35CD               	lslf	??_Store_Datas,f
  3187  015A  3EFF               	addlw	-1
  3188  015B  1D03               	skipz
  3189  015C  2959               	goto	u187_25
  3190  015D  354D               	lslf	??_Store_Datas,w
  3191  015E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3192  015F  0086               	movwf	6
  3193  0160  0187               	clrf	7
  3194  0161  3001               	movlw	1
  3195  0162  3FC0               	movwi [0]fsr1
  3196  0163  3000               	movlw	0
  3197  0164  3FC1               	movwi [1]fsr1
  3198                           
  3199                           ;Controller_Protocol.c: 63: StP[bus_number].Start_signal_has_come = 0;
  3200  0165  0875               	movf	Store_Datas@bus_number,w
  3201  0166  00CD               	movwf	??_Store_Datas
  3202  0167  3001               	movlw	1
  3203  0168                     u188_25:	
  3204  0168  35CD               	lslf	??_Store_Datas,f
  3205  0169  3EFF               	addlw	-1
  3206  016A  1D03               	skipz
  3207  016B  2968               	goto	u188_25
  3208  016C  354D               	lslf	??_Store_Datas,w
  3209  016D  3E02               	addlw	2
  3210  016E  3E25               	addlw	(low (_StP| 0))& (0+255)
  3211  016F  0086               	movwf	6
  3212  0170  0187               	clrf	7
  3213  0171  0181               	clrf	1
  3214                           
  3215                           ;Controller_Protocol.c: 64: return 2;
  3216  0172  3002               	movlw	2
  3217  0173  0008               	return
  3218  0174                     i1l1293:	
  3219                           
  3220                           ;Controller_Protocol.c: 65: };Controller_Protocol.c: 66: };Controller_Protocol.c: 67: if
      +                           (StP[bus_number].Buffer_count == number_of_receive_data - 1) {
  3221  0174  0875               	movf	Store_Datas@bus_number,w
  3222  0175  00CD               	movwf	??_Store_Datas
  3223  0176  3001               	movlw	1
  3224  0177                     u189_25:	
  3225  0177  35CD               	lslf	??_Store_Datas,f
  3226  0178  3EFF               	addlw	-1
  3227  0179  1D03               	skipz
  3228  017A  2977               	goto	u189_25
  3229  017B  354D               	lslf	??_Store_Datas,w
  3230  017C  3E25               	addlw	(low (_StP| 0))& (0+255)
  3231  017D  0086               	movwf	6
  3232  017E  0187               	clrf	7
  3233  017F  3F40               	moviw [0]fsr1
  3234  0180  00CE               	movwf	??_Store_Datas+1
  3235  0181  3F41               	moviw [1]fsr1
  3236  0182  00CF               	movwf	??_Store_Datas+2
  3237  0183  0873               	movf	Store_Datas@number_of_receive_data,w
  3238  0184  3EFF               	addlw	255
  3239  0185  00D0               	movwf	??_Store_Datas+3
  3240  0186  30FF               	movlw	255
  3241  0187  3D74               	addwfc	Store_Datas@number_of_receive_data+1,w
  3242  0188  00D1               	movwf	??_Store_Datas+4
  3243  0189  084F               	movf	??_Store_Datas+2,w
  3244  018A  0651               	xorwf	??_Store_Datas+4,w
  3245  018B  1D03               	skipz
  3246  018C  298F               	goto	u190_25
  3247  018D  084E               	movf	??_Store_Datas+1,w
  3248  018E  0650               	xorwf	??_Store_Datas+3,w
  3249  018F                     u190_25:	
  3250  018F  1D03               	skipz
  3251  0190  29AD               	goto	i1l1297
  3252                           
  3253                           ;Controller_Protocol.c: 68: StP[bus_number].Buffer_count = 1;
  3254  0191  0875               	movf	Store_Datas@bus_number,w
  3255  0192  00CD               	movwf	??_Store_Datas
  3256  0193  3001               	movlw	1
  3257  0194                     u191_25:	
  3258  0194  35CD               	lslf	??_Store_Datas,f
  3259  0195  3EFF               	addlw	-1
  3260  0196  1D03               	skipz
  3261  0197  2994               	goto	u191_25
  3262  0198  354D               	lslf	??_Store_Datas,w
  3263  0199  3E25               	addlw	(low (_StP| 0))& (0+255)
  3264  019A  0086               	movwf	6
  3265  019B  0187               	clrf	7
  3266  019C  3001               	movlw	1
  3267  019D  3FC0               	movwi [0]fsr1
  3268  019E  3000               	movlw	0
  3269  019F  3FC1               	movwi [1]fsr1
  3270                           
  3271                           ;Controller_Protocol.c: 69: StP[bus_number].Start_signal_has_come = 0;
  3272  01A0  0875               	movf	Store_Datas@bus_number,w
  3273  01A1  00CD               	movwf	??_Store_Datas
  3274  01A2  3001               	movlw	1
  3275  01A3                     u192_25:	
  3276  01A3  35CD               	lslf	??_Store_Datas,f
  3277  01A4  3EFF               	addlw	-1
  3278  01A5  1D03               	skipz
  3279  01A6  29A3               	goto	u192_25
  3280  01A7  354D               	lslf	??_Store_Datas,w
  3281  01A8  3E02               	addlw	2
  3282  01A9                     L3:	
  3283  01A9  3E25               	addlw	(low (_StP| 0))& (0+255)
  3284  01AA  0086               	movwf	6
  3285  01AB  0187               	clrf	7
  3286  01AC  0181               	clrf	1
  3287  01AD                     i1l1297:	
  3288                           
  3289                           ;Controller_Protocol.c: 70: };Controller_Protocol.c: 71: };Controller_Protocol.c: 73: re
      +                          turn 0;
  3290  01AD  3000               	movlw	0
  3291  01AE  0008               	return
  3292  01AF                     __end_of_Store_Datas:	
  3293                           
  3294                           	psect	text18
  3295  0526                     __ptext18:	
  3296 ;; *************** function _EUSART_ERROR_from_master *****************
  3297 ;; Defined at:
  3298 ;;		line 24 in file "communication.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  waste_data      1    1[COMMON] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      unsigned char 
  3305 ;; Registers used:
  3306 ;;		wreg
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3312 ;;      Params:         0       0       0       0
  3313 ;;      Locals:         1       0       0       0
  3314 ;;      Temps:          1       0       0       0
  3315 ;;      Totals:         2       0       0       0
  3316 ;;Total ram usage:        2 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_Reception_from_master
  3322 ;;		_Store_Datas
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function _EUSART_ERROR_from_master
  3328  0526                     _EUSART_ERROR_from_master:	
  3329                           
  3330                           ;communication.c: 25: if ((RCSTAbits.FERR == 1) || (RCSTAbits.OERR == 1)) {
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _EUSART_ERROR_from_master: [wreg]
  3334  0526  0023               	movlb	3	; select bank3
  3335  0527  191D               	btfsc	29,2	;volatile
  3336  0528  2D2B               	goto	i1l1097
  3337  0529  1C9D               	btfss	29,1	;volatile
  3338  052A  2D33               	goto	i1l1105
  3339  052B                     i1l1097:	
  3340                           
  3341                           ;communication.c: 27: uint8_t waste_data = RCREG;
  3342  052B  0819               	movf	25,w	;volatile
  3343  052C  00F0               	movwf	??_EUSART_ERROR_from_master
  3344  052D  0870               	movf	??_EUSART_ERROR_from_master,w
  3345  052E  00F1               	movwf	EUSART_ERROR_from_master@waste_data
  3346                           
  3347                           ;communication.c: 29: RCSTAbits.CREN = 0;
  3348  052F  121D               	bcf	29,4	;volatile
  3349                           
  3350                           ;communication.c: 30: RCSTAbits.CREN = 1;
  3351  0530  161D               	bsf	29,4	;volatile
  3352                           
  3353                           ;communication.c: 31: return 1;
  3354  0531  3001               	movlw	1
  3355  0532  0008               	return
  3356  0533                     i1l1105:	
  3357                           
  3358                           ;communication.c: 32: };communication.c: 33: return 0;
  3359  0533  3000               	movlw	0
  3360  0534  0008               	return
  3361  0535                     __end_of_EUSART_ERROR_from_master:	
  3362  007E                     btemp	set	126	;btemp
  3363  007E                     int$flags	set	126
  3364  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     25      72
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    Store_Datas@Buffer	PTR struct . size(1) Largest target is 13
		 -> Buffer0(BANK0[13]), 

    Store_Datas@EUSART_ERROR	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_ERROR_from_master(), 

    Organize_Datas@Buffer	PTR struct . size(1) Largest target is 13
		 -> Buffer0(BANK0[13]), 

    Organize_Datas@RxData	PTR struct . size(1) Largest target is 10
		 -> RxData0(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_HANDLER in COMMON

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas
    _Store_Datas->_EUSART_ERROR_from_master

Critical Paths under _main in BANK0

    _main->_Reception_from_master_main
    _SetData->_ChangeAddress
    _ChangeData->_Write_data
    _ChangeAddress->_Write_Address
    _Reception_from_master_main->_Organize_Datas
    _Initialize->_Initialize_Parameters
    _Initialize_Parameters->___bmul

Critical Paths under _INTERRUPT_HANDLER in BANK0

    _INTERRUPT_HANDLER->_Reception_from_master
    _Reception_from_master->_Store_Datas

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_HANDLER in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4    3515
                                             20 BANK0      5     1      4
                         _Initialize
                     _Organize_Datas
         _Reception_from_master_main
                            _SetData
 ---------------------------------------------------------------------------------
 (1) _SetData                                              1     1      0     721
                                             13 BANK0      1     1      0
                      _ChangeAddress
                         _ChangeData
 ---------------------------------------------------------------------------------
 (2) _ChangeData                                           0     0      0     480
                         _Write_data
 ---------------------------------------------------------------------------------
 (3) _Write_data                                           2     0      2     480
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ChangeAddress                                        3     3      0     241
                                             10 BANK0      3     3      0
                      _Write_Address
 ---------------------------------------------------------------------------------
 (3) _Write_Address                                        2     0      2     218
                                              8 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Reception_from_master_main                           1     1      0    1182
                                             19 BANK0      1     1      0
                     _Organize_Datas
 ---------------------------------------------------------------------------------
 (2) _Organize_Datas                                      11     6      5    1182
                                              8 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           1     1      0     430
                                             13 BANK0      1     1      0
              _Initialize_Parameters
              _Oscillator_Initialize
                     _Pin_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Pin_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Oscillator_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Initialize_Parameters                                1     1      0     430
                                             12 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     430
                                              8 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_HANDLER                                    0     0      0    1395
              _Reception_from_master
 ---------------------------------------------------------------------------------
 (5) _Reception_from_master                                5     5      0    1395
                                             10 COMMON     3     3      0
                                              6 BANK0      2     2      0
                        _Store_Datas
                _slave_address_check
 ---------------------------------------------------------------------------------
 (6) _slave_address_check                                  7     5      2     263
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (6) _Store_Datas                                         14     7      7    1042
                                              2 COMMON     8     1      7
                                              0 BANK0      6     6      0
           _EUSART_ERROR_from_master *
 ---------------------------------------------------------------------------------
 (7) _EUSART_ERROR_from_master                             2     2      0       1
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
     _Initialize_Parameters
       ___bmul
     _Oscillator_Initialize
     _Pin_Initialize
     _UART_Initialize
   _Organize_Datas
   _Reception_from_master_main
     _Organize_Datas
   _SetData
     _ChangeAddress
       _Write_Address
     _ChangeData
       _Write_data

 _INTERRUPT_HANDLER (ROOT)
   _Reception_from_master
     _Store_Datas
       _EUSART_ERROR_from_master *
     _slave_address_check

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      55       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     19      48       6       90.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      55      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Aug 06 15:11:42 2019

                         ___bmul@product 0057                 Store_Datas@received_data 0072  
                            __CFG_CP$OFF 0000                                       _OP 0029  
                                    l192 01CF                                      l195 0296  
                                    l197 02EA                             __CFG_CPD$OFF 0000  
                                    _SeP 0020                                      _StP 0025  
                  _Oscillator_Initialize 053B       EUSART_ERROR_from_master@waste_data 0071  
                           __CFG_BORV$HI 0000                                      wreg 0009  
                           __CFG_LVP$OFF 0000                               _ChangeData 03F4  
                                   l1111 0517                                     l1115 051D  
                                   l1133 02D8                                     l1143 047A  
                                   l1129 0284                                     l1161 040B  
                                   l1235 033A                                     l1229 031A  
                                   l1165 0417                                     l1157 03FF  
                                   l1343 04A7                                     l1385 043C  
                                   l1379 0426                                     u1110 03B9  
                                   u1050 04B4                                     u1210 03E1  
                                   u1130 03C1                                     u1204 03DB  
                                   u1124 03BB                                     u1070 04BC  
                                   u1230 03E9                                     u1150 03C9  
                                   u1064 04B6                                     u1224 03E3  
                                   u1144 03C3                                     u1090 04C4  
                                   u1250 03F1                                     u1170 03D1  
                                   u1315 01B4                                     u1084 04BE  
                                   u1244 03EB                                     u1164 03CB  
                                   u1405 0274                                     u1325 01C4  
                                   u1190 03D9                                     u1415 0287  
                                   u1335 01EE                                     u1184 03D3  
                                   u1505 01E8                                     u1425 0299  
                                   u1345 0203                                     u1435 02AF  
                                   u1355 021A                                     u1605 0346  
                                   u1365 0230                                     u1615 034C  
                                   u1455 02C8                                     u1375 0246  
                                   u1465 02DB                                     u1385 025B  
                                   u1475 02ED                                     u1485 02FE  
                                   u1575 0318                                     u1495 01D2  
                                   u1585 031E                                     u1595 0338  
                           __CFG_WRT$OFF 0000                                     _main 0423  
                                   fsr0h 0005                                     fsr1h 0007  
                                   indf0 0000                                     fsr0l 0004  
                                   indf1 0001                                     fsr1l 0006  
                                   btemp 007E                                     _zero 002F  
                 ?_Reception_from_master 0070                                     start 000E  
                          __CFG_IESO$OFF 0000                        ___bmul@multiplier 0058  
                        __end_of_SetData 04DD                         ?_UART_Initialize 0070  
               Organize_Datas@bus_number 0058                            __CFG_PLLEN$ON 0000  
                 __size_of_Write_Address 0019                                    ?_main 0061  
                          __CFG_WDTE$OFF 0000                    Store_Datas@bus_number 0075  
                                  i1l117 000C                                    i1l207 00A2  
                                  _RCREG 0199                           __CFG_FCMEN$OFF 0000  
       slave_address_check@slave_address 0070                           _Organize_Datas 01AF  
                         __CFG_BOREN$OFF 0000                                    pclath 000A  
Reception_from_master@Receive_data_count 0034                    _Initialize_Parameters 030C  
                                  status 0003             Organize_Datas@number_of_data 0056  
                                  wtemp0 007E                           __CFG_MCLRE$OFF 0000  
                        __initialization 0010              ?_Reception_from_master_main 0070  
                           __end_of_main 0447                               _Initialize 04DD  
                 ?_Oscillator_Initialize 0070                                   ??_main 0065  
                 __end_of_Organize_Datas 030C                              ?_ChangeData 0070  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 i1l1105 0533                                   i1l1313 0467  
                                 i1l1271 00C2                                   i1l1319 0469  
                                 i1l1097 052B                                   i1l1283 0114  
                                 i1l1267 00AC                                   i1l1275 00C4  
                                 i1l1259 0057                                   i1l1371 03A8  
                                 i1l1293 0174                                   i1l1365 0392  
                                 i1l1367 0394                                   i1l1297 01AD  
                          _Write_Address 04AE         __end_of_EUSART_ERROR_from_master 0535  
                                 u170_25 0080                                   u180_25 00F9  
                                 u164_25 0030                                   u181_25 0108  
                                 u173_25 0097                                   u165_25 003D  
                                 u190_25 018F                                   u182_25 011A  
                                 u174_25 00A5                                   u166_25 004B  
                                 u191_25 0194                                   u183_25 012D  
                                 u167_25 005B                                   u192_25 01A3  
                                 u176_25 00B6                                   u185_25 0142  
                                 u177_25 00C7                                   u169_25 006C  
                                 u178_25 00D7                                   u187_25 0159  
                                 u179_25 00F3                                   u195_25 0458  
                                 u188_25 0168                                   u189_25 0177  
                                 _OSCCON 0099                                   _SPBRGH 019C  
                                 _SPBRGL 019B                           __CFG_PWRTE$OFF 0000  
                              ??_SetData 005A                                   ___bmul 0514  
           __size_of_slave_address_check 0024                   __size_of_ChangeAddress 0023  
                        ?_Organize_Datas 0055                   ?_Initialize_Parameters 0070  
                         ?_Write_Address 0055                  __end_of__initialization 001F  
                    ___bmul@multiplicand 0055                           __pcstackCOMMON 0070  
                           __pidataBANK0 053F                               _Write_data 03B3  
                    __size_of_ChangeData 002F                              ?_Initialize 0070  
    __size_of_Reception_from_master_main 0020                  ??_Reception_from_master 007A  
                             __pbssBANK0 0020                            ??_Store_Datas 004D  
                        __CFG_VCAPEN$OFF 0000                            _ChangeAddress 046B  
                Store_Datas@EUSART_ERROR 0077                 _EUSART_ERROR_from_master 0526  
                             __pmaintext 0423                                  ?___bmul 0055  
                             __pintentry 0004                  __size_of_Pin_Initialize 0012  
                      Store_Datas@Buffer 0079                          ??_Write_Address 0057  
                    __size_of_Initialize 0013                           ?_ChangeAddress 0070  
                                _Buffer0 0036                                  _RxData0 0043  
                                _SetData 04C7                       _not_of_before_data 0033  
                    __end_of_Store_Datas 01AF                          __size_of___bmul 0012  
                ??_Oscillator_Initialize 0055                              ?_Write_data 0055  
                                _address 0031                          __CFG_STVREN$OFF 0000  
                                __ptext1 04C7                                  __ptext2 03F4  
                                __ptext3 03B3                                  __ptext4 046B  
                                __ptext5 04AE                                  __ptext6 048E  
                                __ptext7 01AF                                  __ptext8 04DD  
                                __ptext9 04F0                        _INTERRUPT_HANDLER 0004  
                     ?_INTERRUPT_HANDLER 0070                 __size_of_UART_Initialize 0012  
                           ??_ChangeData 0057                                  clrloop0 0536  
                   end_of_initialization 001F                      _slave_address_check 0447  
                    ??_INTERRUPT_HANDLER 007D      Reception_from_master@error_complete 0054  
                              _RCSTAbits 019D                     ?_slave_address_check 0070  
         slave_address_check@sample_data 0076                __end_of_INTERRUPT_HANDLER 000E  
                     __end_of_ChangeData 0423                     _slave_different_flag 0066  
                       ??_Organize_Datas 005A                         __CFG_FOSC$INTOSC 0000  
                ??_Initialize_Parameters 0059                                _TRISAbits 008C  
                              _TRISBbits 008D                                _TRISCbits 008E  
                        ??_ChangeAddress 0057                      __size_of_Write_data 0041  
                            _Store_Datas 0023                                _TXSTAbits 019E  
                  ??_slave_address_check 0072                           _Pin_Initialize 0502  
                         __end_of___bmul 0526                             ??_Initialize 005A  
                            _BAUDCONbits 019F        Store_Datas@number_of_receive_data 0073  
                    start_initialization 0010               ??_EUSART_ERROR_from_master 0070  
                      ??_UART_Initialize 0055           __size_of_Reception_from_master 0047  
          __end_of_Reception_from_master 03B3                       __end_of_Initialize 04F0  
                   Write_Address@address 0055                   __end_of_Pin_Initialize 0514  
                               ??___bmul 0056                              __pdataBANK0 0066  
             __size_of_INTERRUPT_HANDLER 000A                        ChangeAddress@None 0058  
                   Write_data@servo_data 0055                                ___latbits 0001  
                          __pcstackBANK0 004D                             _Receive_flag 0067  
                               ?_SetData 0070                          ?_Pin_Initialize 0070  
           ??_Reception_from_master_main 0060                             ??_Write_data 0057  
     Reception_from_master@slave_address 0053           __size_of_Oscillator_Initialize 0004  
          __end_of_Oscillator_Initialize 053F                    __end_of_Write_Address 04C7  
                     __end_of_Write_data 03F4                                 _LATAbits 010C  
                               _LATBbits 010D                                 _LATCbits 010E  
                              clear_ram0 0535                                 _PIE1bits 0091  
                               _PIR1bits 0011                   Initialize_Parameters@i 002D  
                         _address_status 0035           __size_of_Initialize_Parameters 0060  
          __end_of_Initialize_Parameters 036C                             ?_Store_Datas 0072  
                       __size_of_SetData 0016            slave_address_check@data_count 0075  
                        _UART_Initialize 04F0                                 __ptext10 0502  
                               __ptext11 053B                                 __ptext12 030C  
                               __ptext13 0514                                 __ptext15 036C  
                               __ptext16 0447                                 __ptext17 0023  
                               __ptext18 0526                    __end_of_ChangeAddress 048E  
                          __size_of_main 0024              __end_of_slave_address_check 046B  
                   Organize_Datas@Buffer 0055       __end_of_Reception_from_master_main 04AE  
             _Reception_from_master_main 048E                     Organize_Datas@RxData 005F  
                               int$flags 007E                                 main@argc 0061  
                               main@argv 0063                               _INTCONbits 000B  
                               intlevel1 0000                  __size_of_Organize_Datas 015D  
                       ??_Pin_Initialize 0055                        __CFG_CLKOUTEN$OFF 0000  
                  _Reception_from_master 036C        __size_of_EUSART_ERROR_from_master 000F  
              ?_EUSART_ERROR_from_master 0070                  __end_of_UART_Initialize 0502  
          slave_address_check@slave_flag 0071                     __size_of_Store_Datas 018C  
